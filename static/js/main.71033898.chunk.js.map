{"version":3,"sources":["worker/bodyPix.js","serviceWorker.js","context/webcam.js","components/Loader.js","components/SelectAndCheck.js","components/WebcamSelect.js","components/PermissionNeeded.js","components/Webcam.js","lib/constants.js","hooks/speech.js","hooks/audioController.js","context/audio.js","lib/screenConstants.js","components/GlobalHeader.js","components/Null.js","components/DefaultHeader.js","components/GameScreens/ScreenHeader.js","lib/score.js","components/MasksGrid.js","components/ScoreResults.js","components/CapturedMasks.js","components/GameScreens/SinglePlayer/PracticeFooter.js","components/GameScreens/ScreenFooter.js","components/Options.js","components/SelectGameMode.js","components/FileUpload.js","components/GameSelect.js","components/ProgressBar.js","lib/util.js","hooks/loopHandlers/simpleGame.js","hooks/iterateMask.js","hooks/zip.js","hooks/loopHandlers/captureMasks.js","hooks/screenHooks/practice.js","components/GameScreens/SinglePlayer/Practice.js","hooks/screenHooks/survival.js","components/GameScreens/SinglePlayer/Survival.js","components/ChoosePlayers.js","hooks/screenHooks/timeAttack.js","components/GameScreens/SinglePlayer/TimeAttack.js","components/GameScreens/ScreenContent.js","hooks/screenController.js","hooks/bodyPixController.js","context/bodyPix.js","hooks/loop.js","hooks/loopTime.js","hooks/lapTimer.js","hooks/game.js","components/Game.js","components/Main/NoWebcam.js","components/Main/index.js","App/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Boolean","window","location","hostname","match","webcamContext","createContext","useWebcam","state","useContext","Error","hasVideo","navigator","mediaDevices","getUserMedia","WebcamProvider","children","rootRef","useRef","videoRef","canvasRef","useState","ctx","setCtx","flipX","setFlipX","ready","setReady","cameras","setCameras","hidden","__setHidden","scratchpad","setScratchpad","videoError","setVideoError","videoStream","setVideoStream","permissionNeeded","setPermissionNeeded","permissionDenied","setPermissionDenied","undefined","currentDeviceId","setCurrentDeviceId","autoStartDeviceId","_setAutoStartDeviceId","useEffect","current","getContext","canvas","document","createElement","width","height","_ctx","setVisible","useCallback","_setHidden","clearScratchpad","clearRect","clearCanvas","stopVideo","getTracks","forEach","track","stop","startVideo","userConstraintsOrDeviceIdx","a","console","error","userConstraints","isDeviceIdx","deviceIdx","log","constraints","video","exact","audio","deviceId","stream","getCapabilities","srcObject","message","toLowerCase","includes","Promise","all","resolve","onloadedmetadata","onloadeddata","then","start","discoverCameras","enumerateDevices","devices","foundCameras","filter","kind","label","map","currentCamera","idx","lastIndexOf","slice","toggleFlipX","setAutoStartDeviceId","localStorage","setItem","clearAutoStartDeviceId","removeItem","imageDataToDataUri","imageData","putImageData","dataUri","toDataURL","dataUriToImageData","img","Image","src","onload","drawImage","getImageData","getVideoAsImageData","autoStartId","getItem","foundEmptyDevice","foundDeviceId","reduce","acc","length","warn","hasFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullScreen","setFullScreen","onTransition","isFullScreen","fullscreenElement","addEventListener","removeEventListener","enterFullScreen","exitFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","context","useMemo","Provider","value","Loader","color","styleProps","useSpring","to","opacity","from","config","stiff","div","style","version","id","xmlns","x","y","viewBox","enableBackground","fill","d","attributeName","attributeType","type","dur","repeatCount","noop","useStyles","makeStyles","theme","root","props","position","arrowIcon","marginLeft","spacing","tooltip","margin","arrow","fontSize","content","display","borderStyle","paper","border","popper","top","left","marginTop","borderWidth","borderColor","palette","grey","bottom","marginBottom","right","marginRight","SelectAndCheck","classes","Math","random","isMountedRef","anchorEl","setAnchorEl","arrowRef","setArrowRef","handleClickSelect","event","currentTarget","closeSelect","handleCloseSelect","onClose","handleClickCheckbox","onClickCheckbox","target","handleClickSelectItem","onSelect","open","className","Button","disableRipple","variant","aria-haspopup","button","onClick","aria-controls","SelectProps","activeTitle","title","Menu","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuProps","options","i","key","text","selected","tooltipTitle","checked","checkboxValue","TooltipAndCheckbox","_Checkbox","Checkbox","tooltipText","Tooltip","PopperProps","popperOptions","modifiers","enabled","element","Fragment","ref","enterDelay","tooltipEnterDelay","leaveDelay","tooltipLeaveDelay","aria-label","placement","tooltipPlacement","MenuItem","MenuItemProps","ListItemText","primary","toString","WebcamSelect","webcam","selectedCamera","_selectedCamera","none","some","camera","handleSelectCamera","handleSetDefaultCamera","alignItems","justifyContent","padding","borderRadius","textAlign","PermissionNeeded","slideProps","transform","slow","fadeProps","wobbly","Paper","container","Typography","component","rel","href","fs","maxWidth","paddingLeft","paddingRight","overflow","zIndex","background","overlay","overlayColor","loader","Webcam","autoPlay","videoWidth","videoHeight","IconButton","synth","speechSynthesis","useAudioController","audioRef","audioState","setAudioState","speech","voices","setVoices","voice","setVoice","allVoices","getVoices","say","utterance","SpeechSynthesisUtterance","speak","countdown","onEnd","onEach","setTimeout","Array","_","num","useSpeech","toggle","stateRef","handlers","audioContext","useAudio","AudioProvider","screenTypes","screenStates","screen","DEFAULT","PLAY","players","SINGLE_PLAYER","MULTIPLAYER","mode","PRACTICE","SURVIVAL","TIME_ATTACK","LOCAL","REMOTE","wipScreens","item","screenStatesArrays","Object","entries","stateKey","statesObj","values","modeAcc","playerModeKey","playerModesObj","initialScreenState","btn","back","volume","memo","onHomeScreen","size","goHome","goBack","classnames","Null","heading","DefaultHeader","game","Headers","ScreenHeader","screenState","HeaderContent","rawScoreToTenBinScore","score","p","max","min","round","tenBinScoreToPercent","scoreToColor","alpha","r","g","hex","b","hexToRGB","red","green","blue","rawScoreToColor","masks","masksHeader","masksList","flexFlow","maskContainer","imgContainer","removeMask","transition","iconBtn","backgroundColor","actions","MasksGrid","actionButtons","getDataUri","getImageChild","getPaperProps","PaperProps","Icon","maskItem","paperProps","alt","ScoreResults","results","handleClose","gameScoreAverage","binPercentScore","scoreColor","fixedGameScore","toFixed","CandidateMasks","captureMasks","handlePlay","PlayIcon","DownloadIcon","downloadMasks","CloseIcon","removeAllMasks","binary","PracticeFooter","useGame","simpleGame","handlePlayCapturedMasks","scores","clearScores","CapturedMasks","Footers","ScreenFooter","Footer","flexDirection","minWidth","Options","trail","useTrail","buttons","offset","Component","visible","componentProps","gameMode","header","SelectGameMode","handleSetGameMode","setGameMode","disabled","fileInput","FileUpload","onChange","multiple","buttonProps","fileRef","handleFileUpload","fileObject","disallowMultiple","allFiles","files","filteredFiles","resetFile","GameSelect","setWidth","clientWidth","React","handleOpen","handleClick","fullWidth","containerRef","flip","pWebkitTransform","filler","completed","ProgressBar","getOpenCvMaskFromSegmentation","segmentation","flipped","data","binaryBytes","Uint8ClampedArray","parseInt","isPerson","bytes_index","binaryImageData","ImageData","segData","cv","matFromImageData","rgbaPlanes","MatVector","split","pre_mask","Mat","threshold","get","THRESH_BINARY","contours","hierarchy","findContours","RETR_CCOMP","CHAIN_APPROX_SIMPLE","mask","zeros","rows","cols","CV_8UC1","contourArea","drawContours","LINE_8","delete","getSegmentationeOverlayAndBinaryImageData","CV_8UC4","setTo","borderMask","M","ones","CV_8U","anchor","Point","dilate","BORDER_CONSTANT","morphologyDefaultBorderValue","subtract","merge","overlayImageData","getScore","targetImageData","bytes","union","intersection","isInPolygon","isIntersection","isMissedPolygon","isPersonOutOfPolygon","isInteresting","getScoreAndOverlayForSegmentationAndImageData","segmentationMask","segOverlay","segOverlayImageData","targetData","targetRgbaPlanes","mergedImage","addWeighted","mergedOverlayImageData","targetOverlay","getMaskName","useSimpleGame","promRef","roundTracker","maskIterator","masksRef","maskRef","maskIdxRef","_setMasks","setMasks","newMasks","reset","next","currentMask","getNumMasks","floor","hasMasks","useIterateMask","setScores","zip","zipLoading","setZipLoading","loadZippedMasks","file","JSZip","loadAsync","endsWith","async","binaryMasks","b64","masksAsImageData","handleZipInputChange","handleLoadPreparedMasks","filename","external","reject","JSZipUtils","getBinaryContent","process","err","handleLoadRandomMaskSet","loading","useZip","progressPercent","setProgressPercent","handleLoop","controller","time","first","useTimer","maxLaps","printSeconds","announceSeconds","lapDuration","onLap","predict","progress_percent","lapTime","handleSurvivalLoop","handleTimeAttackLoop","postLapDelay","currentMaskIdx","catch","useCaptureMasks","index","folder","imageDataUri","decode","dataBase64","base64","generateAsync","zipFile","blob","msSaveOrOpenBlob","msSaveBlob","elem","URL","createObjectURL","download","body","documentElement","appendChild","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","revokeObjectURL","saveAs","onBeforeStartLap","overlayDataUri","binaryDataUri","usePractice","loop","loopType","setLoopType","looping","handleClickGame","handleStartRandomGame","handleClickCaptureMasks","scrollContainer","overflowY","rootTop","rootApart","optionsTop","captures","progress","Practice","practice","useGameMode","timerColor","useSurvival","loadedRef","Survival","survival","ChoosePlayers","handleSetPlayerMode","setPlayerMode","playerMode","useTimeAttack","TimeAttack","timeAttack","Screens","ScreenContent","Content","reducer","action","newState","bodyPixWorker","BodyPixWorker","bodyPixContext","BodyPixProvider","loadRef","preloadRef","netReady","setNetReady","netPreloaded","setNetPreloaded","load","useBodyPixController","useLoop","useBodyPix","loopTime","lastTimeRef","startTimeRef","totalFramesRef","fpsSumRef","timestamp","resetLapTime","update","deltaTime","fps","avgFps","elapsed","frames","useLoopTime","lapTimer","onBeforeComplete","onBeforeStarted","numLaps","handleLap","secondsPassed","font","fillStyle","fillText","lastSpeech","handlerCalled","handlerResolved","lapNum","clear","useLapTimer","loopingRef","handleLoopRef","setLooping","setStartLoop","setStopLoop","cleanup","requestAnimationFrame","useGameController","setMode","useReducer","dispatch","setScreen","resetState","reverseState","useScreenController","screenHandlers","gameContext","useGameModeHook","NoWebcam","startedRef","createMuiTheme","cvReady","setCvReady","particlesRef","interval","setInterval","clearInterval","Particles","init","selector","CssBaseline","ReactDOM","render","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.71033898.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"load\",\"predict\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"60a0dfbb6ed702cd6027.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {\n  createContext,\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n  useContext,\n} from 'react';\n\nexport const webcamContext = createContext();\n\nexport const useWebcam = () => {\n  const state = useContext(webcamContext);\n\n  if (!state) {\n    throw new Error('useWebcam must be used within a WebcamProvider');\n  }\n\n  return state;\n};\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst AUTOSTART_KEY = 'AutoStartId';\nconst hasVideo = !!navigator?.mediaDevices?.getUserMedia;\n\nconst WebcamProvider = ({ children }) => {\n  const rootRef = useRef();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [ctx, setCtx] = useState(null);\n  const [flipX, setFlipX] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [hidden, __setHidden] = useState(true);\n  const [scratchpad, setScratchpad] = useState(null);\n  const [videoError, setVideoError] = useState(null);\n  const [videoStream, setVideoStream] = useState(null);\n  const [permissionNeeded, setPermissionNeeded] = useState(false);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n  const [currentDeviceId, setCurrentDeviceId] = useState(undefined);\n  const [autoStartDeviceId, _setAutoStartDeviceId] = useState(undefined);\n\n  useEffect(() => {\n    if (canvasRef.current && !ctx) {\n      setCtx(canvasRef.current.getContext('2d'));\n    } else if (ctx && !canvasRef.current) {\n      setCtx(null);\n    }\n  }, [ctx]);\n\n  // create a scratchpad for performing image transformations\n  // without cluttering the main canvas\n  useEffect(() => {\n    if (ready && !scratchpad) {\n      const canvas = document.createElement('canvas');\n      canvas.width = canvasRef.current.width;\n      canvas.height = canvasRef.current.height;\n      const _ctx = canvas.getContext('2d');\n\n      setScratchpad({ ctx: _ctx, canvas });\n    }\n  }, [scratchpad, ready]);\n\n  const setVisible = useCallback(() => {\n    __setHidden(false);\n  }, []);\n\n  const _setHidden = useCallback(() => {\n    __setHidden(true);\n  }, []);\n\n  const clearScratchpad = useCallback(() => {\n    scratchpad.ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [scratchpad]);\n\n  const clearCanvas = useCallback(() => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [ctx]);\n\n  const stopVideo = useCallback(() => {\n    if (videoStream) {\n      videoStream.getTracks().forEach((track) => track.stop());\n    }\n\n    setVideoError(null);\n    setVideoStream(null);\n    setReady(false);\n    setCurrentDeviceId(undefined);\n  }, [videoStream]);\n\n  const startVideo = useCallback(\n    async (userConstraintsOrDeviceIdx) => {\n      stopVideo();\n\n      if (!hasVideo) {\n        const message = 'Video not supported';\n\n        console.error(message);\n        setVideoError(message);\n\n        return;\n      }\n\n      const isDeviceIdx = typeof userConstraintsOrDeviceIdx === 'number';\n\n      const userConstraints = isDeviceIdx ? {} : userConstraintsOrDeviceIdx || {};\n      const deviceIdx = isDeviceIdx ? userConstraintsOrDeviceIdx : userConstraints.deviceIdx;\n\n      try {\n        console.log('Finding Webcams...');\n        const constraints = {\n          video: {\n            width: { exact: userConstraints.width || VIDEO_WIDTH },\n            height: { exact: userConstraints.height || VIDEO_HEIGHT },\n          },\n          audio: false,\n        };\n\n        if (deviceIdx !== undefined) {\n          userConstraints.deviceId = cameras[deviceIdx]?.deviceId;\n        }\n\n        if (userConstraints.deviceId) {\n          constraints.video.deviceId = { exact: userConstraints.deviceId };\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const deviceId = stream.getTracks()[0]?.getCapabilities()?.deviceId;\n\n        console.log('Found webcam!');\n        setVideoStream(stream);\n        setCurrentDeviceId(deviceId);\n        setVideoError(false);\n        setPermissionDenied(false);\n        setPermissionNeeded(false);\n        videoRef.current.srcObject = stream;\n      } catch (e) {\n        const message = 'Error starting video.';\n        console.error(message);\n        console.error(e.message);\n        if (e.message?.toLowerCase?.()?.includes?.('permission denied')) {\n          setPermissionDenied(true);\n        }\n        setVideoStream(null);\n        setReady(false);\n        setVideoError(message);\n\n        return;\n      }\n\n      return await Promise.all([\n        new Promise((resolve) => {\n          videoRef.current.onloadedmetadata = () => resolve();\n        }),\n        new Promise((resolve) => {\n          videoRef.current.onloadeddata = () => resolve();\n        }),\n      ]).then(() => {\n        console.log('Webcam ready!');\n        setReady(true);\n        __setHidden(false);\n      });\n    },\n    [stopVideo, videoRef, cameras],\n  );\n\n  const start = useCallback(async () => startVideo({ deviceId: autoStartDeviceId }), [\n    autoStartDeviceId,\n    startVideo,\n  ]);\n\n  const discoverCameras = useCallback(async () => {\n    const enumerateDevices = navigator?.mediaDevices?.enumerateDevices;\n\n    if (!enumerateDevices) {\n      console.error('Cannot get cameras.');\n\n      return [];\n    }\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const foundCameras = devices\n      .filter(\n        ({ kind, label }) => kind === 'videoinput' && !label.includes('CamTwist'), // filter by video elements and remove CamTwist virtual devices\n      )\n      .map((currentCamera) => {\n        let label;\n        const idx = currentCamera.label.lastIndexOf(' (');\n        if (idx > -1) label = currentCamera.label.slice(0, idx);\n\n        return label ? { deviceId: currentCamera.deviceId, label } : currentCamera;\n      });\n\n    setCameras(foundCameras);\n\n    return foundCameras;\n  }, []);\n\n  const toggleFlipX = useCallback(() => setFlipX((state) => !state), []);\n\n  const setAutoStartDeviceId = useCallback((deviceId) => {\n    window.localStorage.setItem(AUTOSTART_KEY, deviceId);\n    _setAutoStartDeviceId(deviceId);\n  }, []);\n\n  const clearAutoStartDeviceId = useCallback(() => {\n    window.localStorage.removeItem(AUTOSTART_KEY);\n    _setAutoStartDeviceId(null);\n  }, []);\n\n  const imageDataToDataUri = useCallback(\n    (imageData) => {\n      clearScratchpad();\n      scratchpad.ctx.putImageData(imageData, 0, 0);\n      const dataUri = scratchpad.canvas.toDataURL('image/png');\n      clearScratchpad();\n\n      return dataUri;\n    },\n    [scratchpad, clearScratchpad],\n  );\n\n  const dataUriToImageData = useCallback(\n    async (dataUri) => {\n      clearScratchpad();\n      const img = new Image();\n      img.src = dataUri;\n\n      await new Promise((resolve) => {\n        img.onload = () => {\n          scratchpad.ctx.drawImage(img, 0, 0);\n          resolve();\n        };\n      });\n\n      const imageData = scratchpad.ctx.getImageData(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n      clearScratchpad();\n\n      return imageData;\n    },\n    [clearScratchpad, scratchpad],\n  );\n\n  const getVideoAsImageData = useCallback(() => {\n    clearScratchpad();\n    scratchpad.ctx.drawImage(videoRef.current, 0, 0);\n    const imageData = scratchpad.ctx.getImageData(\n      0,\n      0,\n      canvasRef.current.width,\n      canvasRef.current.height,\n    );\n    clearScratchpad();\n\n    return imageData;\n  }, [clearScratchpad, scratchpad]);\n\n  useEffect(() => {\n    discoverCameras().then((foundCameras) => {\n      const autoStartId = window.localStorage.getItem(AUTOSTART_KEY);\n\n      let foundEmptyDevice = false;\n      const foundDeviceId = foundCameras.reduce((acc, { deviceId, label }, idx) => {\n        if (!deviceId) foundEmptyDevice = true;\n\n        return (\n          acc ||\n          (deviceId === autoStartId ||\n          (!autoStartId && foundCameras.length === 1 && idx === 0) ||\n          (!autoStartId && label.includes('Built-in'))\n            ? deviceId\n            : null)\n        );\n      }, null);\n\n      if (foundDeviceId) {\n        setAutoStartDeviceId(foundDeviceId);\n      } else if (foundEmptyDevice) {\n        setPermissionNeeded(true);\n        console.warn('Need video permissions!');\n      } else if (!foundDeviceId && autoStartId) clearAutoStartDeviceId();\n    });\n  }, []); // eslint-disable-line\n\n  const hasFullScreen = !!(\n    rootRef.current?.requestFullscreen ||\n    rootRef.current?.mozRequestFullScreen ||\n    rootRef.current?.webkitRequestFullscreen ||\n    rootRef.current?.msRequestFullscreen\n  );\n\n  const [fullScreen, setFullScreen] = useState(false);\n\n  useEffect(() => {\n    const onTransition = () => {\n      const isFullScreen = !!document.fullscreenElement;\n      setFullScreen(isFullScreen);\n    };\n\n    document.addEventListener('fullscreenchange', onTransition);\n\n    return () => document.removeEventListener('fullscreenchange', onTransition);\n  }, []);\n\n  const enterFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (rootRef.current.requestFullscreen) {\n      rootRef.current.requestFullscreen();\n    } else if (rootRef.current.mozRequestFullScreen) {\n      /* Firefox */\n      rootRef.current.mozRequestFullScreen();\n    } else if (rootRef.current.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      rootRef.current.webkitRequestFullscreen();\n    } else if (rootRef.current.msRequestFullscreen) {\n      /* IE/Edge */\n      rootRef.current.msRequestFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const exitFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const toggleFullScreen = useCallback(() => {\n    if (fullScreen) exitFullScreen();\n    else enterFullScreen();\n  }, [fullScreen, enterFullScreen, exitFullScreen]);\n\n  const context = useMemo(\n    () => ({\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      rootRef,\n      cameras,\n      setFlipX,\n      videoRef,\n      hasVideo,\n      _setHidden,\n      canvasRef,\n      stopVideo,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      clearCanvas,\n      toggleFlipX,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      stop: stopVideo,\n      discoverCameras,\n      permissionNeeded,\n      permissionDenied,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n      isFullScreen: fullScreen,\n    }),\n    [\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      cameras,\n      setFlipX,\n      _setHidden,\n      stopVideo,\n      fullScreen,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      toggleFlipX,\n      clearCanvas,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      discoverCameras,\n      permissionNeeded,\n      permissionDenied,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n    ],\n  );\n\n  return <webcamContext.Provider value={context}>{children}</webcamContext.Provider>;\n};\n\nexport default WebcamProvider;\n","import React from 'react';\nimport { useSpring, animated, config } from 'react-spring';\n\nconst Loader = ({ color = '#fff' }) => {\n  const styleProps = useSpring({ to: { opacity: 1 }, from: { opacity: 0 }, config: config.stiff });\n\n  // https://codepen.io/nikhil8krishnan\n  return (\n    <animated.div style={styleProps}>\n      <svg\n        version=\"1.1\"\n        id=\"L7\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 100 100\"\n        enableBackground=\"new 0 0 100 100\"\n      >\n        <path\n          fill={color}\n          d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n    c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n    c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"1s\"\n            from=\"0 50 50\"\n            to=\"-360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n    L82,35.7z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </animated.div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback, useState } from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nconst noop = () => {};\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    position: 'relative',\n  }),\n  arrowIcon: (props) => ({\n    marginLeft: theme.spacing(1),\n  }),\n  tooltip: (props) => ({\n    position: 'relative',\n    margin: 0,\n  }),\n  arrow: (props) => ({\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  }),\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n  popper: (props) => ({\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.grey[700]} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.grey[700]} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.grey[700]} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.grey[700]}`,\n      },\n    },\n  }),\n}));\n\nconst SelectAndCheck = (props) => {\n  const classes = useStyles(props);\n  const id = useMemo(Math.random, []);\n\n  const isMountedRef = useRef();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [arrowRef, setArrowRef] = useState(null);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  const handleClickSelect = useCallback((event) => {\n    if (isMountedRef.current) setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeSelect = useCallback(() => {\n    if (isMountedRef.current) setAnchorEl(null);\n  }, []);\n\n  const handleCloseSelect = useCallback(async () => {\n    const keepOpen = await (props.onClose || noop)();\n\n    if (keepOpen !== true) {\n      closeSelect();\n    }\n  }, [closeSelect, props.onClose]);\n\n  const handleClickCheckbox = useCallback(\n    (event) => {\n      (props.onClickCheckbox || noop)(event.target.value, handleCloseSelect);\n    },\n    [props.onClickCheckbox, handleCloseSelect],\n  );\n\n  const handleClickSelectItem = useCallback(\n    (value) => async (event) => {\n      if (event.target.type === 'checkbox') {\n        return;\n      }\n\n      const keepOpen = await (props.onSelect || noop)(value);\n\n      if (keepOpen !== true) {\n        handleCloseSelect();\n      }\n    },\n    [handleCloseSelect, props.onSelect],\n  );\n\n  const open = !!anchorEl;\n\n  return (\n    <div className={classes.root}>\n      <Button\n        disableRipple\n        variant=\"outlined\"\n        aria-haspopup=\"true\"\n        className={classes.button}\n        onClick={handleClickSelect}\n        aria-controls={`select-and-check-${id}`}\n        {...props.SelectProps}\n      >\n        {open ? props.activeTitle || props.title : props.title}\n        {open ? (\n          <ArrowDropUpIcon className={classes.arrowIcon} />\n        ) : (\n          <ArrowDropDownIcon className={classes.arrowIcon} />\n        )}\n      </Button>\n      <Menu\n        keepMounted\n        open={open}\n        elevation={0}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        onClose={handleCloseSelect}\n        id={`select-and-check-${id}`}\n        classes={{ paper: classes.paper }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        {...props.MenuProps}\n      >\n        {props.options?.map(\n          ({ key, value, text, selected, tooltipTitle, checked, checkboxValue }, i) => {\n            let TooltipAndCheckbox = null;\n\n            if (typeof checked === 'boolean') {\n              const _Checkbox = (\n                <Checkbox\n                  checked={checked}\n                  onClick={handleClickCheckbox}\n                  value={checkboxValue === undefined ? value : checkboxValue}\n                />\n              );\n              const tooltipText = tooltipTitle || props.tooltipTitle;\n\n              TooltipAndCheckbox = tooltipText ? (\n                <Tooltip\n                  classes={{ tooltip: classes.tooltip, popper: classes.popper }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: !!arrowRef,\n                          element: arrowRef,\n                        },\n                      },\n                    },\n                  }}\n                  title={\n                    <React.Fragment>\n                      {tooltipText}\n                      <span className={classes.arrow} ref={setArrowRef} />\n                    </React.Fragment>\n                  }\n                  enterDelay={props.tooltipEnterDelay === undefined ? 750 : props.tooltipEnterDelay}\n                  leaveDelay={props.tooltipLeaveDelay || 0}\n                  aria-label=\"checkbox\"\n                  placement={props.tooltipPlacement || 'top'}\n                >\n                  {_Checkbox}\n                </Tooltip>\n              ) : (\n                _Checkbox\n              );\n            }\n\n            return (\n              <MenuItem\n                key={key || i}\n                onClick={handleClickSelectItem(value)}\n                selected={selected}\n                {...props.MenuItemProps}\n              >\n                {TooltipAndCheckbox}\n                <ListItemText primary={text || value?.toString()} />\n              </MenuItem>\n            );\n          },\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nSelectAndCheck.propTypes = {\n  styles: PropTypes.object,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  onSelect: PropTypes.func,\n  MenuProps: PropTypes.object,\n  SelectProps: PropTypes.object,\n  activeTitle: PropTypes.string,\n  tooltipTitle: PropTypes.string,\n  MenuItemProps: PropTypes.object,\n  onClickCheckbox: PropTypes.func,\n  tooltipEnterDelay: PropTypes.number,\n  tooltipLeaveDelay: PropTypes.number,\n  tooltipPlacement: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default SelectAndCheck;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback } from 'react';\n\nimport SelectAndCheck from './SelectAndCheck';\nimport { useWebcam } from '../context/webcam';\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({}),\n}));\n\nconst WebcamSelect = (props) => {\n  const webcam = useWebcam();\n  const classes = useStyles({ ...props, ...webcam });\n\n  const selectedCamera = useMemo(() => {\n    let _selectedCamera = { deviceId: null, label: null, none: true };\n\n    if (!webcam.currentDeviceId) {\n      return _selectedCamera;\n    }\n\n    webcam.cameras.some((camera) => {\n      if (camera.deviceId === webcam.currentDeviceId) {\n        _selectedCamera = camera;\n\n        return true;\n      }\n\n      return false;\n    });\n\n    return _selectedCamera;\n  }, [webcam.cameras, webcam.currentDeviceId]);\n\n  const handleSelectCamera = useCallback(\n    (deviceId) => {\n      if (webcam.currentDeviceId !== deviceId) {\n        webcam.startVideo({ deviceId });\n      }\n    },\n    [webcam],\n  );\n\n  const handleSetDefaultCamera = useCallback(\n    (deviceId) => {\n      if (webcam.autoStartDeviceId === deviceId) {\n        webcam.clearAutoStartDeviceId();\n      } else {\n        webcam.setAutoStartDeviceId(deviceId);\n        handleSelectCamera(deviceId);\n      }\n    },\n    [webcam, handleSelectCamera],\n  );\n\n  return (\n    <div className={classes.root}>\n      <SelectAndCheck\n        activeTitle=\"Select Camera\"\n        title={\n          webcam.cameras?.length\n            ? selectedCamera.label || 'No Camera Selected'\n            : 'No Cameras Detected'\n        }\n        onSelect={handleSelectCamera}\n        onClickCheckbox={handleSetDefaultCamera}\n        options={webcam.cameras.map((camera) => ({\n          key: camera.label,\n          value: camera.deviceId,\n          text: camera.label || 'Unknown Device',\n          selected: camera.deviceId === webcam.currentDeviceId,\n          checked: webcam.autoStartDeviceId === camera.deviceId,\n          tooltipTitle:\n            webcam.autoStartDeviceId === camera.deviceId ? 'Remove Default' : 'Set Default',\n        }))}\n      />\n    </div>\n  );\n};\n\nWebcamSelect.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default WebcamSelect;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport WebcamSelect from './WebcamSelect';\n\nimport { Paper } from '@material-ui/core';\nimport { useSpring, config, animated } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    '& h1': {\n      marginBottom: theme.spacing(2),\n    },\n    '& p': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nconst PermissionNeeded = (props) => {\n  const classes = useStyles(props);\n\n  const slideProps = useSpring({\n    transform: 'translate3d(0,0px,0)',\n    from: { transform: 'translate3d(0,-500px,0)' },\n    config: config.slow,\n  });\n\n  const fadeProps = useSpring({\n    to: { opacity: props.permissionDenied ? 1 : 0 },\n    config: config.wobbly,\n  });\n\n  return (\n    <div className={classes.root}>\n      <animated.div style={slideProps}>\n        <Paper elevation={4} className={classes.paper}>\n          <div className={classes.container}>\n            {!props.permissionDenied ? (\n              <>\n                <Typography component=\"h1\" variant=\"h6\">\n                  In order to play the game, you must grant permission to access your webcam.\n                </Typography>\n                <Typography component=\"p\">Please select a camera.</Typography>\n                <WebcamSelect />\n              </>\n            ) : (\n              <animated.div style={fadeProps}>\n                <Typography component=\"h1\" variant=\"h6\">\n                  It looks like you have denied webcam access.\n                </Typography>\n                <Typography component=\"p\">\n                  Please take a look at{' '}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://support.google.com/chrome/answer/2693767\"\n                  >\n                    this article\n                  </a>{' '}\n                  in order to enable access.\n                </Typography>\n                <Typography component=\"p\">\n                  Once your webcam has been enabled, return here to play the game!\n                </Typography>\n              </animated.div>\n            )}\n          </div>\n        </Paper>\n      </animated.div>\n    </div>\n  );\n};\n\nPermissionNeeded.propTypes = {};\n\nexport default PermissionNeeded;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useSpring, animated, config } from 'react-spring';\nimport EnterFullScreen from '@material-ui/icons/Fullscreen';\nimport ExitFullScreen from '@material-ui/icons/FullscreenExit';\n\nimport { maxWidth } from '../lib/constants';\nimport { useWebcam } from '../context/webcam';\n\nimport Loader from './Loader';\nimport PermissionNeeded from './PermissionNeeded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ isFullScreen: fs }) => ({\n    maxWidth,\n    margin: '0 auto',\n    position: 'relative',\n    height: `calc(0.5625 * (100vw - ${theme.spacing(4)}px))`,\n    [`@media(min-width: ${maxWidth}px)`]: {\n      height: fs ? '100%' : `calc(0.5625 * (${maxWidth}px - ${theme.spacing(4)}px))`,\n    },\n    ...(fs\n      ? {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }\n      : {}),\n  }),\n  container: ({ isFullScreen: fs }) => ({\n    width: '100%',\n    position: 'relative',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  video: ({ flipX, isFullScreen: fs }) => ({\n    width: '100%',\n    height: '100%',\n    borderRadius: fs ? 0 : theme.spacing(1),\n    ...(flipX\n      ? {\n          'p-webkit-transform': 'scaleX(- 1)',\n          transform: 'scaleX(-1)',\n        }\n      : {}),\n  }),\n  canvas: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  children: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    bottom: 5,\n    zIndex: 1,\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  fullScreen: {\n    position: 'absolute',\n    bottom: theme.spacing(1.5),\n    right: ({ isFullScreen: fs }) => theme.spacing(fs ? 1.5 : 3),\n    zIndex: 20,\n    '&:hover': {\n      background: 'rgba(255,255,255,0.25)',\n    },\n  },\n  overlay: ({ overlayColor, isFullScreen }) => ({\n    background: overlayColor,\n    position: 'absolute',\n    top: 0,\n    bottom: 5,\n    left: isFullScreen ? 0 : theme.spacing(2),\n    right: isFullScreen ? 0 : theme.spacing(2),\n    borderRadius: isFullScreen ? 0 : theme.spacing(1),\n    zIndex: 0,\n  }),\n  loader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > div': {\n      width: 100,\n      height: 100,\n    },\n  },\n  paper: {\n    top: 0,\n    bottom: 5,\n    zIndex: -1,\n    position: 'absolute',\n    left: theme.spacing(2),\n    right: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n  },\n}));\n\nconst Webcam = ({ overlay, ...props }) => {\n  const webcam = useWebcam();\n  const overlayColor = typeof overlay !== 'string' ? 'rgba(255,255,255,0.5)' : overlay;\n  const classes = useStyles({ ...props, ...webcam, overlayColor });\n\n  const styleProps = useSpring({ to: { opacity: !webcam.hidden ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div ref={webcam.rootRef} className={classes.root}>\n      <animated.div style={styleProps} className={classes.container}>\n        <>\n          <video\n            autoPlay={true}\n            ref={webcam.videoRef}\n            className={classes.video}\n            width={webcam.videoRef?.current?.videoWidth}\n            height={webcam.videoRef?.current?.videoHeight}\n          />\n          <canvas\n            ref={webcam.canvasRef}\n            className={classes.canvas}\n            width={webcam.videoRef?.current?.videoWidth}\n            height={webcam.videoRef?.current?.videoHeight}\n          />\n          {!webcam.hidden && overlay && <div className={classes.overlay} />}\n          {props.children && !webcam.hidden && (\n            <div className={classes.children}>{props.children}</div>\n          )}\n          {webcam.hasFullScreen && (\n            <IconButton\n              color=\"secondary\"\n              className={classes.fullScreen}\n              onClick={webcam.toggleFullScreen}\n            >\n              {webcam.isFullScreen ? (\n                <ExitFullScreen color=\"secondary\" />\n              ) : (\n                <EnterFullScreen color=\"secondary\" />\n              )}\n            </IconButton>\n          )}\n        </>\n        {!webcam.isFullScreen && <Paper elevation={4} className={classes.paper} />}\n      </animated.div>\n      {webcam.permissionNeeded ? (\n        <PermissionNeeded permissionDenied={webcam.permissionDenied} />\n      ) : (\n        webcam.hidden && (\n          <div className={classes.loader}>\n            <div>\n              <Loader color=\"#000\" />\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nWebcam.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Webcam;\n","export const maxWidth = 1100;\n\nexport const numShippedMasks = 3;\n","import { useState, useEffect, useCallback } from 'react';\n\nconst synth = window.speechSynthesis;\n\nexport const useSpeech = (audioRef) => {\n  if (!audioRef) {\n    throw new Error('audioRef is required when calling useSpeech');\n  }\n\n  const [voices, setVoices] = useState(null);\n  const [voice, setVoice] = useState(null);\n\n  useEffect(() => {\n    if (!voices) {\n      const allVoices = synth.getVoices();\n      setVoices(allVoices);\n      setVoice(allVoices[0]);\n    }\n  }, [voices]);\n\n  const say = useCallback(\n    (text) => {\n      if (!audioRef.current) return;\n\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.voice = voice;\n      synth.speak(utterance);\n    },\n    [voice, audioRef],\n  );\n\n  const countdown = useCallback(\n    (from, { onEnd, onEach } = {}) => {\n      if (onEnd) setTimeout(onEnd, from * 1000);\n      Array.from({ length: from }).forEach((_, idx) => {\n        const num = from - idx;\n        setTimeout(() => {\n          say(num);\n          if (onEach) onEach(num);\n        }, idx * 1000);\n      });\n    },\n    [say],\n  );\n\n  return { say, countdown };\n};\n","import { useMemo, useRef, useState, useEffect, useCallback } from 'react';\nimport { useSpeech } from './speech';\n\nconst LS_AUDIO = '__audio_muted__';\n\nexport const useAudioController = () => {\n  const audioRef = useRef(true);\n  const [audioState, setAudioState] = useState(true);\n\n  const speech = useSpeech(audioRef);\n\n  useEffect(() => {\n    const muteAudio = localStorage.getItem(LS_AUDIO);\n\n    if (muteAudio) {\n      setAudioState(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (audioState && !audioRef.current) {\n      audioRef.current = true;\n      localStorage.removeItem(LS_AUDIO);\n    } else if (!audioState && audioRef.current) {\n      audioRef.current = false;\n      localStorage.setItem(LS_AUDIO, 'true');\n    }\n  }, [audioState]);\n\n  const toggle = useCallback(() => {\n    setAudioState((state) => !state);\n  }, []);\n\n  const audio = useMemo(\n    () => ({\n      state: audioState,\n      stateRef: audioRef,\n      handlers: { toggle, speech },\n    }),\n    [audioState, toggle, speech],\n  );\n\n  return audio;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useAudioController } from '../hooks/audioController';\n\nexport const audioContext = createContext();\n\nexport const useAudio = () => {\n  const state = useContext(audioContext);\n\n  if (state === undefined) {\n    throw new Error('useAudio must be used within a AudioProvider');\n  }\n\n  return state;\n};\n\nconst AudioProvider = ({ children }) => {\n  const context = useAudioController();\n\n  return <audioContext.Provider value={context}>{children}</audioContext.Provider>;\n};\n\nexport default AudioProvider;\n","export const screenTypes = {\n  SET_SCREEN: 'set_screen',\n  SET_PLAYER_MODE: 'set_player_mode',\n  SET_GAME_MODE: 'set_game_mode',\n  REVERSE: 'reverse_state',\n  RESET: 'reset_state',\n};\n\nconst SINGLE_PLAYER = 'Single Player';\nconst MULTIPLAYER = 'Multi Player';\n\nexport const screenStates = {\n  screen: {\n    DEFAULT: 'start',\n    PLAY: 'play',\n  },\n  players: {\n    SINGLE_PLAYER,\n    MULTIPLAYER,\n    DEFAULT: null,\n  },\n  mode: {\n    [SINGLE_PLAYER]: {\n      PRACTICE: 'Practice',\n      SURVIVAL: 'Survival',\n      TIME_ATTACK: 'Time Attack',\n    },\n    [MULTIPLAYER]: {\n      LOCAL: 'Local Multiplayer',\n      REMOTE: 'Remote Multiplayer',\n    },\n    DEFAULT: null,\n  },\n};\n\n// identifies these values as works in progress, ie disabled buttons\nexport const wipScreens = [\n  screenStates.players.MULTIPLAYER,\n  screenStates.mode[MULTIPLAYER].LOCAL,\n  screenStates.mode[MULTIPLAYER].REMOTE,\n].reduce((acc, item) => ({ ...acc, [item]: !!1 }), {});\n\nexport const screenStatesArrays = Object.entries(screenStates).reduce(\n  (acc, [stateKey, statesObj]) => ({\n    ...acc,\n    [stateKey]:\n      stateKey !== 'mode'\n        ? Object.values(statesObj).filter((_) => _)\n        : Object.entries(statesObj).reduce(\n            (modeAcc, [playerModeKey, playerModesObj]) => ({\n              ...modeAcc,\n              [playerModeKey]: playerModesObj === null ? null : Object.values(playerModesObj), // check for the default: null thing and get rid of it\n            }),\n            {},\n          ),\n  }),\n  {},\n);\n\nexport const initialScreenState = {\n  screen: screenStates.screen.DEFAULT,\n  mode: screenStates.mode.DEFAULT,\n  players: screenStates.players.DEFAULT,\n};\n","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { memo } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport BackIcon from '@material-ui/icons/ArrowLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport MuteVolumeIcon from '@material-ui/icons/VolumeMute';\n\nimport WebcamSelect from './WebcamSelect';\nimport { useAudio } from '../context/audio';\nimport { screenStates } from '../lib/screenConstants';\nimport { maxWidth } from '../lib/constants';\nimport { useSpring, config, animated } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    border: '2px solid grey',\n  },\n  back: {\n    marginLeft: theme.spacing(2),\n  },\n  options: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    width: '100%',\n    maxWidth,\n    display: 'flex',\n    margin: '0 auto',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  right: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  volume: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst GlobalHeader = (props) => {\n  const classes = useStyles();\n  const audio = useAudio();\n\n  const onHomeScreen = props.screen === screenStates.screen.DEFAULT;\n  const styleProps = useSpring({ to: { opacity: !onHomeScreen ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div className={classes.options}>\n      <div>\n        {!onHomeScreen && (\n          <animated.div style={styleProps}>\n            <IconButton className={classes.btn} size=\"small\" onClick={props.goHome}>\n              <HomeIcon />\n            </IconButton>\n            <IconButton\n              size=\"small\"\n              onClick={props.goBack}\n              className={classnames(classes.btn, classes.back)}\n            >\n              <BackIcon />\n            </IconButton>\n          </animated.div>\n        )}\n      </div>\n      <div className={classes.right}>\n        <WebcamSelect />\n        <IconButton className={classes.volume} size=\"small\" onClick={audio.handlers.toggle}>\n          {audio.state ? <MuteVolumeIcon /> : <VolumeOffIcon />}\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nGlobalHeader.propTypes = {\n  mode: PropTypes.string,\n  screen: PropTypes.string,\n  goHome: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n};\n\nexport default memo(GlobalHeader);\n","const Null = () => null;\n\nexport default Null;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n  },\n  heading: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst DefaultHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <header className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\n        {props.game.screen.state.screen}\n      </Typography>\n    </header>\n  );\n};\n\nDefaultHeader.propTypes = {\n  game: PropTypes.object.isRequired,\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default DefaultHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Null from '../Null';\nimport DefaultHeader from '../DefaultHeader';\nimport { screenStates } from '../../lib/screenConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Headers = {\n  [screenStates.screen.DEFAULT]: {\n    [screenStates.players.DEFAULT]: Null,\n  },\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: Null,\n    [screenStates.players.MULTIPLAYER]: Null,\n  },\n};\n\nconst ScreenHeader = (props) => {\n  const classes = useStyles();\n\n  const { screen, players } = props.screenState;\n\n  const HeaderContent = Headers[screen]?.[players] || DefaultHeader;\n\n  return (\n    <header className={classes.root}>\n      <HeaderContent />\n    </header>\n  );\n};\n\nScreenHeader.propTypes = {\n  screenState: PropTypes.object.isRequired,\n};\n\nexport default ScreenHeader;\n","import hexToRGB from 'hex-rgb';\n\nexport const rawScoreToTenBinScore = (score) => {\n  // Takes in score from [0-100] and returns score [1-10]\n  const lowThresh = 25;\n  const highThresh = 88;\n  const p = (score - lowThresh) / (highThresh - lowThresh);\n  return Math.max(1, Math.min(10, Math.round(p * 10)));\n};\n\nexport const tenBinScoreToPercent = (score) => {\n  return (score / 10) * 100;\n};\n\nexport const scoreToColor = (score, alpha) => {\n  // Returns a hex color value from reg to green based on score from 0-100\n  // Using from: https://gist.github.com/mlocati/7210513\n  var r,\n    g,\n    b = 0;\n  if (score < 50) {\n    r = 255;\n    g = Math.round(5.1 * score);\n  } else {\n    g = 255;\n    r = Math.round(510 - 5.1 * score);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  const hex = '#' + ('000000' + h.toString(16)).slice(-6);\n\n  if (alpha) {\n    const { red, green, blue } = hexToRGB(hex);\n\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n  }\n\n  return hex;\n};\n\nexport const rawScoreToColor = (score, alpha) =>\n  scoreToColor(tenBinScoreToPercent(rawScoreToTenBinScore(score)), alpha);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  masks: {\n    padding: theme.spacing(2),\n    background: 'rgba(255,255,255,0.5)',\n  },\n  masksHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  masksList: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-around',\n  },\n  maskContainer: {\n    marginTop: theme.spacing(2),\n  },\n  imgContainer: {\n    width: 200,\n    position: 'relative',\n    border: '1px solid grey',\n    padding: theme.spacing(0.5),\n    borderRadius: theme.spacing(1),\n    '&:hover': {\n      '& > div': {\n        background: 'rgba(255,0,0,0.65)',\n      },\n    },\n  },\n  img: {\n    width: '100%',\n    background: 'rgba(0,0,0,0)',\n  },\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n  actions: {\n    '& > button': {\n      marginRight: theme.spacing(1),\n      '& :last-of-type': {\n        marginRight: 0,\n      },\n    },\n  },\n}));\n\nconst MasksGrid = (props) => {\n  const classes = useStyles();\n\n  const {\n    masks,\n    onClose,\n    title,\n    actions,\n    actionButtons,\n    getDataUri,\n    getImageChild,\n    getPaperProps,\n    PaperProps = {},\n  } = props;\n\n  return (\n    !!masks?.length && (\n      <Paper className={classes.masks} elevation={4}>\n        <div className={classes.masksHeader}>\n          {typeof title === 'string' ? (\n            <Typography variant=\"h6\" component=\"h3\">\n              {title}\n            </Typography>\n          ) : (\n            title || null\n          )}\n          {actions || actionButtons ? (\n            <div className={classes.actions}>\n              {actionButtons.map(({ Icon, onClick, key }) => (\n                <IconButton key={key} size=\"small\" onClick={onClick}>\n                  <Icon />\n                </IconButton>\n              ))}\n            </div>\n          ) : (\n            onClose && (\n              <div className={classes.actions}>\n                <IconButton size=\"small\" onClick={onClose}>\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            )\n          )}\n        </div>\n        <ul className={classes.masksList}>\n          {masks.map((maskItem, i) => {\n            const dataUri = getDataUri ? getDataUri(maskItem) : maskItem;\n            const paperProps = getPaperProps ? getPaperProps(maskItem, i) : {};\n\n            return (\n              <li key={dataUri} className={classes.maskContainer}>\n                <Paper\n                  elevation={4}\n                  className={classes.imgContainer}\n                  {...PaperProps}\n                  {...paperProps}\n                >\n                  {getImageChild && getImageChild(maskItem)}\n                  <img src={dataUri} className={classes.img} alt={`mask #${i}`} />\n                </Paper>\n              </li>\n            );\n          })}\n        </ul>\n      </Paper>\n    )\n  );\n};\n\nMasksGrid.propTypes = {\n  title: PropTypes.node,\n  masks: PropTypes.array,\n  actions: PropTypes.node,\n  onClose: PropTypes.func,\n  getDataUri: PropTypes.func,\n  PaperProps: PropTypes.object,\n  getPaperProps: PropTypes.func,\n  getImageChild: PropTypes.func,\n  actionButtons: PropTypes.array,\n};\n\nexport default MasksGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  tenBinScoreToPercent,\n  rawScoreToColor,\n  rawScoreToTenBinScore,\n  scoreToColor,\n} from '../lib/score';\nimport { useMemo } from 'react';\nimport MasksGrid from './MasksGrid';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  score: {\n    textAlign: 'right',\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nconst ScoreResults = (props) => {\n  const classes = useStyles();\n  const { results, handleClose } = props;\n\n  const title = useMemo(() => {\n    const gameScoreAverage =\n      results.reduce((acc, { score }) => acc + rawScoreToTenBinScore(score), 0) / results.length;\n    const binPercentScore = tenBinScoreToPercent(gameScoreAverage);\n    const scoreColor = scoreToColor(binPercentScore);\n    const fixedGameScore = gameScoreAverage.toFixed(1);\n    const title = (\n      <Typography variant=\"h6\" component=\"h3\">\n        Round Score: <span style={{ color: scoreColor }}>{fixedGameScore}</span>\n      </Typography>\n    );\n\n    return title;\n  }, [results]);\n\n  const getDataUri = useCallback(({ dataUri }) => dataUri, []);\n  const getPaperProps = useCallback(\n    ({ score }) => ({ style: { background: rawScoreToColor(score, 0.4) } }),\n    [],\n  );\n  const getImageChild = useCallback(\n    ({ score }) => (\n      <Typography className={classes.score}>{rawScoreToTenBinScore(score)}</Typography>\n    ),\n    [classes.score],\n  );\n\n  return (\n    <MasksGrid\n      title={title}\n      masks={results}\n      onClose={handleClose}\n      getDataUri={getDataUri}\n      getPaperProps={getPaperProps}\n      getImageChild={getImageChild}\n    />\n  );\n};\n\nScoreResults.propTypes = {\n  results: PropTypes.array.isRequired,\n  handleClose: PropTypes.func,\n};\n\nexport default ScoreResults;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport React, { useMemo, useCallback } from 'react';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayCircleOutline';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport MasksGrid from './MasksGrid';\n\nconst useStyles = makeStyles((theme) => ({\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n}));\n\nconst CandidateMasks = (props) => {\n  const classes = useStyles();\n\n  const { captureMasks, handlePlay } = props;\n\n  const actionButtons = useMemo(\n    () => [\n      {\n        key: 'play',\n        Icon: PlayIcon,\n        onClick: handlePlay,\n      },\n      {\n        key: 'download',\n        Icon: DownloadIcon,\n        onClick: captureMasks.downloadMasks,\n      },\n      {\n        key: 'clear',\n        Icon: CloseIcon,\n        onClick: captureMasks.removeAllMasks,\n      },\n    ],\n    [captureMasks.downloadMasks, captureMasks.removeAllMasks, handlePlay],\n  );\n\n  const getDataUri = useCallback(({ binary: dataUri }) => dataUri, []);\n\n  const getImageChild = useCallback(\n    (maskItem, i) => (\n      <div className={classes.removeMask}>\n        <IconButton name={i} className={classes.iconBtn} onClick={captureMasks.removeMask}>\n          <DeleteForeverIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    ),\n    [captureMasks.removeMask, classes.removeMask, classes.iconBtn],\n  );\n\n  return (\n    <MasksGrid\n      title=\"Candidate Masks\"\n      getDataUri={getDataUri}\n      masks={captureMasks.masks}\n      actionButtons={actionButtons}\n      getImageChild={getImageChild}\n    />\n  );\n};\n\nCandidateMasks.propTypes = {\n  handlePlay: PropTypes.func.isRequired,\n  captureMasks: PropTypes.object.isRequired,\n};\n\nexport default CandidateMasks;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\n\nimport ScoreResults from '../../ScoreResults';\nimport CapturedMasks from '../../CapturedMasks';\nimport { useGame } from '../../Game';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > div': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst PracticeFooter = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n\n  if (!game.mode) return null;\n\n  const { captureMasks, simpleGame, handlePlayCapturedMasks } = game.mode;\n\n  return (\n    <div className={classes.root}>\n      <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n      {captureMasks && (\n        <CapturedMasks captureMasks={captureMasks} handlePlay={handlePlayCapturedMasks} />\n      )}\n    </div>\n  );\n};\n\nexport default PracticeFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport { maxWidth } from '../../lib/constants';\nimport { makeStyles } from '@material-ui/styles';\nimport PracticeFooter from './SinglePlayer/PracticeFooter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: '0 auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nconst Footers = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: PracticeFooter,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: PracticeFooter,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: PracticeFooter,\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: () => 'LOCAL footer',\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: () => 'REMOTE footer',\n    },\n  },\n};\n\nconst ScreenFooter = (props) => {\n  const classes = useStyles();\n\n  const { screen, players, mode } = props.screen.state;\n\n  const Footer = Footers[screen]?.[players]?.[mode] || Null;\n\n  return (\n    <div className={classes.root}>\n      <Footer />\n    </div>\n  );\n};\n\nScreenFooter.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenFooter;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core';\nimport { animated, useTrail, config } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    '& > div > *': {\n      marginTop: theme.spacing(2),\n      minWidth: 150,\n    },\n  },\n}));\n\nconst Options = (props) => {\n  const classes = useStyles();\n  const trail = useTrail(props.buttons.length, {\n    transform: 'translate3d(0,0px,0)',\n    from: { transform: `translate3d(0,-${props.offset || 100}px,0)` },\n    config: config.stiff,\n  });\n\n  return (\n    <div className={classes.root}>\n      {trail.map((styleProps, idx) => {\n        const { Component, visible = true, props: componentProps = {} } = props.buttons[idx];\n\n        return visible ? (\n          <animated.div key={componentProps.key} style={styleProps}>\n            {Component ? (\n              <Component {...componentProps} />\n            ) : (\n              <Button color=\"primary\" variant=\"contained\" {...componentProps} />\n            )}\n          </animated.div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default Options;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { screenStatesArrays, wipScreens } from '../lib/screenConstants';\n\nimport Options from './Options';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    '& button': {\n      minWidth: 150,\n      marginTop: theme.spacing(2),\n    },\n  },\n  gameMode: {\n    textAlign: 'center',\n  },\n  header: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst SelectGameMode = (props) => {\n  const classes = useStyles();\n\n  const handleSetGameMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.screen.handlers.setGameMode(name);\n    },\n    [props.screen.handlers],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.mode[props.screen.state.players]?.map((gameMode) => ({\n        props: {\n          key: gameMode,\n          name: gameMode,\n          children: gameMode,\n          onClick: handleSetGameMode,\n          disabled: !!wipScreens[gameMode],\n        },\n      })),\n    [props.screen.state.players, handleSetGameMode],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.gameMode}>\n        <Options buttons={buttons} />\n      </div>\n    </div>\n  );\n};\n\nSelectGameMode.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default SelectGameMode;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  fileInput: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = ({ onChange, multiple, children, filter, ...buttonProps }) => {\n  const classes = useStyles();\n\n  const fileRef = useRef();\n\n  const handleFileUpload = useCallback(\n    (fileObject) => {\n      if (!fileObject) return;\n\n      const disallowMultiple = multiple === false;\n      const allFiles = fileObject.target ? Array.from(fileObject.target.files) : fileObject.files;\n      let filteredFiles = filter ? allFiles.filter(filter) : allFiles;\n\n      if (disallowMultiple && filteredFiles.length > 1) {\n        filteredFiles = filteredFiles.slice(0, 1);\n      }\n\n      onChange(filteredFiles);\n    },\n    [onChange, multiple, filter],\n  );\n\n  const resetFile = useCallback(() => {\n    fileRef.current.value = null;\n  }, [fileRef]);\n\n  return (\n    <Button component=\"label\" {...buttonProps}>\n      {children}\n      <input\n        type=\"file\"\n        ref={fileRef}\n        className={classes.fileInput}\n        onClick={resetFile}\n        onChange={handleFileUpload}\n        multiple={multiple !== false}\n      />\n    </Button>\n  );\n};\n\nFileUpload.propTypes = {\n  multiple: PropTypes.bool,\n  filterFiles: PropTypes.func,\n  buttonProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FileUpload;\n","import PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useRef, useCallback, useEffect, useState } from 'react';\n\nimport { numShippedMasks } from '../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  item: (width) => ({\n    minWidth: width - theme.spacing(4),\n    textAlign: 'center',\n  }),\n}));\n\nconst GameSelect = (props) => {\n  const [width, setWidth] = useState(0);\n  const classes = useStyles(width);\n\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.clientWidth);\n    }\n  }, []);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleClick = useCallback(\n    (name) => () => {\n      props.handleClick(name);\n      handleClose();\n    },\n    [props, handleClose],\n  );\n\n  return (\n    <>\n      <div ref={ref}>\n        <Button\n          fullWidth={true}\n          variant=\"contained\"\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n          aria-controls=\"mask-menu\"\n          disabled={props.disabled}\n        >\n          Select Masks\n        </Button>\n      </div>\n      <Menu\n        id=\"mask-menu\"\n        keepMounted={true}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        onClose={handleClose}\n        open={Boolean(anchorEl)}\n        container={props.containerRef.current || null}\n      >\n        {Array.from({ length: numShippedMasks }).map((_, idx) => (\n          <MenuItem key={idx} button={true} onClick={handleClick(`set${idx + 1}.zip`)}>\n            <span className={classes.item}>Game {idx + 1}</span>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nGameSelect.propTypes = {\n  value: PropTypes.string,\n  containerRef: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default GameSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ flip, height = 10, background = 'rgba(255,255,255,0)' }) => ({\n    height,\n    background,\n    width: '100%',\n    borderRadius: 50,\n    transform: `scaleX(${flip ? -1 : 1})`,\n    pWebkitTransform: `scaleX(${flip ? -1 : 1})`,\n  }),\n  filler: ({ completed, color }) => ({\n    height: '100%',\n    textAlign: 'left',\n    background: color,\n    width: `${completed}%`,\n    borderRadius: 'inherit',\n  }),\n}));\n\nconst ProgressBar = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.filler} />\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  flip: PropTypes.bool,\n  color: PropTypes.string.isRequired,\n  completed: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ProgressBar;\n","/* global cv:false */\nimport inside from 'point-in-polygon';\n\nexport const polygonToArray = (polygon, width, height) => {\n  const bytes = new Uint8ClampedArray(width * height * 4);\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n    const isIn = Number(inside([x, y], polygon)) * 255;\n    bytes[i * 4] = isIn;\n    bytes[i * 4 + 1] = isIn;\n    bytes[i * 4 + 2] = isIn;\n    bytes[i * 4 + 3] = isIn ? 128 : 0;\n  }\n  return new ImageData(bytes, width, height);\n};\n\nexport const getOpenCvMaskFromSegmentation = (segmentation, flipped) => {\n  const { data, width, height } = segmentation;\n  const binaryBytes = new Uint8ClampedArray(segmentation.data.length * 4);\n  // TODO: See if we can directly create CVMat from segmentation.data.\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const isPerson = data[i];\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    binaryBytes[bytes_index * 4] = isPerson ? 255 : 0; // red\n    binaryBytes[bytes_index * 4 + 1] = isPerson ? 255 : 0; // green\n    binaryBytes[bytes_index * 4 + 2] = isPerson ? 255 : 0; // blue\n    binaryBytes[bytes_index * 4 + 3] = isPerson ? 255 : 0; // alpha\n  }\n  let binaryImageData = new ImageData(binaryBytes, width, height);\n\n  // Load data into Mat.\n  let segData = cv.matFromImageData(binaryImageData);\n\n  // Create a single channel mask.\n  let rgbaPlanes = new cv.MatVector();\n  cv.split(segData, rgbaPlanes);\n  let pre_mask = new cv.Mat();\n  // Threshold on one channel (doesn't matter which one)\n  cv.threshold(rgbaPlanes.get(0), pre_mask, 128, 1, cv.THRESH_BINARY); // Mask is 0s and 1s, type CV_8UC1\n\n  // Use findContours/drawContours to remove small blobs.\n  // See example: https://docs.opencv.org/3.4/d5/daa/tutorial_js_contours_begin.html\n  // TODO: This only updates the overlay. Also update the Mask.\n  let contours = new cv.MatVector();\n  let hierarchy = new cv.Mat();\n  cv.findContours(pre_mask, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n  let mask = cv.Mat.zeros(pre_mask.rows, pre_mask.cols, cv.CV_8UC1);\n  let area = 0;\n  let minAreaThreshold = 10000; // Can change this, starting off with 100x100.\n  for (let i = 0; i < contours.size(); ++i) {\n    area = cv.contourArea(contours.get(i));\n    if (area > minAreaThreshold) {\n      cv.drawContours(mask, contours, i, [1, 1, 1, 1], -1 /*fill*/, cv.LINE_8, hierarchy, 100);\n    }\n  }\n\n  // Cleanup\n  segData.delete();\n  rgbaPlanes.delete();\n\n  return mask;\n};\n\nexport const getSegmentationeOverlayAndBinaryImageData = (segmentation, flipped) => {\n  const mask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n\n  // Create a Blue opaque overlay with a solid Green border.\n  // NOTE: Images are in RGBA format\n  let rgbaPlanes = new cv.MatVector();\n  let overlay = cv.Mat.zeros(mask.rows, mask.cols, cv.CV_8UC4);\n  cv.split(overlay, rgbaPlanes);\n  // Fill blue channel and alpha using the mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], mask); // Blue\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], mask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(mask, borderMask, M, anchor, 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue());\n  cv.subtract(borderMask, mask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], borderMask); // Blue\n  // rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, overlay);\n  const overlayImageData = new ImageData(\n    new Uint8ClampedArray(overlay.data),\n    overlay.cols,\n    overlay.rows,\n  );\n  // Cleanup\n  rgbaPlanes.delete();\n  mask.delete();\n  overlay.delete();\n  M.delete();\n  borderMask.delete();\n\n  // TODO: only return one image here.\n  return { overlayImageData, binaryImageData: overlayImageData };\n};\n\nexport const getScore = (targetImageData, segmentation, flipped) => {\n  // Just get the score\n  const { data, width, height } = segmentation;\n  const bytes = new Uint8ClampedArray(segmentation.data.length * 4);\n\n  let union = 0;\n  let intersection = 0;\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    const isPerson = data[i];\n    const isInPolygon = !!targetImageData.data[bytes_index * 4 + 2];\n    const isIntersection = isInPolygon && isPerson;\n    const isMissedPolygon = isInPolygon && !isPerson;\n    const isPersonOutOfPolygon = !isInPolygon && isPerson;\n    const isInteresting = isPersonOutOfPolygon || isIntersection || isMissedPolygon;\n\n    if (isIntersection) intersection++;\n    if (isPerson || isInPolygon) union++;\n\n    bytes[bytes_index * 4] = isPersonOutOfPolygon ? 255 : 0; // red\n    bytes[bytes_index * 4 + 1] = isIntersection ? 255 : 0; // green\n    bytes[bytes_index * 4 + 2] = isMissedPolygon ? 255 : 0; // blue\n    bytes[bytes_index * 4 + 3] = isInteresting ? 128 : 0; // alpha\n  }\n\n  const score = Math.round((intersection / (union + 0.0000001)) * 100);\n  return score;\n};\n\nexport const getScoreAndOverlayForSegmentationAndImageData = (\n  targetImageData,\n  segmentation,\n  flipped,\n) => {\n  // Create a visualization of the new segmentation.\n  const segmentationMask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n  let rgbaPlanes = new cv.MatVector();\n  let segOverlay = cv.Mat.zeros(segmentationMask.rows, segmentationMask.cols, cv.CV_8UC4);\n  cv.split(segOverlay, rgbaPlanes);\n  // Fill green channel and alpha using the mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], segmentationMask); // Green\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], segmentationMask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(\n    segmentationMask,\n    borderMask,\n    M,\n    anchor,\n    1,\n    cv.BORDER_CONSTANT,\n    cv.morphologyDefaultBorderValue(),\n  );\n  cv.subtract(borderMask, segmentationMask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, segOverlay);\n  const segOverlayImageData = new ImageData(\n    new Uint8ClampedArray(segOverlay.data),\n    segOverlay.cols,\n    segOverlay.rows,\n  );\n\n  // Create a mask from the targetImageData.\n  let targetData = cv.matFromImageData(targetImageData);\n  let targetRgbaPlanes = new cv.MatVector();\n  cv.split(targetData, targetRgbaPlanes);\n\n  // Merge the two images.\n  let mergedImage = new cv.Mat();\n  cv.addWeighted(segOverlay, 0.5, targetData, 0.5, 0.0, mergedImage);\n  const mergedOverlayImageData = new ImageData(\n    new Uint8ClampedArray(mergedImage.data),\n    mergedImage.cols,\n    mergedImage.rows,\n  );\n\n  const score = getScore(targetImageData, segmentation, flipped);\n\n  // Cleanup\n  rgbaPlanes.delete();\n  segmentationMask.delete();\n  segOverlay.delete();\n  M.delete();\n  borderMask.delete();\n  mergedImage.delete();\n\n  return { score, targetOverlay: mergedOverlayImageData, segOverlay: segOverlayImageData };\n};\n\nexport const drawPolygon = (ctx, polygon, color = 'rgba(255, 255, 255, 0.5)') => {\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(polygon[0][0], polygon[0][1]);\n  const vertices = polygon.slice(1);\n  vertices.forEach(([x, y]) => {\n    ctx.lineTo(x, y);\n  });\n  ctx.closePath();\n  ctx.fill();\n};\n\nexport const flipPolygon = (polygon, width) => polygon.map(([x, y]) => [width - x, y]);\n\nexport const inflatePolygon = (width, height) => (polygon) =>\n  polygon.map(([x, y]) => [x * width, y * height]);\n\nexport const saveAs = (blob, filename) => {\n  if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n    return navigator.msSaveOrOpenBlob(blob, filename);\n  } else if (typeof navigator.msSaveBlob !== 'undefined') {\n    return navigator.msSaveBlob(blob, filename);\n  } else {\n    var elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    elem.style = 'display:none;opacity:0;color:transparent;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n      elem.click();\n    } else {\n      elem.target = '_blank';\n      elem.dispatchEvent(\n        new MouseEvent('click', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n        }),\n      );\n    }\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getMaskName = (num) => `set${num}.zip`;\n","import { useMemo, useRef, useCallback, useState } from 'react';\n\nimport { useZip } from '../zip';\nimport { useAudio } from '../../context/audio';\nimport { useIterateMask } from '../iterateMask';\nimport { useWebcam } from '../../context/webcam';\nimport { getScoreAndOverlayForSegmentationAndImageData, getScore } from '../../lib/util';\nimport { rawScoreToTenBinScore } from '../../lib/score';\n\nexport const useSimpleGame = () => {\n  const promRef = useRef();\n  const webcam = useWebcam();\n  const roundTracker = useRef(0);\n  const maskIterator = useIterateMask();\n  const [scores, setScores] = useState([]);\n  const zip = useZip(maskIterator.setMasks);\n  const {\n    handlers: {\n      speech: { say },\n    },\n  } = useAudio();\n  const [progressPercent, setProgressPercent] = useState(0);\n\n  const clearScores = useCallback(() => {\n    setScores([]);\n  }, []);\n\n  const handleLoop = useCallback(\n    async (controller) => {\n      const lapDuration = 3000;\n      if (controller.time.first) {\n        maskIterator.next(); // load the first mask\n        setProgressPercent(0.0);\n        clearScores();\n        controller.useTimer({\n          maxLaps: maskIterator.getNumMasks(),\n          printSeconds: true,\n          announceSeconds: true,\n          lapDuration,\n          onLap: ({ predict, time, stop }) => {\n            const target = maskIterator.maskRef.current;\n\n            // we actually shouldn't reach this,\n            // because the maxLaps should trigger a stop first\n            if (!target) return stop();\n\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const { score, targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                target,\n                segmentation,\n                webcam.flipX,\n              );\n\n              const dataUri = webcam.imageDataToDataUri(targetOverlay);\n\n              setScores((state) => [...state, { score, dataUri }]);\n\n              webcam.clearCanvas();\n              maskIterator.next();\n            });\n          },\n        });\n      } else {\n        // Set the progress\n        const progress_percent = Math.min(controller.time.lapTime / lapDuration, 1.0);\n        setProgressPercent(Math.round(progress_percent * 100));\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [webcam, maskIterator, clearScores],\n  );\n\n  const handleSurvivalLoop = useCallback(\n    async (controller) => {\n      const lapDuration = 3000;\n      if (controller.time.first) {\n        maskIterator.random();\n        setProgressPercent(0.0);\n        clearScores();\n        controller.useTimer({\n          maxLaps: 9999999, // Good luck surviving this long!\n          printSeconds: true,\n          announceSeconds: true,\n          lapDuration,\n          onLap: ({ predict, time, stop }) => {\n            const target = maskIterator.maskRef.current;\n\n            // we actually shouldn't reach this,\n            // because the maxLaps should trigger a stop first\n            if (!target) return stop();\n\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const { score, targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                target,\n                segmentation,\n                webcam.flipX,\n              );\n\n              const dataUri = webcam.imageDataToDataUri(targetOverlay);\n\n              setScores((state) => [...state, { score, dataUri }]);\n\n              webcam.clearCanvas();\n              const tenBinScore = rawScoreToTenBinScore(score);\n              if (tenBinScore < 5) {\n                // Game Over\n                maskIterator.reset();\n                return stop();\n              } else {\n                maskIterator.random();\n              }\n            });\n          },\n        });\n      } else {\n        // Set the progress\n        const progress_percent = Math.min(controller.time.lapTime / lapDuration, 1.0);\n        setProgressPercent(Math.round(progress_percent * 100));\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [webcam, maskIterator, clearScores],\n  );\n\n  const handleTimeAttackLoop = useCallback(\n    async (controller) => {\n      const lapDuration = 500;\n      if (controller.time.first) {\n        maskIterator.next();\n        setProgressPercent(0);\n        clearScores();\n        controller.useTimer({\n          printSeconds: false,\n          announceSeconds: false,\n          lapDuration,\n          postLapDelay: 0,\n          onLap: ({ predict, time, stop }) => {\n            const currentMaskIdx = maskIterator.maskIdxRef.current;\n            const target = maskIterator.maskRef.current;\n\n            // we will reach this\n            if (!target) {\n              stop();\n              roundTracker.current = 0;\n              maskIterator.reset();\n              return stop();\n            }\n\n            // if we hit this then we succeeded in the predict promise\n            // but fired a new lap before it succeeded\n            if (roundTracker.current >= currentMaskIdx) return;\n\n            promRef.current = predict(webcam.videoRef.current)\n              .then(async (segmentation) => {\n                const score = getScore(target, segmentation, webcam.flipX);\n\n                const tenBinScore = rawScoreToTenBinScore(score);\n                if (tenBinScore > 5) {\n                  const { score, targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                    target,\n                    segmentation,\n                    webcam.flipX,\n                  );\n                  const dataUri = webcam.imageDataToDataUri(targetOverlay);\n                  // if we hit this then we succeeded in the predict promise\n                  // but fired a new lap before it succeeded\n                  if (roundTracker.current >= currentMaskIdx) return;\n                  say('Got it!');\n                  setScores((state) => [...state, { score, dataUri }]);\n                  webcam.clearCanvas();\n                  maskIterator.next();\n                  roundTracker.current++;\n                }\n              })\n              .catch(console.error);\n          },\n        });\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [webcam, maskIterator, clearScores, say],\n  );\n\n  return useMemo(\n    () => ({\n      zip,\n      scores,\n      handleLoop,\n      handleSurvivalLoop,\n      handleTimeAttackLoop,\n      clearScores,\n      progressPercent,\n      reset: maskIterator.reset,\n      ready: maskIterator.hasMasks,\n      setMasks: maskIterator.setMasks,\n    }),\n    [\n      zip,\n      scores,\n      progressPercent,\n      handleLoop,\n      handleSurvivalLoop,\n      handleTimeAttackLoop,\n      clearScores,\n      maskIterator.hasMasks,\n      maskIterator.reset,\n      maskIterator.setMasks,\n    ],\n  );\n};\n","import { useMemo, useRef, useState, useCallback } from 'react';\n\n// set masks, iterate masks, retain ref to current mask\nexport const useIterateMask = () => {\n  const masksRef = useRef([]);\n  const maskRef = useRef(null);\n  const maskIdxRef = useRef(0);\n  const [masks, _setMasks] = useState([]);\n\n  const setMasks = useCallback((newMasks) => {\n    _setMasks(newMasks);\n    masksRef.current = typeof newMasks === 'function' ? newMasks(masksRef.current) : newMasks;\n  }, []);\n\n  const reset = useCallback(() => {\n    maskIdxRef.current = 0;\n    maskRef.current = null;\n  }, []);\n\n  const next = useCallback(() => {\n    const currentMask = masksRef.current[maskIdxRef.current];\n\n    if (!currentMask) {\n      maskRef.current = null;\n      maskIdxRef.current = 0;\n\n      return null;\n    }\n\n    maskRef.current = currentMask;\n    maskIdxRef.current++;\n\n    return currentMask;\n  }, []);\n\n  const getNumMasks = useCallback(() => masksRef.current.length, []);\n\n  const random = useCallback(() => {\n    const mask = masks[Math.floor(Math.random() * masks.length)];\n    maskRef.current = mask;\n    return mask;\n  }, [masks]);\n\n  return useMemo(\n    () => ({\n      next,\n      reset,\n      random,\n      maskRef,\n      setMasks,\n      maskIdxRef,\n      getNumMasks,\n      hasMasks: !!masks.length,\n    }),\n    [next, masks, random, reset, setMasks, getNumMasks],\n  );\n};\n","import JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport { useCallback, useState, useMemo } from 'react';\n\nimport { getMaskName } from '../lib/util';\nimport { useWebcam } from '../context/webcam';\nimport { numShippedMasks } from '../lib/constants';\n\nexport const useZip = (setMasks) => {\n  const webcam = useWebcam();\n  const [zipLoading, setZipLoading] = useState(false);\n\n  const loadZippedMasks = useCallback(\n    async (file) => {\n      const data = await JSZip.loadAsync(file);\n      const binaryMasks = await Promise.all(\n        data\n          .filter((name) => name.endsWith('.png'))\n          .map(({ name }) => data.file(name).async('base64')),\n      );\n\n      try {\n        const masksAsImageData = await Promise.all(\n          binaryMasks.map((b64) => webcam.dataUriToImageData(`data:image/png;base64,${b64}`)),\n        );\n        setMasks(masksAsImageData);\n      } catch {}\n\n      setZipLoading(false);\n    },\n    [setMasks, webcam],\n  );\n\n  const handleZipInputChange = useCallback(\n    async ([file]) => {\n      if (file.type !== 'application/zip') {\n        console.error('Expected a zip file but got', file.type);\n        return;\n      }\n\n      setZipLoading(true);\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadPreparedMasks = useCallback(\n    async (filename) => {\n      if (!filename) return;\n\n      setZipLoading(true);\n      const file = await new JSZip.external.Promise((resolve, reject) => {\n        JSZipUtils.getBinaryContent(process.env.PUBLIC_URL + `/masks/${filename}`, (err, data) => {\n          if (err) reject(err);\n          else resolve(data);\n        });\n      });\n\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadRandomMaskSet = useCallback(async () => {\n    const num = Math.floor(Math.random() * numShippedMasks);\n    return handleLoadPreparedMasks(getMaskName(num + 1));\n  }, [handleLoadPreparedMasks]);\n\n  const data = useMemo(\n    () => ({\n      loading: zipLoading,\n      handleZipInputChange,\n      handleLoadRandomMaskSet,\n      handleLoadPreparedMasks,\n    }),\n    [zipLoading, handleZipInputChange, handleLoadPreparedMasks, handleLoadRandomMaskSet],\n  );\n\n  return data;\n};\n","import JSZip from 'jszip';\nimport imageDataUri from 'image-data-uri';\nimport { useRef, useCallback, useState } from 'react';\n\nimport { saveAs, getSegmentationeOverlayAndBinaryImageData } from '../../lib/util';\nimport { useMemo } from 'react';\n\nexport const useCaptureMasks = () => {\n  const promRef = useRef();\n  const [masks, setMasks] = useState([]);\n\n  const removeMask = useCallback(({ currentTarget: { name: idx } }) => {\n    // the plus coerces the idx to a number\n    setMasks((state) => state.filter((_, index) => index !== +idx));\n  }, []);\n\n  const removeAllMasks = useCallback(() => {\n    setMasks([]);\n  }, []);\n\n  const downloadMasks = useCallback(() => {\n    const zip = new JSZip();\n    const img = zip.folder('masks');\n    masks.forEach(({ overlay: mask }, idx) => {\n      img.file(`mask-${idx}.png`, imageDataUri.decode(mask).dataBase64, { base64: true });\n    });\n\n    zip.generateAsync({ type: 'blob' }).then((zipFile) => saveAs(zipFile, 'masks.zip'));\n  }, [masks]);\n\n  const handleLoop = useCallback(async (controller) => {\n    if (controller.time.first) {\n      controller.useTimer({\n        printSeconds: true,\n        announceSeconds: true,\n        lapDuration: 3000,\n        // run a single prediction before starting the lap to ensure things roll smoothly\n        onBeforeStartLap: async ({ predict, webcam, time, stop }) => {\n          return predict();\n        },\n        onLap: ({ predict, webcam, time, stop }) => {\n          promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n            const { overlayImageData, binaryImageData } = getSegmentationeOverlayAndBinaryImageData(\n              segmentation,\n              webcam.flipX,\n            );\n            const overlayDataUri = webcam.imageDataToDataUri(overlayImageData);\n            const binaryDataUri = webcam.imageDataToDataUri(binaryImageData);\n\n            webcam.clearCanvas();\n            webcam.ctx.putImageData(overlayImageData, 0, 0);\n            setMasks((state) => [...state, { overlay: overlayDataUri, binary: binaryDataUri }]);\n          });\n        },\n      });\n    }\n\n    // return a cleanup function to clear the canvas\n    // use a promise ref since we are capturing asynchronously\n    // if first promise not initialized, clear canvas right away\n    return () => {\n      if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n      else controller.webcam.clearCanvas();\n    };\n  }, []);\n\n  return useMemo(\n    () => ({\n      masks,\n      handleLoop,\n      removeMask,\n      downloadMasks,\n      removeAllMasks,\n    }),\n    [masks, handleLoop, removeMask, downloadMasks, removeAllMasks],\n  );\n};\n","import { useMemo, useCallback, useState, useEffect } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\n\nexport const usePractice = (loop) => {\n  const webcam = useWebcam();\n  const simpleGame = useSimpleGame();\n  const captureMasks = useCaptureMasks();\n  const [loopType, setLoopType] = useState(null);\n\n  useEffect(() => {\n    if (!loop.looping && loopType) {\n      setLoopType(null);\n    }\n  }, [loop.looping, loopType]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(simpleGame.handleLoop);\n      setLoopType('play');\n    }\n  }, [loop, simpleGame]);\n\n  const handleStartRandomGame = useCallback(async () => {\n    if (loop.looping) return;\n\n    await simpleGame.zip.handleLoadRandomMaskSet();\n    handleClickGame();\n  }, [handleClickGame, loop.looping, simpleGame.zip]);\n\n  const handleClickCaptureMasks = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(captureMasks.handleLoop);\n      setLoopType('capture');\n    }\n  }, [loop, captureMasks, simpleGame]);\n\n  const handlePlayCapturedMasks = useCallback(async () => {\n    if (loop.looping) return;\n\n    const masks = await Promise.all(\n      captureMasks.masks.map(({ overlay }) => webcam.dataUriToImageData(overlay)),\n    );\n    simpleGame.setMasks(masks);\n    handleClickGame();\n  }, [captureMasks.masks, simpleGame, webcam, handleClickGame, loop.looping]);\n\n  const practice = useMemo(\n    () => ({\n      loopType,\n      simpleGame,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    }),\n    [\n      loopType,\n      simpleGame,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    ],\n  );\n\n  return practice;\n};\n","import classnames from 'classnames';\nimport React, { useRef, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport Options from '../../Options';\nimport FileUpload from '../../FileUpload';\nimport GameSelect from '../../GameSelect';\nimport ProgressBar from '../../ProgressBar';\nimport ScoreResults from '../../ScoreResults';\nimport CapturedMasks from '../../CapturedMasks';\n\nimport { useGame, useGameMode } from '../../Game';\nimport { scoreToColor } from '../../../lib/score';\nimport { useWebcam } from '../../../context/webcam';\nimport { usePractice } from '../../../hooks/screenHooks/practice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  captures: {\n    width: '100%',\n    '& > div': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nconst Practice = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n  const webcam = useWebcam();\n  const containerRef = useRef();\n  const practice = useGameMode(usePractice);\n\n  const {\n    loopType,\n    simpleGame,\n    captureMasks,\n    handleClickGame,\n    handleStartRandomGame,\n    handlePlayCapturedMasks,\n    handleClickCaptureMasks,\n  } = practice;\n\n  const { loop } = game;\n\n  const timerColor = scoreToColor(100 - simpleGame.progressPercent);\n\n  const buttons = useMemo(\n    () => [\n      {\n        props: {\n          key: 'play/stop',\n          onClick: handleClickGame,\n          disabled: !loop.ready || (!loop.looping && !simpleGame.ready),\n          children: loop.looping ? 'Stop' : 'Play',\n        },\n      },\n      {\n        props: {\n          key: 'playRandom',\n          color: 'secondary',\n          onClick: handleStartRandomGame,\n          disabled: !loop.ready || loop.looping,\n          children: 'Play Random',\n        },\n      },\n      {\n        props: {\n          containerRef,\n          key: 'chooseMasks',\n          disabled: !loop.ready || loop.looping,\n          handleClick: simpleGame.zip.handleLoadPreparedMasks,\n        },\n        Component: GameSelect,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'loadMasks',\n          variant: 'contained',\n          onChange: simpleGame.zip.handleZipInputChange,\n          disabled: !loop.ready || loop.looping || simpleGame.zip.loading,\n          children: simpleGame.loading ? 'Loading...' : 'Load Masks',\n        },\n        Component: FileUpload,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'captureMasks',\n          onClick: handleClickCaptureMasks,\n          disabled: !loop.ready || loop.looping,\n          children: 'Capture Masks',\n          color: 'default',\n        },\n        visible: !loop.looping,\n      },\n    ],\n    [\n      loop.ready,\n      loop.looping,\n      handleClickGame,\n      simpleGame.ready,\n      simpleGame.loading,\n      handleStartRandomGame,\n      simpleGame.zip.loading,\n      handleClickCaptureMasks,\n      simpleGame.zip.handleZipInputChange,\n      simpleGame.zip.handleLoadPreparedMasks,\n    ],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !loop.looping,\n          [classes.rootTop]: !!loop.looping,\n          [classes.rootApart]:\n            !!(simpleGame.scores?.length || captureMasks.masks?.length) && webcam.isFullScreen,\n        })}\n      >\n        <div\n          className={classnames({\n            [classes.optionsTop]: !!loop.looping,\n          })}\n          ref={containerRef}\n        >\n          {loop.looping ? (\n            <Options\n              offset={70}\n              buttons={[\n                {\n                  props: {\n                    key: 'stop',\n                    onClick: handleClickGame,\n                    children: 'Stop',\n                  },\n                },\n              ]}\n            />\n          ) : (\n            <Options buttons={buttons} />\n          )}\n          {loop.looping && loopType === 'play' && (\n            <div className={classes.progress}>\n              <ProgressBar color={timerColor} completed={100 - simpleGame.progressPercent} />\n            </div>\n          )}\n        </div>\n        {webcam.isFullScreen && !loop.looping && (\n          <div className={classes.captures}>\n            <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n            <CapturedMasks captureMasks={captureMasks} handlePlay={handlePlayCapturedMasks} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Practice;\n","import { useRef, useEffect, useMemo, useCallback } from 'react';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\n\nexport const useSurvival = (loop) => {\n  const simpleGame = useSimpleGame();\n  const captureMasks = useCaptureMasks();\n\n  const loadedRef = useRef(false);\n  useEffect(() => {\n    if (!loadedRef.current) {\n      loadedRef.current = true;\n      simpleGame.zip.handleLoadPreparedMasks('survival_2.zip'); // TODO: Make a BETTER Survival Set.\n    }\n  }, [simpleGame]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      loop.start(simpleGame.handleSurvivalLoop);\n    }\n  }, [loop, simpleGame]);\n\n  const handleClickCaptureMasks = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      loop.start(captureMasks.handleLoop);\n    }\n  }, [loop, captureMasks]);\n\n  const survival = useMemo(\n    () => ({\n      loop,\n      simpleGame,\n      captureMasks,\n      handleClickGame,\n      handleClickCaptureMasks,\n    }),\n    [handleClickCaptureMasks, handleClickGame, loop, simpleGame, captureMasks],\n  );\n\n  return survival;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core';\n\nimport CapturedMasks from '../../CapturedMasks';\nimport ProgressBar from '../../ProgressBar';\nimport ScoreResults from '../../ScoreResults';\nimport { useGameMode } from '../../Game';\nimport { useSurvival } from '../../../hooks/screenHooks/survival';\nimport { scoreToColor } from '../../../lib/score';\nimport { useWebcam } from '../../../context/webcam';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  options: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      marginTop: theme.spacing(2),\n      minWidth: 150,\n    },\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  captures: {\n    width: '100%',\n    '& > div': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nconst Survival = (props) => {\n  const classes = useStyles();\n  const survival = useGameMode(useSurvival);\n  const webcam = useWebcam();\n  const { loop, simpleGame, captureMasks, handleClickGame } = survival;\n  const timerColor = scoreToColor(100 - simpleGame.progressPercent);\n\n  return (\n    <div\n      className={classnames(classes.root, {\n        [classes.overlay]: !loop.looping,\n        [classes.rootTop]: !!loop.looping,\n        [classes.rootApart]:\n          !!(simpleGame.scores?.length || captureMasks.masks?.length) && webcam.isFullScreen,\n      })}\n    >\n      <div\n        className={classnames(classes.options, {\n          [classes.optionsTop]: !!loop.looping,\n        })}\n      >\n        {loop.looping ? (\n          <div className={classes.progress}>\n            <ProgressBar color={timerColor} completed={100 - simpleGame.progressPercent} />\n          </div>\n        ) : (\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleClickGame}\n            disabled={!loop.ready}\n          >\n            Play\n          </Button>\n        )}\n      </div>\n      {webcam.isFullScreen && !loop.looping && (\n        <div className={classes.captures}>\n          <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n          <CapturedMasks captureMasks={captureMasks} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nSurvival.propTypes = {\n  game: PropTypes.object.isRequired,\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default Survival;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\n\nimport Options from './Options';\nimport { screenStatesArrays, wipScreens } from '../lib/screenConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    '& button': {\n      minWidth: 150,\n      marginTop: theme.spacing(2),\n    },\n  },\n  transition: {\n    textAlign: 'center',\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst ChoosePlayers = (props) => {\n  const classes = useStyles();\n\n  const handleSetPlayerMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.setPlayerMode(name);\n    },\n    [props],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.players.map((playerMode) => ({\n        props: {\n          key: playerMode,\n          name: playerMode,\n          children: playerMode,\n          onClick: handleSetPlayerMode,\n          disabled: !!wipScreens[playerMode],\n        },\n      })),\n    [handleSetPlayerMode],\n  );\n\n  return (\n    <div className={classes.root}>\n      <Options buttons={buttons} />\n    </div>\n  );\n};\n\nChoosePlayers.propTypes = {\n  setPlayerMode: PropTypes.func.isRequired,\n};\n\nexport default ChoosePlayers;\n","import { useMemo, useCallback } from 'react';\n\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nexport const useTimeAttack = (loop) => {\n  const simpleGame = useSimpleGame();\n\n  const loadedRef = useRef(false);\n  useEffect(() => {\n    if (!loadedRef.current) {\n      loadedRef.current = true;\n      simpleGame.zip.handleLoadPreparedMasks('survival_2.zip');\n    }\n  }, [simpleGame]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(simpleGame.handleTimeAttackLoop);\n    }\n  }, [loop, simpleGame]);\n\n  const timeAttack = useMemo(\n    () => ({\n      simpleGame,\n      handleClickGame,\n    }),\n    [simpleGame, handleClickGame],\n  );\n\n  return timeAttack;\n};\n","import classnames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport Options from '../../Options';\nimport ScoreResults from '../../ScoreResults';\n\nimport { useGame, useGameMode } from '../../Game';\nimport { useWebcam } from '../../../context/webcam';\nimport { useTimeAttack } from '../../../hooks/screenHooks/timeAttack';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  captures: {\n    width: '100%',\n    '& > div': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nconst TimeAttack = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n  const webcam = useWebcam();\n  const timeAttack = useGameMode(useTimeAttack);\n\n  const { simpleGame, handleClickGame } = timeAttack;\n\n  const { loop } = game;\n\n  const buttons = useMemo(\n    () => [\n      {\n        props: {\n          key: 'play/stop',\n          onClick: handleClickGame,\n          disabled: !loop.ready || (!loop.looping && !simpleGame.ready),\n          children: loop.looping ? 'Stop' : 'Play',\n        },\n      },\n    ],\n    [loop.ready, loop.looping, handleClickGame, simpleGame.ready],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !loop.looping,\n          [classes.rootTop]: !!loop.looping,\n          [classes.rootApart]: !!simpleGame.scores?.length && webcam.isFullScreen,\n        })}\n      >\n        <div\n          className={classnames({\n            [classes.optionsTop]: !!loop.looping,\n          })}\n        >\n          {loop.looping ? (\n            <Options\n              offset={70}\n              buttons={[\n                {\n                  props: {\n                    key: 'stop',\n                    onClick: handleClickGame,\n                    children: 'Stop',\n                  },\n                },\n              ]}\n            />\n          ) : (\n            <Options buttons={buttons} />\n          )}\n        </div>\n        {webcam.isFullScreen && !loop.looping && (\n          <div className={classes.captures}>\n            <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TimeAttack;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport SelectGameMode from '../SelectGameMode';\nimport Practice from '../GameScreens/SinglePlayer/Practice';\nimport Survival from '../GameScreens/SinglePlayer/Survival';\nimport ChoosePlayers from '../ChoosePlayers';\nimport TimeAttack from './SinglePlayer/TimeAttack';\n\nconst Screens = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: Practice,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: Survival,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: TimeAttack,\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: () => 'LOCAL Content',\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: () => 'REMOTE Content',\n    },\n  },\n};\n\nconst ScreenContent = (props) => {\n  const { screen, mode, players } = props.screen.state;\n\n  if (screen === screenStates.screen.DEFAULT)\n    return <ChoosePlayers setPlayerMode={props.screen.handlers.setPlayerMode} />;\n  if (mode === screenStates.mode.DEFAULT) return <SelectGameMode screen={props.screen} />;\n\n  const Content = Screens[screen]?.[players]?.[mode] || Null;\n\n  return <Content />;\n};\n\nScreenContent.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenContent;\n","import { useReducer, useMemo, useCallback } from 'react';\n\nimport {\n  initialScreenState,\n  screenStates,\n  screenTypes,\n  screenStatesArrays,\n} from '../lib/screenConstants';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case screenTypes.SET_GAME_MODE:\n      return { ...state, mode: action.value };\n    case screenTypes.SET_PLAYER_MODE:\n      return { ...state, screen: screenStates.screen.PLAY, players: action.value };\n    case screenTypes.RESET:\n      return initialScreenState;\n    case screenTypes.REVERSE: {\n      const newState = { ...state };\n      if (state.mode) {\n        newState.mode = screenStates.mode.DEFAULT;\n      } else if (state.screen !== screenStates.screen.DEFAULT) {\n        newState.screen = screenStates.screen.DEFAULT;\n        newState.players = screenStates.players.DEFAULT;\n      } else return state;\n\n      return newState;\n    }\n    default:\n      throw new Error(`Invalid action: ${action.type}`);\n  }\n};\n\nexport const useScreenController = () => {\n  const [screenState, dispatch] = useReducer(reducer, initialScreenState);\n\n  const setScreen = useCallback((screen) => {\n    if (!screenStatesArrays.screen.includes(screen)) {\n      throw new Error(`Unknown screen: ${screen}`);\n    }\n\n    dispatch({ type: screenTypes.SET_SCREEN, value: screen });\n  }, []);\n\n  const setGameMode = useCallback((gameMode) => {\n    if (\n      ![\n        ...screenStatesArrays.mode[screenStates.players.SINGLE_PLAYER],\n        ...screenStatesArrays.mode[screenStates.players.MULTIPLAYER],\n      ].includes(gameMode)\n    ) {\n      throw new Error(`Unknown gameMode: ${gameMode}`);\n    }\n\n    dispatch({ type: screenTypes.SET_GAME_MODE, value: gameMode });\n  }, []);\n\n  const setPlayerMode = useCallback((playerMode) => {\n    if (!screenStatesArrays.players.includes(playerMode)) {\n      throw new Error(`Unknown playerMode: ${playerMode}`);\n    }\n\n    dispatch({ type: screenTypes.SET_PLAYER_MODE, value: playerMode });\n  }, []);\n\n  const resetState = useCallback(() => {\n    dispatch({ type: screenTypes.RESET });\n  }, []);\n\n  const reverseState = useCallback(() => {\n    dispatch({ type: screenTypes.REVERSE });\n  }, []);\n\n  const handlers = useMemo(\n    () => ({\n      setScreen,\n      resetState,\n      setGameMode,\n      reverseState,\n      setPlayerMode,\n    }),\n    [setScreen, resetState, setGameMode, reverseState, setPlayerMode],\n  );\n\n  return [screenState, handlers];\n};\n","import { useRef, useState, useEffect, useCallback } from 'react';\n\nimport { useWebcam } from '../context/webcam';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BodyPixWorker from 'workerize-loader!../worker/bodyPix';\n\nconst bodyPixWorker = BodyPixWorker();\n\nexport const useBodyPixController = () => {\n  const webcam = useWebcam();\n\n  const loadRef = useRef();\n  const preloadRef = useRef();\n  const [netReady, setNetReady] = useState(false);\n  const [netPreloaded, setNetPreloaded] = useState(false);\n\n  // load the model on the first mount\n  useEffect(() => {\n    if (!loadRef.current && webcam.ready) {\n      loadRef.current = true;\n      bodyPixWorker\n        .load()\n        .then(() => {\n          console.log('BodyPix loaded');\n          setNetReady(true);\n        })\n        .catch(console.error);\n    }\n  }, [webcam]);\n\n  // TODO: Make it possible to tweak bodyPix settings\n  const predict = useCallback(async () => {\n    if (!netReady) {\n      throw new Error('Please wait for the model to load before calling \"predict\"');\n    }\n\n    const segmentation = await bodyPixWorker.predict(webcam.getVideoAsImageData());\n\n    // console.log({segmentation});\n\n    return segmentation;\n  }, [netReady, webcam]);\n\n  // pre load the model by running a first prediction\n  useEffect(() => {\n    if (netReady && !preloadRef.current && !netPreloaded) {\n      preloadRef.current = true;\n      predict().then(() => {\n        setNetPreloaded(true);\n      });\n    }\n  }, [predict, netReady, netPreloaded]);\n\n  // don't return the prediction fn until the model has processed the first frame\n  return netPreloaded ? predict : null;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useBodyPixController } from '../hooks/bodyPixController';\n\nexport const bodyPixContext = createContext();\n\nexport const useBodyPix = () => {\n  const state = useContext(bodyPixContext);\n\n  // specifically check for undefined, not just truthy\n  // bc bodyPixController returns null before it is ready\n  if (state === undefined) {\n    throw new Error('useBodyPix must be used within a BodyPixProvider');\n  }\n\n  return state;\n};\n\nconst BodyPixProvider = ({ children }) => {\n  const context = useBodyPixController();\n\n  return <bodyPixContext.Provider value={context}>{children}</bodyPixContext.Provider>;\n};\n\nexport default BodyPixProvider;\n","import { useRef, useState, useCallback, useMemo } from 'react';\n\nimport { useLoopTime } from './loopTime';\nimport { useLapTimer } from './lapTimer';\nimport { useWebcam } from '../context/webcam';\nimport { useBodyPix } from '../context/bodyPix';\n\nexport const useLoop = () => {\n  const webcam = useWebcam();\n  const predict = useBodyPix();\n\n  const loopTime = useLoopTime();\n  const lapTimer = useLapTimer();\n\n  const loopingRef = useRef();\n  const handleLoopRef = useRef();\n  const [looping, setLooping] = useState(false);\n\n  // set the flags to start the loop\n  const setStartLoop = useCallback(() => {\n    // we clear the lapTimer here as opposed to after \"stopping\" the loop to avoid async errors\n    lapTimer.clear();\n    loopTime.reset();\n    loopingRef.current = true;\n    setLooping(true);\n  }, [loopTime, lapTimer]);\n\n  // clear loop flags to trigger end of loop\n  // not synchronous, loop will terminate on next pass\n  const setStopLoop = useCallback(() => {\n    loopingRef.current = false;\n    setLooping(false);\n  }, []);\n\n  // fn passed to requestAnimationFrame\n  // keeps time and runs handleLoop fn passed to start\n  const loop = useCallback(\n    async (timestamp) => {\n      const time = loopTime.update(timestamp);\n      const cleanup = await handleLoopRef.current({\n        time,\n        webcam,\n        predict,\n        useTimer: lapTimer.useTimer,\n        stop: setStopLoop,\n      });\n\n      lapTimer.handleLap({\n        time,\n        webcam,\n        predict,\n        stop: setStopLoop,\n      });\n\n      if (loopingRef.current) {\n        requestAnimationFrame(loop);\n      } else {\n        setStopLoop();\n        handleLoopRef.current = null;\n        webcam.clearCanvas();\n        if (cleanup) cleanup();\n      }\n    },\n    [webcam, predict, lapTimer, loopTime, setStopLoop],\n  );\n\n  const start = useCallback(\n    async (handleLoop) => {\n      if (loopingRef.current) {\n        throw new Error('The loop is already running');\n      } else if (!predict) {\n        throw new Error('Please wait for BodyPix to load...');\n      } else if (!handleLoop) {\n        throw new Error('A loop handler is required when calling loop.start');\n      }\n\n      handleLoopRef.current = handleLoop;\n      setStartLoop();\n\n      return requestAnimationFrame(loop);\n    },\n    [loop, predict, setStartLoop],\n  );\n\n  const controller = useMemo(\n    () => ({\n      start,\n      looping,\n      stop: setStopLoop,\n      ready: predict && webcam.ready,\n    }),\n    [start, predict, looping, setStopLoop, webcam.ready],\n  );\n\n  return controller;\n};\n","import { useCallback, useRef, useMemo } from 'react';\n\nexport const useLoopTime = () => {\n  const lastTimeRef = useRef();\n  const startTimeRef = useRef();\n  const totalFramesRef = useRef();\n  const fpsSumRef = useRef();\n  const lapTime = useRef();\n\n  const reset = useCallback((timestamp = 0) => {\n    startTimeRef.current = timestamp;\n    lastTimeRef.current = timestamp;\n    fpsSumRef.current = 0;\n    totalFramesRef.current = 0;\n    lapTime.current = 0;\n  }, []);\n\n  const resetLapTime = useCallback(() => {\n    lapTime.current = 0;\n  }, []);\n\n  const update = useCallback(\n    (timestamp) => {\n      let first = false;\n      if (!startTimeRef.current) {\n        first = true;\n        reset(timestamp);\n      }\n\n      const deltaTime = timestamp - lastTimeRef.current;\n      lapTime.current += deltaTime;\n\n      let fps = 0;\n      let avgFps = 0;\n\n      // start calculating after the first loop to avoid dividing by 0\n      if (totalFramesRef.current++) {\n        fps = 1000 / deltaTime;\n        avgFps = fpsSumRef.current / totalFramesRef.current;\n        fpsSumRef.current += fps;\n      }\n\n      const elapsed = timestamp - startTimeRef.current;\n      lastTimeRef.current = timestamp;\n\n      return {\n        first,\n        timestamp,\n        fps,\n        avgFps,\n        elapsed,\n        frames: totalFramesRef.current,\n        lapTime: lapTime.current,\n        resetLapTime,\n      };\n    },\n    [reset, resetLapTime],\n  );\n\n  const controller = useMemo(() => ({ update, reset }), [update, reset]);\n\n  return controller;\n};\n","import { useCallback, useRef, useMemo } from 'react';\nimport { useAudio } from '../context/audio';\n\nexport const useLapTimer = () => {\n  const lapTimer = useRef();\n  const {\n    handlers: { speech },\n  } = useAudio();\n\n  const useTimer = useCallback(\n    ({\n      onBeforeStartLap,\n      onLap,\n      onEnd,\n      maxLaps,\n      lapDuration = 3000,\n      postLapDelay = 1000,\n      printSeconds = true,\n      announceSeconds = true,\n    } = {}) => {\n      if (onLap && !lapTimer.current) {\n        lapTimer.current = {\n          onBeforeStartLap,\n          onBeforeComplete: false,\n          onBeforeStarted: false,\n          onLap,\n          onEnd,\n          maxLaps,\n          numLaps: 0,\n          lapDuration,\n          postLapDelay,\n          printSeconds,\n          announceSeconds,\n        };\n      }\n    },\n    [],\n  );\n\n  const handleLap = useCallback(\n    async ({ time, webcam, predict, stop }) => {\n      // handleLoop called useTimer\n      if (lapTimer.current) {\n        // if they've provided an initialization function,\n        // run it and don't start the first lap until it resolves\n        if (lapTimer.current.onBeforeStartLap && !lapTimer.current.onBeforeComplete) {\n          if (lapTimer.current.onBeforeStarted) return;\n          else {\n            lapTimer.current.onBeforeStarted = true;\n\n            await lapTimer.current.onBeforeStartLap({ time, webcam, predict, stop });\n            lapTimer.current.onBeforeComplete = true;\n            time.resetLapTime();\n            return;\n          }\n        }\n\n        if (lapTimer.current.maxLaps && lapTimer.current.numLaps === lapTimer.current.maxLaps) {\n          if (lapTimer.current.onEnd) {\n            await lapTimer.current.onEnd({ time, webcam, predict, stop });\n          }\n\n          lapTimer.current = null;\n          return stop();\n        }\n\n        const secondsPassed = Math.floor(time.lapTime / 1000);\n\n        // we get a single instance of -1 so set min to 0\n        const countdown = Math.max(lapTimer.current.lapDuration / 1000 - secondsPassed, 0);\n\n        // display the integer seconds remaining in the lap in the top left corner of the canvas\n        if (lapTimer.current.printSeconds) {\n          const { ctx } = webcam;\n          ctx.font = '40px Arial';\n          ctx.fillStyle = 'white';\n          ctx.clearRect(0, 0, 50, 50);\n\n          if (countdown) {\n            // don't print if 0\n            ctx.fillText(countdown, 10, 40);\n          }\n        }\n\n        // announce the current countdown time (if not announced yet and requested)\n        if (\n          countdown &&\n          lapTimer.current.announceSeconds &&\n          lapTimer.current.lastSpeech !== countdown\n        ) {\n          lapTimer.current.lastSpeech = countdown;\n          speech.say(`${countdown}`);\n        }\n\n        // Once we've reached the end of the lap\n        // fire the provided onLap handler and set handlerCalled so we don't call it again until next lap\n        if (time.lapTime >= lapTimer.current.lapDuration && !lapTimer.current.handlerCalled) {\n          lapTimer.current.numLaps++;\n          lapTimer.current.handlerCalled = true;\n          lapTimer.current.handlerResolved = false;\n          await lapTimer.current.onLap({\n            time,\n            webcam,\n            predict,\n            stop,\n            lapNum: lapTimer.current.numLaps,\n          });\n          lapTimer.current.handlerResolved = true;\n        } else if (\n          time.lapTime >= lapTimer.current.lapDuration + lapTimer.current.postLapDelay &&\n          lapTimer.current.handlerResolved\n        ) {\n          // we've already called the lap handler\n          // and the handler has resolved\n          // and delayed an additional amount of time\n          // so we reset the lapTime and mark the handler as ready to be called again\n          time.resetLapTime();\n          lapTimer.current.handlerCalled = false;\n          lapTimer.current.handlerResolved = false;\n        }\n      }\n    },\n    [speech],\n  );\n\n  const clear = useCallback(() => {\n    lapTimer.current = null;\n  }, []);\n\n  return useMemo(\n    () => ({\n      clear,\n      useTimer,\n      handleLap,\n    }),\n    [clear, useTimer, handleLap],\n  );\n};\n","import { useMemo, useState } from 'react';\n\nimport { useScreenController } from './screenController';\nimport { useEffect } from 'react';\nimport { screenStates } from '../lib/screenConstants';\nimport { useLoop } from './loop';\n\nexport const useGameController = () => {\n  const loop = useLoop();\n  const [mode, setMode] = useState(null);\n  const [screenState, screenHandlers] = useScreenController();\n\n  useEffect(() => {\n    if (\n      (screenState.screen === screenStates.screen.DEFAULT ||\n        screenState.mode === screenStates.mode.DEFAULT) &&\n      mode\n    ) {\n      setMode(null);\n    }\n  }, [screenState, mode]);\n\n  useEffect(() => {\n    if (\n      (screenState.screen === screenStates.screen.DEFAULT ||\n        screenState.mode === screenStates.mode.DEFAULT) &&\n      loop.looping\n    ) {\n      loop.stop();\n    }\n  }, [screenState, loop]);\n\n  const gameController = useMemo(\n    () => ({\n      screen: {\n        state: screenState,\n        handlers: screenHandlers,\n      },\n      mode,\n      loop,\n      setMode,\n    }),\n    [screenState, screenHandlers, mode, loop],\n  );\n\n  return gameController;\n};\n","import PropTypes from 'prop-types';\nimport React, { memo, createContext, useContext, useEffect } from 'react';\n\nimport Webcam from './Webcam';\nimport GlobalHeader from './GlobalHeader';\nimport ScreenHeader from './GameScreens/ScreenHeader';\nimport ScreenFooter from './GameScreens/ScreenFooter';\nimport ScreenContent from './GameScreens/ScreenContent';\n\nimport { useGameController } from '../hooks/game';\n\nconst gameContext = createContext();\n\nexport const useGame = () => {\n  const state = useContext(gameContext);\n\n  if (!state) {\n    throw new Error('useGame must be called from inside the <Game> component.');\n  }\n\n  return state;\n};\n\nexport const useGameMode = (useGameModeHook) => {\n  const { loop, setMode } = useGame();\n  const gameMode = useGameModeHook(loop);\n\n  useEffect(() => {\n    setMode(gameMode);\n  }, [gameMode, setMode]);\n\n  return gameMode;\n};\n\nconst Game = ({ webcam }) => {\n  const game = useGameController();\n\n  return (\n    <gameContext.Provider value={game}>\n      <GlobalHeader\n        mode={game.screen.state.mode}\n        screen={game.screen.state.screen}\n        goHome={game.screen.handlers.resetState}\n        goBack={game.screen.handlers.reverseState}\n      />\n      <ScreenHeader screenState={game.screen.state} />\n      <Webcam overlay={!game.screen.state.mode}>\n        <ScreenContent screen={game.screen} />\n      </Webcam>\n      <ScreenFooter screen={game.screen} />\n    </gameContext.Provider>\n  );\n};\n\nGame.propTypes = {\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default memo(Game);\n","import React from 'react';\n\nconst NoWebcam = () => (\n  <div>Sorry, but this game requires a webcam. Please plug in a webcam and refresh the page.</div>\n);\n\nexport default NoWebcam;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useRef, useEffect, memo } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\n\nimport Game from '../Game';\nimport NoWebcam from './NoWebcam';\nimport { maxWidth } from '../../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: `0 auto ${theme.spacing(2)}px`,\n  },\n}));\n\nconst Main = (props) => {\n  const webcam = useWebcam();\n  const { currentDeviceId, hasVideo, cameras, autoStartDeviceId } = webcam;\n\n  const startedRef = useRef();\n\n  useEffect(() => {\n    if (\n      hasVideo &&\n      cameras.length &&\n      (currentDeviceId || autoStartDeviceId) &&\n      !startedRef.current\n    ) {\n      startedRef.current = true;\n\n      webcam.start().catch(console.error);\n    }\n  }, [hasVideo, cameras, currentDeviceId, autoStartDeviceId]); // eslint-disable-line\n\n  const classes = useStyles();\n\n  // console.log(\n  //   !hasVideo\n  //     ? 'no webcam'\n  //     : !cameras.length || currentDeviceId === undefined\n  //     ? 'webcams is loading'\n  //     : !currentDeviceId\n  //     ? 'no webcam chosen'\n  //     : 'rendering game',\n  // );\n\n  return (\n    <main className={classes.root}>{!hasVideo ? <NoWebcam /> : <Game webcam={webcam} />}</main>\n  );\n};\n\nMain.propTypes = {\n  cvReady: PropTypes.bool.isRequired,\n};\n\nexport default memo(Main);\n","import Particles from 'particlesjs';\nimport { hot } from 'react-hot-loader';\nimport { CssBaseline } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/deepPurple';\n\nimport Main from '../components/Main';\nimport WebcamProvider from '../context/webcam';\nimport BodyPixProvider from '../context/bodyPix';\nimport AudioProvider from '../context/audio';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary,\n  },\n});\n\nfunction App() {\n  const [cvReady, setCvReady] = useState(false);\n  const particlesRef = useRef();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (window.cvReady) {\n        setCvReady(true);\n        clearInterval(interval);\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!particlesRef.current) {\n      particlesRef.current = true;\n      Particles.init({\n        selector: '.background',\n      });\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <WebcamProvider>\n        <BodyPixProvider>\n          <AudioProvider>\n            <>\n              <CssBaseline />\n              <Main cvReady={cvReady} />\n            </>\n          </AudioProvider>\n        </BodyPixProvider>\n      </WebcamProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default process.env.NODE_ENV === 'production' ? App : hot(module)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './reset.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}