{"version":3,"sources":["worker/bodyPix.js","serviceWorker.js","context/webcam.js","components/Loader.js","components/Webcam.js","lib/constants.js","components/SelectAndCheck.js","components/WebcamSelect.js","hooks/speech.js","hooks/audioController.js","context/audio.js","lib/screenConstants.js","components/GlobalHeader.js","components/Null.js","components/DefaultHeader.js","components/GameScreens/ScreenHeader.js","lib/score.js","components/MasksGrid.js","components/ScoreResults.js","components/CapturedMasks.js","components/GameScreens/SinglePlayer/PracticeFooter.js","components/GameScreens/ScreenFooter.js","components/Options.js","components/SelectGameMode.js","components/FileUpload.js","components/GameSelect.js","components/ProgressBar.js","lib/util.js","hooks/loopHandlers/simpleGame.js","hooks/iterateMask.js","hooks/zip.js","hooks/loopHandlers/captureMasks.js","components/GameScreens/SinglePlayer/Practice.js","hooks/screenHooks/practice.js","components/ChoosePlayers.js","components/GameScreens/ScreenContent.js","hooks/screenController.js","hooks/bodyPixController.js","context/bodyPix.js","hooks/loop.js","hooks/loopTime.js","hooks/lapTimer.js","hooks/game.js","components/Game.js","components/Main/NoWebcam.js","components/Main/index.js","App/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Boolean","window","location","hostname","match","webcamContext","createContext","useWebcam","state","useContext","Error","hasVideo","navigator","mediaDevices","getUserMedia","WebcamProvider","children","rootRef","useRef","videoRef","canvasRef","useState","ctx","setCtx","flipX","setFlipX","ready","setReady","cameras","setCameras","hidden","__setHidden","scratchpad","setScratchpad","videoError","setVideoError","videoStream","setVideoStream","undefined","currentDeviceId","setCurrentDeviceId","autoStartDeviceId","_setAutoStartDeviceId","useEffect","current","getContext","canvas","document","createElement","width","height","_ctx","setVisible","useCallback","_setHidden","clearScratchpad","clearRect","clearCanvas","stopVideo","getTracks","forEach","track","stop","startVideo","userConstraintsOrDeviceIdx","a","console","error","userConstraints","isDeviceIdx","deviceIdx","log","constraints","video","exact","audio","deviceId","stream","getCapabilities","srcObject","message","Promise","all","resolve","onloadedmetadata","onloadeddata","then","start","discoverCameras","enumerateDevices","devices","foundCameras","filter","kind","label","includes","map","currentCamera","idx","lastIndexOf","slice","toggleFlipX","setAutoStartDeviceId","localStorage","setItem","clearAutoStartDeviceId","removeItem","imageDataToDataUri","imageData","putImageData","dataUri","toDataURL","dataUriToImageData","img","Image","src","onload","drawImage","getImageData","getVideoAsImageData","autoStartId","getItem","foundDeviceId","reduce","acc","length","hasFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullScreen","setFullScreen","onTransition","isFullScreen","fullscreenElement","addEventListener","removeEventListener","enterFullScreen","exitFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","context","useMemo","Provider","value","Loader","color","styleProps","useSpring","to","opacity","from","config","stiff","div","style","version","id","xmlns","x","y","viewBox","enableBackground","fill","d","attributeName","attributeType","type","dur","repeatCount","useStyles","makeStyles","theme","root","fs","maxWidth","margin","position","spacing","maxHeight","display","alignItems","justifyContent","container","paddingLeft","paddingRight","borderRadius","transform","top","left","overflow","bottom","zIndex","right","background","overlay","overlayColor","fsOverlay","loader","Webcam","props","webcam","classes","ref","className","autoPlay","videoWidth","videoHeight","classnames","IconButton","onClick","noop","arrowIcon","marginLeft","tooltip","arrow","fontSize","content","borderStyle","paper","border","popper","marginTop","borderWidth","borderColor","palette","grey","marginBottom","marginRight","SelectAndCheck","Math","random","isMountedRef","anchorEl","setAnchorEl","arrowRef","setArrowRef","handleClickSelect","event","currentTarget","closeSelect","handleCloseSelect","onClose","handleClickCheckbox","onClickCheckbox","target","handleClickSelectItem","onSelect","open","Button","disableRipple","variant","aria-haspopup","button","aria-controls","SelectProps","activeTitle","title","Menu","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuProps","options","i","key","text","selected","tooltipTitle","checked","checkboxValue","TooltipAndCheckbox","_Checkbox","Checkbox","tooltipText","Tooltip","PopperProps","popperOptions","modifiers","enabled","element","Fragment","enterDelay","tooltipEnterDelay","leaveDelay","tooltipLeaveDelay","aria-label","placement","tooltipPlacement","MenuItem","MenuItemProps","ListItemText","primary","toString","WebcamSelect","selectedCamera","_selectedCamera","none","some","camera","handleSelectCamera","handleSetDefaultCamera","synth","speechSynthesis","useAudioController","audioRef","audioState","setAudioState","speech","voices","setVoices","voice","setVoice","allVoices","getVoices","say","utterance","SpeechSynthesisUtterance","speak","countdown","onEnd","onEach","setTimeout","Array","_","num","useSpeech","toggle","stateRef","handlers","audioContext","useAudio","AudioProvider","screenTypes","screenStates","screen","DEFAULT","PLAY","players","SINGLE_PLAYER","MULTIPLAYER","mode","PRACTICE","SURVIVAL","TIME_ATTACK","LOCAL","REMOTE","wipScreens","item","screenStatesArrays","Object","entries","stateKey","statesObj","values","modeAcc","playerModeKey","playerModesObj","initialScreenState","btn","back","volume","memo","onHomeScreen","size","goHome","goBack","Null","textAlign","heading","DefaultHeader","Typography","component","game","Headers","ScreenHeader","screenState","HeaderContent","rawScoreToTenBinScore","score","p","max","min","round","tenBinScoreToPercent","scoreToColor","alpha","r","g","hex","b","hexToRGB","red","green","blue","rawScoreToColor","masks","padding","masksHeader","masksList","flexFlow","maskContainer","imgContainer","removeMask","transition","iconBtn","backgroundColor","actions","MasksGrid","actionButtons","getDataUri","getImageChild","getPaperProps","PaperProps","Paper","Icon","maskItem","paperProps","alt","ScoreResults","results","handleClose","gameScoreAverage","binPercentScore","scoreColor","fixedGameScore","toFixed","CandidateMasks","captureMasks","handlePlay","PlayIcon","DownloadIcon","downloadMasks","CloseIcon","removeAllMasks","binary","PracticeFooter","useGame","simpleGame","handlePlayCapturedMasks","scores","clearScores","CapturedMasks","Footers","ScreenFooter","Footer","flexDirection","minWidth","Options","trail","useTrail","buttons","offset","Component","visible","componentProps","gameMode","header","SelectGameMode","handleSetGameMode","setGameMode","disabled","fileInput","FileUpload","onChange","multiple","buttonProps","fileRef","handleFileUpload","fileObject","disallowMultiple","allFiles","files","filteredFiles","resetFile","GameSelect","setWidth","clientWidth","React","handleOpen","handleClick","fullWidth","containerRef","flip","pWebkitTransform","filler","completed","ProgressBar","getOpenCvMaskFromSegmentation","segmentation","flipped","data","binaryBytes","Uint8ClampedArray","parseInt","isPerson","bytes_index","binaryImageData","ImageData","segData","cv","matFromImageData","rgbaPlanes","MatVector","split","pre_mask","Mat","threshold","get","THRESH_BINARY","contours","hierarchy","findContours","RETR_CCOMP","CHAIN_APPROX_SIMPLE","mask","zeros","rows","cols","CV_8UC1","contourArea","drawContours","LINE_8","delete","getSegmentationeOverlayAndBinaryImageData","CV_8UC4","setTo","borderMask","M","ones","CV_8U","anchor","Point","dilate","BORDER_CONSTANT","morphologyDefaultBorderValue","subtract","merge","overlayImageData","getScoreAndOverlayForSegmentationAndImageData","targetImageData","segmentationMask","segOverlay","segOverlayImageData","targetData","targetRgbaPlanes","mergedImage","addWeighted","mergedOverlayImageData","bytes","union","intersection","isInPolygon","isIntersection","isMissedPolygon","isPersonOutOfPolygon","isInteresting","targetOverlay","getMaskName","useSimpleGame","promRef","maskIterator","masksRef","maskRef","maskIdxRef","_setMasks","setMasks","newMasks","reset","next","currentMask","getNumMasks","hasMasks","useIterateMask","setScores","zip","zipLoading","setZipLoading","loadZippedMasks","file","JSZip","loadAsync","endsWith","async","binaryMasks","b64","masksAsImageData","handleZipInputChange","handleLoadPreparedMasks","filename","external","reject","JSZipUtils","getBinaryContent","process","err","handleLoadRandomMaskSet","floor","loading","useZip","progressPercent","setProgressPercent","handleLoop","controller","time","first","useTimer","maxLaps","printSeconds","announceSeconds","lapDuration","newLapDelay","onLap","predict","progress_percent","lapTime","useCaptureMasks","index","folder","imageDataUri","decode","dataBase64","base64","generateAsync","zipFile","blob","msSaveOrOpenBlob","msSaveBlob","elem","href","URL","createObjectURL","download","body","documentElement","appendChild","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","revokeObjectURL","saveAs","onBeforeStartLap","overlayDataUri","binaryDataUri","rootTop","rootApart","optionsTop","captures","progress","Practice","practice","loop","loopType","setLoopType","looping","handleClickGame","handleStartRandomGame","handleClickCaptureMasks","setMode","usePractice","timerColor","ChoosePlayers","handleSetPlayerMode","setPlayerMode","playerMode","Screens","ScreenContent","Content","reducer","action","newState","bodyPixWorker","BodyPixWorker","bodyPixContext","BodyPixProvider","loadRef","preloadRef","netReady","setNetReady","netPreloaded","setNetPreloaded","load","catch","useBodyPixController","useLoop","useBodyPix","loopTime","lastTimeRef","startTimeRef","totalFramesRef","fpsSumRef","timestamp","resetLapTime","update","deltaTime","fps","avgFps","elapsed","frames","useLoopTime","lapTimer","postLapDelay","onBeforeComplete","onBeforeStarted","numLaps","handleLap","secondsPassed","font","fillStyle","fillText","lastSpeech","handlerCalled","handlerResolved","lapNum","clear","useLapTimer","loopingRef","handleLoopRef","setLooping","setStartLoop","setStopLoop","cleanup","requestAnimationFrame","useGameController","useReducer","dispatch","setScreen","resetState","reverseState","useScreenController","screenHandlers","gameContext","NoWebcam","startedRef","createMuiTheme","cvReady","setCvReady","particlesRef","interval","setInterval","clearInterval","Particles","init","selector","CssBaseline","ReactDOM","render","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ff509b45.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"load\",\"predict\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"60a0dfbb6ed702cd6027.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {\n  createContext,\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n  useContext,\n} from 'react';\n\nexport const webcamContext = createContext();\n\nexport const useWebcam = () => {\n  const state = useContext(webcamContext);\n\n  if (!state) {\n    throw new Error('useWebcam must be used within a WebcamProvider');\n  }\n\n  return state;\n};\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst AUTOSTART_KEY = 'AutoStartId';\nconst hasVideo = !!navigator?.mediaDevices?.getUserMedia;\n\nconst WebcamProvider = ({ children }) => {\n  const rootRef = useRef();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [ctx, setCtx] = useState(null);\n  const [flipX, setFlipX] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [hidden, __setHidden] = useState(true);\n  const [scratchpad, setScratchpad] = useState(null);\n  const [videoError, setVideoError] = useState(null);\n  const [videoStream, setVideoStream] = useState(null);\n  const [currentDeviceId, setCurrentDeviceId] = useState(undefined);\n  const [autoStartDeviceId, _setAutoStartDeviceId] = useState(undefined);\n\n  useEffect(() => {\n    if (canvasRef.current && !ctx) {\n      setCtx(canvasRef.current.getContext('2d'));\n    } else if (ctx && !canvasRef.current) {\n      setCtx(null);\n    }\n  }, [ctx]);\n\n  // create a scratchpad for performing image transformations\n  // without cluttering the main canvas\n  useEffect(() => {\n    if (ready && !scratchpad) {\n      const canvas = document.createElement('canvas');\n      canvas.width = canvasRef.current.width;\n      canvas.height = canvasRef.current.height;\n      const _ctx = canvas.getContext('2d');\n\n      setScratchpad({ ctx: _ctx, canvas });\n    }\n  }, [scratchpad, ready]);\n\n  const setVisible = useCallback(() => {\n    __setHidden(false);\n  }, []);\n\n  const _setHidden = useCallback(() => {\n    __setHidden(true);\n  }, []);\n\n  const clearScratchpad = useCallback(() => {\n    scratchpad.ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [scratchpad]);\n\n  const clearCanvas = useCallback(() => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [ctx]);\n\n  const stopVideo = useCallback(() => {\n    if (videoStream) {\n      videoStream.getTracks().forEach((track) => track.stop());\n    }\n\n    setVideoError(null);\n    setVideoStream(null);\n    setReady(false);\n    setCurrentDeviceId(undefined);\n  }, [videoStream]);\n\n  const startVideo = useCallback(\n    async (userConstraintsOrDeviceIdx) => {\n      stopVideo();\n\n      if (!hasVideo) {\n        const message = 'Video not supported';\n\n        console.error(message);\n        setVideoError(message);\n\n        return;\n      }\n\n      const isDeviceIdx = typeof userConstraintsOrDeviceIdx === 'number';\n\n      const userConstraints = isDeviceIdx ? {} : userConstraintsOrDeviceIdx || {};\n      const deviceIdx = isDeviceIdx ? userConstraintsOrDeviceIdx : userConstraints.deviceIdx;\n\n      try {\n        console.log('Finding Webcams...');\n        const constraints = {\n          video: {\n            width: { exact: userConstraints.width || VIDEO_WIDTH },\n            height: { exact: userConstraints.height || VIDEO_HEIGHT },\n          },\n          audio: false,\n        };\n\n        if (deviceIdx !== undefined) {\n          userConstraints.deviceId = cameras[deviceIdx]?.deviceId;\n        }\n\n        if (userConstraints.deviceId) {\n          constraints.video.deviceId = { exact: userConstraints.deviceId };\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const deviceId = stream.getTracks()[0]?.getCapabilities()?.deviceId;\n\n        console.log('Found webcam!');\n        setVideoStream(stream);\n        setCurrentDeviceId(deviceId);\n        videoRef.current.srcObject = stream;\n      } catch (e) {\n        const message = 'Error starting video.';\n        console.error(message);\n        console.error(e.message);\n        setVideoStream(null);\n        setReady(false);\n        setVideoError(message);\n\n        return;\n      }\n\n      return await Promise.all([\n        new Promise((resolve) => {\n          videoRef.current.onloadedmetadata = () => resolve();\n        }),\n        new Promise((resolve) => {\n          videoRef.current.onloadeddata = () => resolve();\n        }),\n      ]).then(() => {\n        console.log('Webcam ready!');\n        setReady(true);\n        __setHidden(false);\n      });\n    },\n    [stopVideo, videoRef, cameras],\n  );\n\n  const start = useCallback(async () => startVideo({ deviceId: autoStartDeviceId }), [\n    autoStartDeviceId,\n    startVideo,\n  ]);\n\n  const discoverCameras = useCallback(async () => {\n    const enumerateDevices = navigator?.mediaDevices?.enumerateDevices;\n\n    if (!enumerateDevices) {\n      console.error('Cannot get cameras.');\n\n      return [];\n    }\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const foundCameras = devices\n      .filter(\n        ({ kind, label }) => kind === 'videoinput' && !label.includes('CamTwist'), // filter by video elements and remove CamTwist virtual devices\n      )\n      .map((currentCamera) => {\n        let label;\n        const idx = currentCamera.label.lastIndexOf(' (');\n        if (idx > -1) label = currentCamera.label.slice(0, idx);\n\n        return label ? { deviceId: currentCamera.deviceId, label } : currentCamera;\n      });\n\n    setCameras(foundCameras);\n\n    return foundCameras;\n  }, []);\n\n  const toggleFlipX = useCallback(() => setFlipX((state) => !state), []);\n\n  const setAutoStartDeviceId = useCallback((deviceId) => {\n    window.localStorage.setItem(AUTOSTART_KEY, deviceId);\n    _setAutoStartDeviceId(deviceId);\n  }, []);\n\n  const clearAutoStartDeviceId = useCallback(() => {\n    window.localStorage.removeItem(AUTOSTART_KEY);\n    _setAutoStartDeviceId(null);\n  }, []);\n\n  const imageDataToDataUri = useCallback(\n    (imageData) => {\n      clearScratchpad();\n      scratchpad.ctx.putImageData(imageData, 0, 0);\n      const dataUri = scratchpad.canvas.toDataURL('image/png');\n      clearScratchpad();\n\n      return dataUri;\n    },\n    [scratchpad, clearScratchpad],\n  );\n\n  const dataUriToImageData = useCallback(\n    async (dataUri) => {\n      clearScratchpad();\n      const img = new Image();\n      img.src = dataUri;\n\n      await new Promise((resolve) => {\n        img.onload = () => {\n          scratchpad.ctx.drawImage(img, 0, 0);\n          resolve();\n        };\n      });\n\n      const imageData = scratchpad.ctx.getImageData(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n      clearScratchpad();\n\n      return imageData;\n    },\n    [clearScratchpad, scratchpad],\n  );\n\n  const getVideoAsImageData = useCallback(() => {\n    clearScratchpad();\n    scratchpad.ctx.drawImage(videoRef.current, 0, 0);\n    const imageData = scratchpad.ctx.getImageData(\n      0,\n      0,\n      canvasRef.current.width,\n      canvasRef.current.height,\n    );\n    clearScratchpad();\n\n    return imageData;\n  }, [clearScratchpad, scratchpad]);\n\n  useEffect(() => {\n    discoverCameras().then((foundCameras) => {\n      const autoStartId = window.localStorage.getItem(AUTOSTART_KEY);\n\n      const foundDeviceId = foundCameras.reduce(\n        (acc, { deviceId, label }, idx) =>\n          acc ||\n          (deviceId === autoStartId ||\n          (!autoStartId && foundCameras.length === 1 && idx === 0) ||\n          (!autoStartId && label.includes('Built-in'))\n            ? deviceId\n            : null),\n        null,\n      );\n\n      if (foundDeviceId) {\n        setAutoStartDeviceId(foundDeviceId);\n      } else if (!foundDeviceId && autoStartId) clearAutoStartDeviceId();\n    });\n  }, []); // eslint-disable-line\n\n  const hasFullScreen = !!(\n    rootRef.current?.requestFullscreen ||\n    rootRef.current?.mozRequestFullScreen ||\n    rootRef.current?.webkitRequestFullscreen ||\n    rootRef.current?.msRequestFullscreen\n  );\n\n  const [fullScreen, setFullScreen] = useState(false);\n\n  useEffect(() => {\n    const onTransition = () => {\n      const isFullScreen = !!document.fullscreenElement;\n      setFullScreen(isFullScreen);\n    };\n\n    document.addEventListener('fullscreenchange', onTransition);\n\n    return () => document.removeEventListener('fullscreenchange', onTransition);\n  }, []);\n\n  const enterFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (rootRef.current.requestFullscreen) {\n      rootRef.current.requestFullscreen();\n    } else if (rootRef.current.mozRequestFullScreen) {\n      /* Firefox */\n      rootRef.current.mozRequestFullScreen();\n    } else if (rootRef.current.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      rootRef.current.webkitRequestFullscreen();\n    } else if (rootRef.current.msRequestFullscreen) {\n      /* IE/Edge */\n      rootRef.current.msRequestFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const exitFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const toggleFullScreen = useCallback(() => {\n    if (fullScreen) exitFullScreen();\n    else enterFullScreen();\n  }, [fullScreen, enterFullScreen, exitFullScreen]);\n\n  const context = useMemo(\n    () => ({\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      rootRef,\n      cameras,\n      setFlipX,\n      videoRef,\n      hasVideo,\n      _setHidden,\n      canvasRef,\n      stopVideo,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      clearCanvas,\n      toggleFlipX,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      stop: stopVideo,\n      discoverCameras,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n      isFullScreen: fullScreen,\n    }),\n    [\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      cameras,\n      setFlipX,\n      _setHidden,\n      stopVideo,\n      fullScreen,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      toggleFlipX,\n      clearCanvas,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      discoverCameras,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n    ],\n  );\n\n  return <webcamContext.Provider value={context}>{children}</webcamContext.Provider>;\n};\n\nexport default WebcamProvider;\n","import React from 'react';\nimport { useSpring, animated, config } from 'react-spring';\n\nconst Loader = ({ color = '#fff' }) => {\n  const styleProps = useSpring({ to: { opacity: 1 }, from: { opacity: 0 }, config: config.stiff });\n\n  // https://codepen.io/nikhil8krishnan\n  return (\n    <animated.div style={styleProps}>\n      <svg\n        version=\"1.1\"\n        id=\"L7\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 100 100\"\n        enableBackground=\"new 0 0 100 100\"\n      >\n        <path\n          fill={color}\n          d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n    c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n    c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"1s\"\n            from=\"0 50 50\"\n            to=\"-360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n    L82,35.7z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </animated.div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useSpring, animated, config } from 'react-spring';\nimport EnterFullScreen from '@material-ui/icons/Fullscreen';\nimport ExitFullScreen from '@material-ui/icons/FullscreenExit';\n\nimport Loader from './Loader';\nimport { maxWidth } from '../lib/constants';\nimport { useWebcam } from '../context/webcam';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ isFullScreen: fs }) => ({\n    maxWidth,\n    margin: '0 auto',\n    position: 'relative',\n    height: `calc(0.5625 * (100vw - ${theme.spacing(4)}px))`,\n    maxHeight: `calc(0.5625 * (1200px - ${theme.spacing(4)}px))`,\n    ...(fs\n      ? {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }\n      : {}),\n  }),\n  container: ({ isFullScreen: fs }) => ({\n    width: '100%',\n    position: 'relative',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  video: ({ flipX, isFullScreen: fs }) => ({\n    width: '100%',\n    height: '100%',\n    borderRadius: fs ? 0 : theme.spacing(1),\n    ...(flipX\n      ? {\n          'p-webkit-transform': 'scaleX(- 1)',\n          transform: 'scaleX(-1)',\n        }\n      : {}),\n  }),\n  canvas: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  children: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    bottom: 5,\n    zIndex: 1,\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  fullScreen: {\n    position: 'absolute',\n    bottom: theme.spacing(1.5),\n    right: ({ isFullScreen: fs }) => theme.spacing(fs ? 1.5 : 3),\n    zIndex: 20,\n    '&:hover': {\n      background: 'rgba(255,255,255,0.25)',\n    },\n  },\n  overlay: ({ overlayColor }) => ({\n    background: overlayColor,\n    position: 'absolute',\n    top: 0,\n    bottom: 5,\n    left: theme.spacing(2),\n    right: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n    zIndex: 0,\n  }),\n  fsOverlay: {\n    left: 0,\n    right: 0,\n    borderRadius: 0,\n  },\n  loader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > div': {\n      width: 100,\n      height: 100,\n    },\n  },\n}));\n\nconst Webcam = ({ overlay, ...props }) => {\n  const webcam = useWebcam();\n  const overlayColor = typeof overlay !== 'string' ? 'rgba(255,255,255,0.5)' : overlay;\n  const classes = useStyles({ ...props, ...webcam, overlayColor });\n\n  const styleProps = useSpring({ to: { opacity: !webcam.hidden ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div ref={webcam.rootRef} className={classes.root}>\n      <animated.div style={styleProps} className={classes.container}>\n        <video\n          autoPlay={true}\n          ref={webcam.videoRef}\n          className={classes.video}\n          width={webcam.videoRef?.current?.videoWidth}\n          height={webcam.videoRef?.current?.videoHeight}\n        />\n        <canvas\n          ref={webcam.canvasRef}\n          className={classes.canvas}\n          width={webcam.videoRef?.current?.videoWidth}\n          height={webcam.videoRef?.current?.videoHeight}\n        />\n        {!webcam.hidden && overlay && (\n          <div\n            className={classnames(classes.overlay, {\n              [classes.fsOverlay]: webcam.isFullScreen,\n            })}\n          />\n        )}\n        {props.children && !webcam.hidden && (\n          <div className={classes.children}>{props.children}</div>\n        )}\n        {webcam.hasFullScreen && (\n          <IconButton\n            color=\"secondary\"\n            className={classes.fullScreen}\n            onClick={webcam.toggleFullScreen}\n          >\n            {webcam.isFullScreen ? (\n              <ExitFullScreen color=\"secondary\" />\n            ) : (\n              <EnterFullScreen color=\"secondary\" />\n            )}\n          </IconButton>\n        )}\n      </animated.div>\n      {webcam.hidden && (\n        <div className={classes.loader}>\n          <div>\n            <Loader color=\"#000\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nWebcam.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Webcam;\n","export const maxWidth = 1100;\n\nexport const numShippedMasks = 3;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback, useState } from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nconst noop = () => {};\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    position: 'relative',\n  }),\n  arrowIcon: (props) => ({\n    marginLeft: theme.spacing(1),\n  }),\n  tooltip: (props) => ({\n    position: 'relative',\n    margin: 0,\n  }),\n  arrow: (props) => ({\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  }),\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n  popper: (props) => ({\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.grey[700]} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.grey[700]} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.grey[700]} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.grey[700]}`,\n      },\n    },\n  }),\n}));\n\nconst SelectAndCheck = (props) => {\n  const classes = useStyles(props);\n  const id = useMemo(Math.random, []);\n\n  const isMountedRef = useRef();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [arrowRef, setArrowRef] = useState(null);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  const handleClickSelect = useCallback((event) => {\n    if (isMountedRef.current) setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeSelect = useCallback(() => {\n    if (isMountedRef.current) setAnchorEl(null);\n  }, []);\n\n  const handleCloseSelect = useCallback(async () => {\n    const keepOpen = await (props.onClose || noop)();\n\n    if (keepOpen !== true) {\n      closeSelect();\n    }\n  }, [closeSelect, props.onClose]);\n\n  const handleClickCheckbox = useCallback(\n    (event) => {\n      (props.onClickCheckbox || noop)(event.target.value, handleCloseSelect);\n    },\n    [props.onClickCheckbox, handleCloseSelect],\n  );\n\n  const handleClickSelectItem = useCallback(\n    (value) => async (event) => {\n      if (event.target.type === 'checkbox') {\n        return;\n      }\n\n      const keepOpen = await (props.onSelect || noop)(value);\n\n      if (keepOpen !== true) {\n        handleCloseSelect();\n      }\n    },\n    [handleCloseSelect, props.onSelect],\n  );\n\n  const open = !!anchorEl;\n\n  return (\n    <div className={classes.root}>\n      <Button\n        disableRipple\n        variant=\"outlined\"\n        aria-haspopup=\"true\"\n        className={classes.button}\n        onClick={handleClickSelect}\n        aria-controls={`select-and-check-${id}`}\n        {...props.SelectProps}\n      >\n        {open ? props.activeTitle || props.title : props.title}\n        {open ? (\n          <ArrowDropUpIcon className={classes.arrowIcon} />\n        ) : (\n          <ArrowDropDownIcon className={classes.arrowIcon} />\n        )}\n      </Button>\n      <Menu\n        keepMounted\n        open={open}\n        elevation={0}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        onClose={handleCloseSelect}\n        id={`select-and-check-${id}`}\n        classes={{ paper: classes.paper }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        {...props.MenuProps}\n      >\n        {props.options?.map(\n          ({ key, value, text, selected, tooltipTitle, checked, checkboxValue }, i) => {\n            let TooltipAndCheckbox = null;\n\n            if (typeof checked === 'boolean') {\n              const _Checkbox = (\n                <Checkbox\n                  checked={checked}\n                  onClick={handleClickCheckbox}\n                  value={checkboxValue === undefined ? value : checkboxValue}\n                />\n              );\n              const tooltipText = tooltipTitle || props.tooltipTitle;\n\n              TooltipAndCheckbox = tooltipText ? (\n                <Tooltip\n                  classes={{ tooltip: classes.tooltip, popper: classes.popper }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: !!arrowRef,\n                          element: arrowRef,\n                        },\n                      },\n                    },\n                  }}\n                  title={\n                    <React.Fragment>\n                      {tooltipText}\n                      <span className={classes.arrow} ref={setArrowRef} />\n                    </React.Fragment>\n                  }\n                  enterDelay={props.tooltipEnterDelay === undefined ? 750 : props.tooltipEnterDelay}\n                  leaveDelay={props.tooltipLeaveDelay || 0}\n                  aria-label=\"checkbox\"\n                  placement={props.tooltipPlacement || 'top'}\n                >\n                  {_Checkbox}\n                </Tooltip>\n              ) : (\n                _Checkbox\n              );\n            }\n\n            return (\n              <MenuItem\n                key={key || i}\n                onClick={handleClickSelectItem(value)}\n                selected={selected}\n                {...props.MenuItemProps}\n              >\n                {TooltipAndCheckbox}\n                <ListItemText primary={text || value?.toString()} />\n              </MenuItem>\n            );\n          },\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nSelectAndCheck.propTypes = {\n  styles: PropTypes.object,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  onSelect: PropTypes.func,\n  MenuProps: PropTypes.object,\n  SelectProps: PropTypes.object,\n  activeTitle: PropTypes.string,\n  tooltipTitle: PropTypes.string,\n  MenuItemProps: PropTypes.object,\n  onClickCheckbox: PropTypes.func,\n  tooltipEnterDelay: PropTypes.number,\n  tooltipLeaveDelay: PropTypes.number,\n  tooltipPlacement: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default SelectAndCheck;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback } from 'react';\n\nimport SelectAndCheck from './SelectAndCheck';\nimport { useWebcam } from '../context/webcam';\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({}),\n}));\n\nconst WebcamSelect = (props) => {\n  const webcam = useWebcam();\n  const classes = useStyles({ ...props, ...webcam });\n\n  const selectedCamera = useMemo(() => {\n    let _selectedCamera = { deviceId: null, label: null, none: true };\n\n    if (!webcam.currentDeviceId) {\n      return _selectedCamera;\n    }\n\n    webcam.cameras.some((camera) => {\n      if (camera.deviceId === webcam.currentDeviceId) {\n        _selectedCamera = camera;\n\n        return true;\n      }\n\n      return false;\n    });\n\n    return _selectedCamera;\n  }, [webcam.cameras, webcam.currentDeviceId]);\n\n  const handleSelectCamera = useCallback(\n    (deviceId) => {\n      if (webcam.currentDeviceId !== deviceId) {\n        webcam.startVideo({ deviceId });\n      }\n    },\n    [webcam],\n  );\n\n  const handleSetDefaultCamera = useCallback(\n    (deviceId) => {\n      if (webcam.autoStartDeviceId === deviceId) {\n        webcam.clearAutoStartDeviceId();\n      } else {\n        webcam.setAutoStartDeviceId(deviceId);\n        handleSelectCamera(deviceId);\n      }\n    },\n    [webcam, handleSelectCamera],\n  );\n\n  return (\n    <div className={classes.root}>\n      <SelectAndCheck\n        activeTitle=\"Select Camera\"\n        title={\n          webcam.cameras?.length\n            ? selectedCamera.label || 'No Camera Selected'\n            : 'No Cameras Detected'\n        }\n        onSelect={handleSelectCamera}\n        onClickCheckbox={handleSetDefaultCamera}\n        options={webcam.cameras.map((camera) => ({\n          key: camera.label,\n          value: camera.deviceId,\n          text: camera.label || 'Unknown Device',\n          selected: camera.deviceId === webcam.currentDeviceId,\n          checked: webcam.autoStartDeviceId === camera.deviceId,\n          tooltipTitle:\n            webcam.autoStartDeviceId === camera.deviceId ? 'Remove Default' : 'Set Default',\n        }))}\n      />\n    </div>\n  );\n};\n\nWebcamSelect.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default WebcamSelect;\n","import { useState, useEffect, useCallback } from 'react';\n\nconst synth = window.speechSynthesis;\n\nexport const useSpeech = (audioRef) => {\n  if (!audioRef) {\n    throw new Error('audioRef is required when calling useSpeech');\n  }\n\n  const [voices, setVoices] = useState(null);\n  const [voice, setVoice] = useState(null);\n\n  useEffect(() => {\n    if (!voices) {\n      const allVoices = synth.getVoices();\n      setVoices(allVoices);\n      setVoice(allVoices[0]);\n    }\n  }, [voices]);\n\n  const say = useCallback(\n    (text) => {\n      if (!audioRef.current) return;\n\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.voice = voice;\n      synth.speak(utterance);\n    },\n    [voice, audioRef],\n  );\n\n  const countdown = useCallback(\n    (from, { onEnd, onEach } = {}) => {\n      if (onEnd) setTimeout(onEnd, from * 1000);\n      Array.from({ length: from }).forEach((_, idx) => {\n        const num = from - idx;\n        setTimeout(() => {\n          say(num);\n          if (onEach) onEach(num);\n        }, idx * 1000);\n      });\n    },\n    [say],\n  );\n\n  return { say, countdown };\n};\n","import { useMemo, useRef, useState, useEffect, useCallback } from 'react';\nimport { useSpeech } from './speech';\n\nconst LS_AUDIO = '__audio_muted__';\n\nexport const useAudioController = () => {\n  const audioRef = useRef(true);\n  const [audioState, setAudioState] = useState(true);\n\n  const speech = useSpeech(audioRef);\n\n  useEffect(() => {\n    const muteAudio = localStorage.getItem(LS_AUDIO);\n\n    if (muteAudio) {\n      setAudioState(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (audioState && !audioRef.current) {\n      audioRef.current = true;\n      localStorage.removeItem(LS_AUDIO);\n    } else if (!audioState && audioRef.current) {\n      audioRef.current = false;\n      localStorage.setItem(LS_AUDIO, 'true');\n    }\n  }, [audioState]);\n\n  const toggle = useCallback(() => {\n    setAudioState((state) => !state);\n  }, []);\n\n  const audio = useMemo(\n    () => ({\n      state: audioState,\n      stateRef: audioRef,\n      handlers: { toggle, speech },\n    }),\n    [audioState, toggle, speech],\n  );\n\n  return audio;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useAudioController } from '../hooks/audioController';\n\nexport const audioContext = createContext();\n\nexport const useAudio = () => {\n  const state = useContext(audioContext);\n\n  if (state === undefined) {\n    throw new Error('useAudio must be used within a AudioProvider');\n  }\n\n  return state;\n};\n\nconst AudioProvider = ({ children }) => {\n  const context = useAudioController();\n\n  return <audioContext.Provider value={context}>{children}</audioContext.Provider>;\n};\n\nexport default AudioProvider;\n","export const screenTypes = {\n  SET_SCREEN: 'set_screen',\n  SET_PLAYER_MODE: 'set_player_mode',\n  SET_GAME_MODE: 'set_game_mode',\n  REVERSE: 'reverse_state',\n  RESET: 'reset_state',\n};\n\nconst SINGLE_PLAYER = 'Single Player';\nconst MULTIPLAYER = 'Multi Player';\n\nexport const screenStates = {\n  screen: {\n    DEFAULT: 'start',\n    PLAY: 'play',\n  },\n  players: {\n    SINGLE_PLAYER,\n    MULTIPLAYER,\n    DEFAULT: null,\n  },\n  mode: {\n    [SINGLE_PLAYER]: {\n      PRACTICE: 'Practice',\n      SURVIVAL: 'Survival',\n      TIME_ATTACK: 'Time Attack',\n    },\n    [MULTIPLAYER]: {\n      LOCAL: 'Local Multiplayer',\n      REMOTE: 'Remote Multiplayer',\n    },\n    DEFAULT: null,\n  },\n};\n\n// identifies these values as works in progress, ie disabled buttons\nexport const wipScreens = [\n  screenStates.players.MULTIPLAYER,\n  screenStates.mode[SINGLE_PLAYER].SURVIVAL,\n  screenStates.mode[SINGLE_PLAYER].TIME_ATTACK,\n  screenStates.mode[MULTIPLAYER].LOCAL,\n  screenStates.mode[MULTIPLAYER].REMOTE,\n].reduce((acc, item) => ({ ...acc, [item]: !!1 }), {});\n\nexport const screenStatesArrays = Object.entries(screenStates).reduce(\n  (acc, [stateKey, statesObj]) => ({\n    ...acc,\n    [stateKey]:\n      stateKey !== 'mode'\n        ? Object.values(statesObj).filter((_) => _)\n        : Object.entries(statesObj).reduce(\n            (modeAcc, [playerModeKey, playerModesObj]) => ({\n              ...modeAcc,\n              [playerModeKey]: playerModesObj === null ? null : Object.values(playerModesObj), // check for the default: null thing and get rid of it\n            }),\n            {},\n          ),\n  }),\n  {},\n);\n\nexport const initialScreenState = {\n  screen: screenStates.screen.DEFAULT,\n  mode: screenStates.mode.DEFAULT,\n  players: screenStates.players.DEFAULT,\n};\n","import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport React, { memo } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport BackIcon from '@material-ui/icons/ArrowLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport MuteVolumeIcon from '@material-ui/icons/VolumeMute';\n\nimport WebcamSelect from './WebcamSelect';\nimport { useAudio } from '../context/audio';\nimport { screenStates } from '../lib/screenConstants';\nimport { maxWidth } from '../lib/constants';\nimport { useSpring, config, animated } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    border: '2px solid grey',\n  },\n  back: {\n    marginLeft: theme.spacing(2),\n  },\n  options: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    width: '100%',\n    maxWidth,\n    display: 'flex',\n    margin: '0 auto',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  right: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  volume: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst GlobalHeader = (props) => {\n  const classes = useStyles();\n  const audio = useAudio();\n\n  const onHomeScreen = props.screen === screenStates.screen.DEFAULT;\n  const styleProps = useSpring({ to: { opacity: !onHomeScreen ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div className={classes.options}>\n      <div>\n        {!onHomeScreen && (\n          <animated.div style={styleProps}>\n            <IconButton className={classes.btn} size=\"small\" onClick={props.goHome}>\n              <HomeIcon />\n            </IconButton>\n            <IconButton\n              size=\"small\"\n              onClick={props.goBack}\n              className={classnames(classes.btn, classes.back)}\n            >\n              <BackIcon />\n            </IconButton>\n          </animated.div>\n        )}\n      </div>\n      <div className={classes.right}>\n        <WebcamSelect />\n        <IconButton className={classes.volume} size=\"small\" onClick={audio.handlers.toggle}>\n          {audio.state ? <MuteVolumeIcon /> : <VolumeOffIcon />}\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nGlobalHeader.propTypes = {\n  mode: PropTypes.string,\n  screen: PropTypes.string,\n  goHome: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n};\n\nexport default memo(GlobalHeader);\n","const Null = () => null;\n\nexport default Null;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n  },\n  heading: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst DefaultHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <header className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\n        {props.game.screen.state.screen}\n      </Typography>\n    </header>\n  );\n};\n\nDefaultHeader.propTypes = {\n  game: PropTypes.object.isRequired,\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default DefaultHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Null from '../Null';\nimport DefaultHeader from '../DefaultHeader';\nimport { screenStates } from '../../lib/screenConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst Headers = {\n  [screenStates.screen.DEFAULT]: {\n    [screenStates.players.DEFAULT]: Null,\n  },\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: Null,\n    [screenStates.players.MULTIPLAYER]: Null,\n  },\n};\n\nconst ScreenHeader = (props) => {\n  const classes = useStyles();\n\n  const { screen, players } = props.screenState;\n\n  const HeaderContent = Headers[screen]?.[players] || DefaultHeader;\n\n  return (\n    <header className={classes.root}>\n      <HeaderContent />\n    </header>\n  );\n};\n\nScreenHeader.propTypes = {\n  screenState: PropTypes.object.isRequired,\n};\n\nexport default ScreenHeader;\n","import hexToRGB from 'hex-rgb';\n\nexport const rawScoreToTenBinScore = (score) => {\n  // Takes in score from [0-100] and returns score [1-10]\n  const lowThresh = 25;\n  const highThresh = 88;\n  const p = (score - lowThresh) / (highThresh - lowThresh);\n  return Math.max(1, Math.min(10, Math.round(p * 10)));\n};\n\nexport const tenBinScoreToPercent = (score) => {\n  return (score / 10) * 100;\n};\n\nexport const scoreToColor = (score, alpha) => {\n  // Returns a hex color value from reg to green based on score from 0-100\n  // Using from: https://gist.github.com/mlocati/7210513\n  var r,\n    g,\n    b = 0;\n  if (score < 50) {\n    r = 255;\n    g = Math.round(5.1 * score);\n  } else {\n    g = 255;\n    r = Math.round(510 - 5.1 * score);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  const hex = '#' + ('000000' + h.toString(16)).slice(-6);\n\n  if (alpha) {\n    const { red, green, blue } = hexToRGB(hex);\n\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n  }\n\n  return hex;\n};\n\nexport const rawScoreToColor = (score, alpha) =>\n  scoreToColor(tenBinScoreToPercent(rawScoreToTenBinScore(score)), alpha);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  masks: {\n    padding: theme.spacing(2),\n    background: 'rgba(255,255,255,0.5)',\n  },\n  masksHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  masksList: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-around',\n  },\n  maskContainer: {\n    marginTop: theme.spacing(2),\n  },\n  imgContainer: {\n    width: 200,\n    position: 'relative',\n    border: '1px solid grey',\n    padding: theme.spacing(0.5),\n    borderRadius: theme.spacing(1),\n    '&:hover': {\n      '& > div': {\n        background: 'rgba(255,0,0,0.65)',\n      },\n    },\n  },\n  img: {\n    width: '100%',\n    background: 'rgba(0,0,0,0)',\n  },\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n  actions: {\n    '& > button': {\n      marginRight: theme.spacing(1),\n      '& :last-of-type': {\n        marginRight: 0,\n      },\n    },\n  },\n}));\n\nconst MasksGrid = (props) => {\n  const classes = useStyles();\n\n  const {\n    masks,\n    onClose,\n    title,\n    actions,\n    actionButtons,\n    getDataUri,\n    getImageChild,\n    getPaperProps,\n    PaperProps = {},\n  } = props;\n\n  return (\n    !!masks?.length && (\n      <Paper className={classes.masks} elevation={4}>\n        <div className={classes.masksHeader}>\n          {typeof title === 'string' ? (\n            <Typography variant=\"h6\" component=\"h3\">\n              {title}\n            </Typography>\n          ) : (\n            title || null\n          )}\n          {actions || actionButtons ? (\n            <div className={classes.actions}>\n              {actionButtons.map(({ Icon, onClick, key }) => (\n                <IconButton key={key} size=\"small\" onClick={onClick}>\n                  <Icon />\n                </IconButton>\n              ))}\n            </div>\n          ) : (\n            onClose && (\n              <div className={classes.actions}>\n                <IconButton size=\"small\" onClick={onClose}>\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            )\n          )}\n        </div>\n        <ul className={classes.masksList}>\n          {masks.map((maskItem, i) => {\n            const dataUri = getDataUri ? getDataUri(maskItem) : maskItem;\n            const paperProps = getPaperProps ? getPaperProps(maskItem, i) : {};\n\n            return (\n              <li key={dataUri} className={classes.maskContainer}>\n                <Paper\n                  elevation={4}\n                  className={classes.imgContainer}\n                  {...PaperProps}\n                  {...paperProps}\n                >\n                  {getImageChild && getImageChild(maskItem)}\n                  <img src={dataUri} className={classes.img} alt={`mask #${i}`} />\n                </Paper>\n              </li>\n            );\n          })}\n        </ul>\n      </Paper>\n    )\n  );\n};\n\nMasksGrid.propTypes = {\n  title: PropTypes.node,\n  masks: PropTypes.array,\n  actions: PropTypes.node,\n  onClose: PropTypes.func,\n  getDataUri: PropTypes.func,\n  PaperProps: PropTypes.object,\n  getPaperProps: PropTypes.func,\n  getImageChild: PropTypes.func,\n  actionButtons: PropTypes.array,\n};\n\nexport default MasksGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  tenBinScoreToPercent,\n  rawScoreToColor,\n  rawScoreToTenBinScore,\n  scoreToColor,\n} from '../lib/score';\nimport { useMemo } from 'react';\nimport MasksGrid from './MasksGrid';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  score: {\n    textAlign: 'right',\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nconst ScoreResults = (props) => {\n  const classes = useStyles();\n  const { results, handleClose } = props;\n\n  const title = useMemo(() => {\n    const gameScoreAverage =\n      results.reduce((acc, { score }) => acc + rawScoreToTenBinScore(score), 0) / results.length;\n    const binPercentScore = tenBinScoreToPercent(gameScoreAverage);\n    const scoreColor = scoreToColor(binPercentScore);\n    const fixedGameScore = gameScoreAverage.toFixed(1);\n    const title = (\n      <Typography variant=\"h6\" component=\"h3\">\n        Round Score: <span style={{ color: scoreColor }}>{fixedGameScore}</span>\n      </Typography>\n    );\n\n    return title;\n  }, [results]);\n\n  const getDataUri = useCallback(({ dataUri }) => dataUri, []);\n  const getPaperProps = useCallback(\n    ({ score }) => ({ style: { background: rawScoreToColor(score, 0.4) } }),\n    [],\n  );\n  const getImageChild = useCallback(\n    ({ score }) => (\n      <Typography className={classes.score}>{rawScoreToTenBinScore(score)}</Typography>\n    ),\n    [classes.score],\n  );\n\n  return (\n    <MasksGrid\n      title={title}\n      masks={results}\n      onClose={handleClose}\n      getDataUri={getDataUri}\n      getPaperProps={getPaperProps}\n      getImageChild={getImageChild}\n    />\n  );\n};\n\nScoreResults.propTypes = {\n  results: PropTypes.array.isRequired,\n  handleClose: PropTypes.func,\n};\n\nexport default ScoreResults;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport React, { useMemo, useCallback } from 'react';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayCircleOutline';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport MasksGrid from './MasksGrid';\n\nconst useStyles = makeStyles((theme) => ({\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n}));\n\nconst CandidateMasks = (props) => {\n  const classes = useStyles();\n\n  const { captureMasks, handlePlay } = props;\n\n  const actionButtons = useMemo(\n    () => [\n      {\n        key: 'play',\n        Icon: PlayIcon,\n        onClick: handlePlay,\n      },\n      {\n        key: 'download',\n        Icon: DownloadIcon,\n        onClick: captureMasks.downloadMasks,\n      },\n      {\n        key: 'clear',\n        Icon: CloseIcon,\n        onClick: captureMasks.removeAllMasks,\n      },\n    ],\n    [captureMasks.downloadMasks, captureMasks.removeAllMasks, handlePlay],\n  );\n\n  const getDataUri = useCallback(({ binary: dataUri }) => dataUri, []);\n\n  const getImageChild = useCallback(\n    (maskItem, i) => (\n      <div className={classes.removeMask}>\n        <IconButton name={i} className={classes.iconBtn} onClick={captureMasks.removeMask}>\n          <DeleteForeverIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    ),\n    [captureMasks.removeMask, classes.removeMask, classes.iconBtn],\n  );\n\n  return (\n    <MasksGrid\n      title=\"Candidate Masks\"\n      getDataUri={getDataUri}\n      masks={captureMasks.masks}\n      actionButtons={actionButtons}\n      getImageChild={getImageChild}\n    />\n  );\n};\n\nCandidateMasks.propTypes = {\n  handlePlay: PropTypes.func.isRequired,\n  captureMasks: PropTypes.object.isRequired,\n};\n\nexport default CandidateMasks;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\n\nimport ScoreResults from '../../ScoreResults';\nimport CapturedMasks from '../../CapturedMasks';\nimport { useGame } from '../../Game';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > div': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst PracticeFooter = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n\n  if (!game.mode) return null;\n\n  const { captureMasks, simpleGame, handlePlayCapturedMasks } = game.mode;\n\n  return (\n    <div className={classes.root}>\n      <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n      <CapturedMasks captureMasks={captureMasks} handlePlay={handlePlayCapturedMasks} />\n    </div>\n  );\n};\n\nexport default PracticeFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport { maxWidth } from '../../lib/constants';\nimport { makeStyles } from '@material-ui/styles';\nimport PracticeFooter from './SinglePlayer/PracticeFooter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: '0 auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nconst Footers = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: PracticeFooter,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: () => 'SURVIVAL footer',\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: () =>\n        'TIME_ATTACK footer',\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: () => 'LOCAL footer',\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: () => 'REMOTE footer',\n    },\n  },\n};\n\nconst ScreenFooter = (props) => {\n  const classes = useStyles();\n\n  const { screen, players, mode } = props.screen.state;\n\n  const Footer = Footers[screen]?.[players]?.[mode] || Null;\n\n  return (\n    <div className={classes.root}>\n      <Footer />\n    </div>\n  );\n};\n\nScreenFooter.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenFooter;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core';\nimport { animated, useTrail, config } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    '& > div > *': {\n      marginTop: theme.spacing(2),\n      minWidth: 150,\n    },\n  },\n}));\n\nconst Options = (props) => {\n  const classes = useStyles();\n  const trail = useTrail(props.buttons.length, {\n    transform: 'translate3d(0,0px,0)',\n    from: { transform: `translate3d(0,-${props.offset || 100}px,0)` },\n    config: config.stiff,\n  });\n\n  return (\n    <div className={classes.root}>\n      {trail.map((styleProps, idx) => {\n        const { Component, visible = true, props: componentProps = {} } = props.buttons[idx];\n\n        return visible ? (\n          <animated.div key={componentProps.key} style={styleProps}>\n            {Component ? (\n              <Component {...componentProps} />\n            ) : (\n              <Button color=\"primary\" variant=\"contained\" {...componentProps} />\n            )}\n          </animated.div>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default Options;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { screenStatesArrays, wipScreens } from '../lib/screenConstants';\n\nimport Options from './Options';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    '& button': {\n      minWidth: 150,\n      marginTop: theme.spacing(2),\n    },\n  },\n  gameMode: {\n    textAlign: 'center',\n  },\n  header: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst SelectGameMode = (props) => {\n  const classes = useStyles();\n\n  const handleSetGameMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.screen.handlers.setGameMode(name);\n    },\n    [props.screen.handlers],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.mode[props.screen.state.players]?.map((gameMode) => ({\n        props: {\n          key: gameMode,\n          name: gameMode,\n          children: gameMode,\n          onClick: handleSetGameMode,\n          disabled: !!wipScreens[gameMode],\n        },\n      })),\n    [props.screen.state.players, handleSetGameMode],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.gameMode}>\n        <Options buttons={buttons} />\n      </div>\n    </div>\n  );\n};\n\nSelectGameMode.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default SelectGameMode;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  fileInput: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = ({ onChange, multiple, children, filter, ...buttonProps }) => {\n  const classes = useStyles();\n\n  const fileRef = useRef();\n\n  const handleFileUpload = useCallback(\n    (fileObject) => {\n      if (!fileObject) return;\n\n      const disallowMultiple = multiple === false;\n      const allFiles = fileObject.target ? Array.from(fileObject.target.files) : fileObject.files;\n      let filteredFiles = filter ? allFiles.filter(filter) : allFiles;\n\n      if (disallowMultiple && filteredFiles.length > 1) {\n        filteredFiles = filteredFiles.slice(0, 1);\n      }\n\n      onChange(filteredFiles);\n    },\n    [onChange, multiple, filter],\n  );\n\n  const resetFile = useCallback(() => {\n    fileRef.current.value = null;\n  }, [fileRef]);\n\n  return (\n    <Button component=\"label\" {...buttonProps}>\n      {children}\n      <input\n        type=\"file\"\n        ref={fileRef}\n        className={classes.fileInput}\n        onClick={resetFile}\n        onChange={handleFileUpload}\n        multiple={multiple !== false}\n      />\n    </Button>\n  );\n};\n\nFileUpload.propTypes = {\n  multiple: PropTypes.bool,\n  filterFiles: PropTypes.func,\n  buttonProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FileUpload;\n","import PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useRef, useCallback, useEffect, useState } from 'react';\n\nimport { numShippedMasks } from '../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  item: (width) => ({\n    minWidth: width - theme.spacing(4),\n    textAlign: 'center',\n  }),\n}));\n\nconst GameSelect = (props) => {\n  const [width, setWidth] = useState(0);\n  const classes = useStyles(width);\n\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.clientWidth);\n    }\n  }, []);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleClick = useCallback(\n    (name) => () => {\n      props.handleClick(name);\n      handleClose();\n    },\n    [props, handleClose],\n  );\n\n  return (\n    <>\n      <div ref={ref}>\n        <Button\n          fullWidth={true}\n          variant=\"contained\"\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n          aria-controls=\"mask-menu\"\n          disabled={props.disabled}\n        >\n          Select Masks\n        </Button>\n      </div>\n      <Menu\n        id=\"mask-menu\"\n        keepMounted={true}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        onClose={handleClose}\n        open={Boolean(anchorEl)}\n        container={props.containerRef.current || null}\n      >\n        {Array.from({ length: numShippedMasks }).map((_, idx) => (\n          <MenuItem key={idx} button={true} onClick={handleClick(`set${idx + 1}.zip`)}>\n            <span className={classes.item}>Game {idx + 1}</span>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nGameSelect.propTypes = {\n  value: PropTypes.string,\n  containerRef: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default GameSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ flip, height = 10, background = 'rgba(255,255,255,0)' }) => ({\n    height,\n    background,\n    width: '100%',\n    borderRadius: 50,\n    transform: `scaleX(${flip ? -1 : 1})`,\n    pWebkitTransform: `scaleX(${flip ? -1 : 1})`,\n  }),\n  filler: ({ completed, color }) => ({\n    height: '100%',\n    textAlign: 'left',\n    background: color,\n    width: `${completed}%`,\n    borderRadius: 'inherit',\n  }),\n}));\n\nconst ProgressBar = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.filler} />\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  flip: PropTypes.bool,\n  color: PropTypes.string.isRequired,\n  completed: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ProgressBar;\n","/* global cv:false */\nimport inside from 'point-in-polygon';\n\nexport const polygonToArray = (polygon, width, height) => {\n  const bytes = new Uint8ClampedArray(width * height * 4);\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n    const isIn = Number(inside([x, y], polygon)) * 255;\n    bytes[i * 4] = isIn;\n    bytes[i * 4 + 1] = isIn;\n    bytes[i * 4 + 2] = isIn;\n    bytes[i * 4 + 3] = isIn ? 128 : 0;\n  }\n  return new ImageData(bytes, width, height);\n};\n\nexport const getOpenCvMaskFromSegmentation = (segmentation, flipped) => {\n  const { data, width, height } = segmentation;\n  const binaryBytes = new Uint8ClampedArray(segmentation.data.length * 4);\n  // TODO: See if we can directly create CVMat from segmentation.data.\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const isPerson = data[i];\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    binaryBytes[bytes_index * 4] = isPerson ? 255 : 0; // red\n    binaryBytes[bytes_index * 4 + 1] = isPerson ? 255 : 0; // green\n    binaryBytes[bytes_index * 4 + 2] = isPerson ? 255 : 0; // blue\n    binaryBytes[bytes_index * 4 + 3] = isPerson ? 255 : 0; // alpha\n  }\n  let binaryImageData = new ImageData(binaryBytes, width, height);\n\n  // Load data into Mat.\n  let segData = cv.matFromImageData(binaryImageData);\n\n  // Create a single channel mask.\n  let rgbaPlanes = new cv.MatVector();\n  cv.split(segData, rgbaPlanes);\n  let pre_mask = new cv.Mat();\n  // Threshold on one channel (doesn't matter which one)\n  cv.threshold(rgbaPlanes.get(0), pre_mask, 128, 1, cv.THRESH_BINARY); // Mask is 0s and 1s, type CV_8UC1\n\n  // Use findContours/drawContours to remove small blobs.\n  // See example: https://docs.opencv.org/3.4/d5/daa/tutorial_js_contours_begin.html\n  // TODO: This only updates the overlay. Also update the Mask.\n  let contours = new cv.MatVector();\n  let hierarchy = new cv.Mat();\n  cv.findContours(pre_mask, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n  let mask = cv.Mat.zeros(pre_mask.rows, pre_mask.cols, cv.CV_8UC1);\n  let area = 0;\n  let minAreaThreshold = 10000; // Can change this, starting off with 100x100.\n  for (let i = 0; i < contours.size(); ++i) {\n    area = cv.contourArea(contours.get(i));\n    if (area > minAreaThreshold) {\n      cv.drawContours(mask, contours, i, [1, 1, 1, 1], -1 /*fill*/, cv.LINE_8, hierarchy, 100);\n    }\n  }\n\n  // Cleanup\n  segData.delete();\n  rgbaPlanes.delete();\n\n  return mask;\n};\n\nexport const getSegmentationeOverlayAndBinaryImageData = (segmentation, flipped) => {\n  const mask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n\n  // Create a Blue opaque overlay with a solid Green border.\n  // NOTE: Images are in RGBA format\n  let rgbaPlanes = new cv.MatVector();\n  let overlay = cv.Mat.zeros(mask.rows, mask.cols, cv.CV_8UC4);\n  cv.split(overlay, rgbaPlanes);\n  // Fill blue channel and alpha using the mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], mask); // Blue\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], mask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(mask, borderMask, M, anchor, 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue());\n  cv.subtract(borderMask, mask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], borderMask); // Blue\n  // rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, overlay);\n  const overlayImageData = new ImageData(\n    new Uint8ClampedArray(overlay.data),\n    overlay.cols,\n    overlay.rows,\n  );\n  // Cleanup\n  rgbaPlanes.delete();\n  mask.delete();\n  overlay.delete();\n  M.delete();\n  borderMask.delete();\n\n  // TODO: only return one image here.\n  return { overlayImageData, binaryImageData: overlayImageData };\n};\n\nexport const getScoreAndOverlayForSegmentationAndImageData = (\n  targetImageData,\n  segmentation,\n  flipped,\n) => {\n  // Create a visualization of the new segmentation.\n  const segmentationMask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n  let rgbaPlanes = new cv.MatVector();\n  let segOverlay = cv.Mat.zeros(segmentationMask.rows, segmentationMask.cols, cv.CV_8UC4);\n  cv.split(segOverlay, rgbaPlanes);\n  // Fill green channel and alpha using the mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], segmentationMask); // Green\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], segmentationMask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(\n    segmentationMask,\n    borderMask,\n    M,\n    anchor,\n    1,\n    cv.BORDER_CONSTANT,\n    cv.morphologyDefaultBorderValue(),\n  );\n  cv.subtract(borderMask, segmentationMask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, segOverlay);\n  const segOverlayImageData = new ImageData(\n    new Uint8ClampedArray(segOverlay.data),\n    segOverlay.cols,\n    segOverlay.rows,\n  );\n\n  // Create a mask from the targetImageData.\n  let targetData = cv.matFromImageData(targetImageData);\n  let targetRgbaPlanes = new cv.MatVector();\n  cv.split(targetData, targetRgbaPlanes);\n\n  // Merge the two images.\n  let mergedImage = new cv.Mat();\n  cv.addWeighted(segOverlay, 0.5, targetData, 0.5, 0.0, mergedImage);\n  const mergedOverlayImageData = new ImageData(\n    new Uint8ClampedArray(mergedImage.data),\n    mergedImage.cols,\n    mergedImage.rows,\n  );\n\n  const { data, width, height } = segmentation;\n  const bytes = new Uint8ClampedArray(segmentation.data.length * 4);\n\n  let union = 0;\n  let intersection = 0;\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    const isPerson = data[i];\n    const isInPolygon = !!targetImageData.data[bytes_index * 4 + 2];\n    const isIntersection = isInPolygon && isPerson;\n    const isMissedPolygon = isInPolygon && !isPerson;\n    const isPersonOutOfPolygon = !isInPolygon && isPerson;\n    const isInteresting = isPersonOutOfPolygon || isIntersection || isMissedPolygon;\n\n    if (isIntersection) intersection++;\n    if (isPerson || isInPolygon) union++;\n\n    bytes[bytes_index * 4] = isPersonOutOfPolygon ? 255 : 0; // red\n    bytes[bytes_index * 4 + 1] = isIntersection ? 255 : 0; // green\n    bytes[bytes_index * 4 + 2] = isMissedPolygon ? 255 : 0; // blue\n    bytes[bytes_index * 4 + 3] = isInteresting ? 128 : 0; // alpha\n  }\n\n  const score = Math.round((intersection / (union + 0.0000001)) * 100);\n  // const overlay = new ImageData(bytes, width, height);\n\n  // Cleanup\n  rgbaPlanes.delete();\n  segmentationMask.delete();\n  segOverlay.delete();\n  M.delete();\n  borderMask.delete();\n  mergedImage.delete();\n\n  return { score, targetOverlay: mergedOverlayImageData, segOverlay: segOverlayImageData };\n};\n\nexport const drawPolygon = (ctx, polygon, color = 'rgba(255, 255, 255, 0.5)') => {\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(polygon[0][0], polygon[0][1]);\n  const vertices = polygon.slice(1);\n  vertices.forEach(([x, y]) => {\n    ctx.lineTo(x, y);\n  });\n  ctx.closePath();\n  ctx.fill();\n};\n\nexport const flipPolygon = (polygon, width) => polygon.map(([x, y]) => [width - x, y]);\n\nexport const inflatePolygon = (width, height) => (polygon) =>\n  polygon.map(([x, y]) => [x * width, y * height]);\n\nexport const saveAs = (blob, filename) => {\n  if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n    return navigator.msSaveOrOpenBlob(blob, filename);\n  } else if (typeof navigator.msSaveBlob !== 'undefined') {\n    return navigator.msSaveBlob(blob, filename);\n  } else {\n    var elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    elem.style = 'display:none;opacity:0;color:transparent;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n      elem.click();\n    } else {\n      elem.target = '_blank';\n      elem.dispatchEvent(\n        new MouseEvent('click', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n        }),\n      );\n    }\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getMaskName = (num) => `set${num}.zip`;\n","import { useMemo, useRef, useCallback, useState } from 'react';\n\nimport { useZip } from '../zip';\nimport { useIterateMask } from '../iterateMask';\nimport { useWebcam } from '../../context/webcam';\nimport { getScoreAndOverlayForSegmentationAndImageData } from '../../lib/util';\n\nexport const useSimpleGame = () => {\n  const promRef = useRef();\n  const webcam = useWebcam();\n  const maskIterator = useIterateMask();\n  const [scores, setScores] = useState([]);\n  const zip = useZip(maskIterator.setMasks);\n  const [progressPercent, setProgressPercent] = useState(0);\n\n  const clearScores = useCallback(() => {\n    setScores([]);\n  }, []);\n\n  const handleLoop = useCallback(\n    async (controller) => {\n      const lapDuration = 3000;\n      if (controller.time.first) {\n        maskIterator.next(); // load the first mask\n        setProgressPercent(0.0);\n        clearScores();\n        controller.useTimer({\n          maxLaps: maskIterator.getNumMasks(),\n          printSeconds: true,\n          announceSeconds: true,\n          lapDuration,\n          newLapDelay: 1000,\n          onLap: ({ predict, time, stop }) => {\n            const target = maskIterator.maskRef.current;\n\n            // we actually shouldn't reach this,\n            // because the maxLaps should trigger a stop first\n            if (!target) return stop();\n\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const {\n                score,\n                targetOverlay,\n                // segOverlay,\n              } = getScoreAndOverlayForSegmentationAndImageData(target, segmentation, webcam.flipX);\n\n              const dataUri = webcam.imageDataToDataUri(targetOverlay);\n\n              setScores((state) => [...state, { score, dataUri }]);\n\n              webcam.clearCanvas();\n              maskIterator.next();\n            });\n          },\n        });\n      } else {\n        // Set the progress\n        const progress_percent = Math.min(controller.time.lapTime / lapDuration, 1.0);\n        setProgressPercent(Math.round(progress_percent * 100));\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [webcam, maskIterator, clearScores],\n  );\n\n  return useMemo(\n    () => ({\n      zip,\n      scores,\n      handleLoop,\n      clearScores,\n      progressPercent,\n      reset: maskIterator.reset,\n      ready: maskIterator.hasMasks,\n      setMasks: maskIterator.setMasks,\n    }),\n    [zip, scores, progressPercent, handleLoop, clearScores, maskIterator],\n  );\n};\n","import { useMemo, useRef, useState, useCallback } from 'react';\n\n// set masks, iterate masks, retain ref to current mask\nexport const useIterateMask = () => {\n  const masksRef = useRef([]);\n  const maskRef = useRef(null);\n  const maskIdxRef = useRef(0);\n  const [masks, _setMasks] = useState([]);\n\n  const setMasks = useCallback((newMasks) => {\n    _setMasks(newMasks);\n    masksRef.current = typeof newMasks === 'function' ? newMasks(masksRef.current) : newMasks;\n  }, []);\n\n  const reset = useCallback(() => {\n    maskIdxRef.current = 0;\n    maskRef.current = null;\n  }, []);\n\n  const next = useCallback(() => {\n    const currentMask = masksRef.current[maskIdxRef.current];\n\n    if (!currentMask) {\n      maskRef.current = null;\n      maskIdxRef.current = 0;\n\n      return null;\n    }\n\n    maskRef.current = currentMask;\n    maskIdxRef.current++;\n\n    return currentMask;\n  }, []);\n\n  const getNumMasks = useCallback(() => masksRef.current.length, []);\n\n  return useMemo(\n    () => ({\n      next,\n      reset,\n      maskRef,\n      setMasks,\n      getNumMasks,\n      hasMasks: !!masks.length,\n    }),\n    [next, masks, reset, setMasks, getNumMasks],\n  );\n};\n","import JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport { useCallback, useState, useMemo } from 'react';\n\nimport { getMaskName } from '../lib/util';\nimport { useWebcam } from '../context/webcam';\nimport { numShippedMasks } from '../lib/constants';\n\nexport const useZip = (setMasks) => {\n  const webcam = useWebcam();\n  const [zipLoading, setZipLoading] = useState(false);\n\n  const loadZippedMasks = useCallback(\n    async (file) => {\n      const data = await JSZip.loadAsync(file);\n      const binaryMasks = await Promise.all(\n        data\n          .filter((name) => name.endsWith('.png'))\n          .map(({ name }) => data.file(name).async('base64')),\n      );\n\n      try {\n        const masksAsImageData = await Promise.all(\n          binaryMasks.map((b64) => webcam.dataUriToImageData(`data:image/png;base64,${b64}`)),\n        );\n        setMasks(masksAsImageData);\n      } catch {}\n\n      setZipLoading(false);\n    },\n    [setMasks, webcam],\n  );\n\n  const handleZipInputChange = useCallback(\n    async ([file]) => {\n      if (file.type !== 'application/zip') {\n        console.error('Expected a zip file but got', file.type);\n        return;\n      }\n\n      setZipLoading(true);\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadPreparedMasks = useCallback(\n    async (filename) => {\n      if (!filename) return;\n\n      setZipLoading(true);\n      const file = await new JSZip.external.Promise((resolve, reject) => {\n        JSZipUtils.getBinaryContent(process.env.PUBLIC_URL + `/masks/${filename}`, (err, data) => {\n          if (err) reject(err);\n          else resolve(data);\n        });\n      });\n\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadRandomMaskSet = useCallback(async () => {\n    const num = Math.floor(Math.random() * numShippedMasks);\n    return handleLoadPreparedMasks(getMaskName(num + 1));\n  }, [handleLoadPreparedMasks]);\n\n  const data = useMemo(\n    () => ({\n      loading: zipLoading,\n      handleZipInputChange,\n      handleLoadRandomMaskSet,\n      handleLoadPreparedMasks,\n    }),\n    [zipLoading, handleZipInputChange, handleLoadPreparedMasks, handleLoadRandomMaskSet],\n  );\n\n  return data;\n};\n","import JSZip from 'jszip';\nimport imageDataUri from 'image-data-uri';\nimport { useRef, useCallback, useState } from 'react';\n\nimport { saveAs, getSegmentationeOverlayAndBinaryImageData } from '../../lib/util';\nimport { useMemo } from 'react';\n\nexport const useCaptureMasks = () => {\n  const promRef = useRef();\n  const [masks, setMasks] = useState([]);\n\n  const removeMask = useCallback(({ currentTarget: { name: idx } }) => {\n    // the plus coerces the idx to a number\n    setMasks((state) => state.filter((_, index) => index !== +idx));\n  }, []);\n\n  const removeAllMasks = useCallback(() => {\n    setMasks([]);\n  }, []);\n\n  const downloadMasks = useCallback(() => {\n    const zip = new JSZip();\n    const img = zip.folder('masks');\n    masks.forEach(({ overlay: mask }, idx) => {\n      img.file(`mask-${idx}.png`, imageDataUri.decode(mask).dataBase64, { base64: true });\n    });\n\n    zip.generateAsync({ type: 'blob' }).then((zipFile) => saveAs(zipFile, 'masks.zip'));\n  }, [masks]);\n\n  const handleLoop = useCallback(async (controller) => {\n    if (controller.time.first) {\n      controller.useTimer({\n        printSeconds: true,\n        announceSeconds: true,\n        lapDuration: 3000,\n        newLapDelay: 1000,\n        // run a single prediction before starting the lap to ensure things roll smoothly\n        onBeforeStartLap: async ({ predict, webcam, time, stop }) => {\n          return predict();\n        },\n        onLap: ({ predict, webcam, time, stop }) => {\n          promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n            const { overlayImageData, binaryImageData } = getSegmentationeOverlayAndBinaryImageData(\n              segmentation,\n              webcam.flipX,\n            );\n            const overlayDataUri = webcam.imageDataToDataUri(overlayImageData);\n            const binaryDataUri = webcam.imageDataToDataUri(binaryImageData);\n\n            webcam.clearCanvas();\n            webcam.ctx.putImageData(overlayImageData, 0, 0);\n            setMasks((state) => [...state, { overlay: overlayDataUri, binary: binaryDataUri }]);\n          });\n        },\n      });\n    }\n\n    // return a cleanup function to clear the canvas\n    // use a promise ref since we are capturing asynchronously\n    // if first promise not initialized, clear canvas right away\n    return () => {\n      if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n      else controller.webcam.clearCanvas();\n    };\n  }, []);\n\n  return useMemo(\n    () => ({\n      masks,\n      handleLoop,\n      removeMask,\n      downloadMasks,\n      removeAllMasks,\n    }),\n    [masks, handleLoop, removeMask, downloadMasks, removeAllMasks],\n  );\n};\n","import classnames from 'classnames';\nimport React, { useRef, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport Options from '../../Options';\nimport FileUpload from '../../FileUpload';\nimport GameSelect from '../../GameSelect';\nimport ProgressBar from '../../ProgressBar';\nimport ScoreResults from '../../ScoreResults';\nimport CapturedMasks from '../../CapturedMasks';\n\nimport { useGame } from '../../Game';\nimport { scoreToColor } from '../../../lib/score';\nimport { useWebcam } from '../../../context/webcam';\nimport { usePractice } from '../../../hooks/screenHooks/practice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    overflow: 'scroll',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  captures: {\n    width: '100%',\n    '& > div': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nconst Practice = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n  const webcam = useWebcam();\n  const containerRef = useRef();\n  const practice = usePractice(game);\n\n  const {\n    loopType,\n    simpleGame,\n    captureMasks,\n    handleClickGame,\n    handleStartRandomGame,\n    handlePlayCapturedMasks,\n    handleClickCaptureMasks,\n  } = practice;\n\n  const { loop } = game;\n\n  const timerColor = scoreToColor(100 - simpleGame.progressPercent);\n\n  const buttons = useMemo(\n    () => [\n      {\n        props: {\n          key: 'play/stop',\n          onClick: handleClickGame,\n          disabled: !loop.ready || (!loop.looping && !simpleGame.ready),\n          children: loop.looping ? 'Stop' : 'Play',\n        },\n      },\n      {\n        props: {\n          key: 'playRandom',\n          color: 'secondary',\n          onClick: handleStartRandomGame,\n          disabled: !loop.ready || loop.looping,\n          children: 'Play Random',\n        },\n      },\n      {\n        props: {\n          containerRef,\n          key: 'chooseMasks',\n          disabled: !loop.ready || loop.looping,\n          handleClick: simpleGame.zip.handleLoadPreparedMasks,\n        },\n        Component: GameSelect,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'loadMasks',\n          variant: 'contained',\n          onChange: simpleGame.zip.handleZipInputChange,\n          disabled: !loop.ready || loop.looping || simpleGame.zip.loading,\n          children: simpleGame.loading ? 'Loading...' : 'Load Masks',\n        },\n        Component: FileUpload,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'captureMasks',\n          onClick: handleClickCaptureMasks,\n          disabled: !loop.ready || loop.looping,\n          children: 'Capture Masks',\n          color: 'default',\n        },\n        visible: !loop.looping,\n      },\n    ],\n    [\n      loop.ready,\n      loop.looping,\n      handleClickGame,\n      simpleGame.ready,\n      simpleGame.loading,\n      handleStartRandomGame,\n      simpleGame.zip.loading,\n      handleClickCaptureMasks,\n      simpleGame.zip.handleZipInputChange,\n      simpleGame.zip.handleLoadPreparedMasks,\n    ],\n  );\n\n  return (\n    <div\n      className={classnames(classes.root, {\n        [classes.overlay]: !loop.looping,\n        [classes.rootTop]: !!loop.looping,\n        [classes.rootApart]:\n          !!(simpleGame.scores?.length || captureMasks.masks?.length) && webcam.isFullScreen,\n      })}\n    >\n      <div\n        className={classnames({\n          [classes.optionsTop]: !!loop.looping,\n        })}\n        ref={containerRef}\n      >\n        {loop.looping ? (\n          <Options\n            offset={70}\n            buttons={[\n              {\n                props: {\n                  key: 'stop',\n                  onClick: handleClickGame,\n                  children: 'Stop',\n                },\n              },\n            ]}\n          />\n        ) : (\n          <Options buttons={buttons} />\n        )}\n        {loop.looping && loopType === 'play' && (\n          <div className={classes.progress}>\n            <ProgressBar color={timerColor} completed={100 - simpleGame.progressPercent} />\n          </div>\n        )}\n      </div>\n      {webcam.isFullScreen && !loop.looping && (\n        <div className={classes.captures}>\n          <ScoreResults results={simpleGame.scores} handleClose={simpleGame.clearScores} />\n          <CapturedMasks captureMasks={captureMasks} handlePlay={handlePlayCapturedMasks} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Practice;\n","import { useMemo, useCallback, useState, useEffect } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\n\nexport const usePractice = (game) => {\n  const { loop } = game;\n  const webcam = useWebcam();\n  const simpleGame = useSimpleGame();\n  const captureMasks = useCaptureMasks();\n  const [loopType, setLoopType] = useState(null);\n\n  useEffect(() => {\n    if (!loop.looping && loopType) {\n      setLoopType(null);\n    }\n  }, [loop.looping, loopType]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(simpleGame.handleLoop);\n      setLoopType('play');\n    }\n  }, [loop, simpleGame]);\n\n  const handleStartRandomGame = useCallback(async () => {\n    if (loop.looping) return;\n\n    await simpleGame.zip.handleLoadRandomMaskSet();\n    handleClickGame();\n  }, [handleClickGame, loop.looping, simpleGame.zip]);\n\n  const handleClickCaptureMasks = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(captureMasks.handleLoop);\n      setLoopType('capture');\n    }\n  }, [loop, captureMasks, simpleGame]);\n\n  const handlePlayCapturedMasks = useCallback(async () => {\n    if (loop.looping) return;\n\n    const masks = await Promise.all(\n      captureMasks.masks.map(({ overlay }) => webcam.dataUriToImageData(overlay)),\n    );\n    simpleGame.setMasks(masks);\n    handleClickGame();\n  }, [captureMasks.masks, simpleGame, webcam, handleClickGame, loop.looping]);\n\n  const practice = useMemo(\n    () => ({\n      loopType,\n      simpleGame,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    }),\n    [\n      loopType,\n      simpleGame,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    ],\n  );\n\n  useEffect(() => {\n    game.setMode(practice);\n  }, [game, practice]);\n\n  return practice;\n};\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\n\nimport Options from './Options';\nimport { screenStatesArrays, wipScreens } from '../lib/screenConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    '& button': {\n      minWidth: 150,\n      marginTop: theme.spacing(2),\n    },\n  },\n  transition: {\n    textAlign: 'center',\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst ChoosePlayers = (props) => {\n  const classes = useStyles();\n\n  const handleSetPlayerMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.setPlayerMode(name);\n    },\n    [props],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.players.map((playerMode) => ({\n        props: {\n          key: playerMode,\n          name: playerMode,\n          children: playerMode,\n          onClick: handleSetPlayerMode,\n          disabled: !!wipScreens[playerMode],\n        },\n      })),\n    [handleSetPlayerMode],\n  );\n\n  return (\n    <div className={classes.root}>\n      <Options buttons={buttons} />\n    </div>\n  );\n};\n\nChoosePlayers.propTypes = {\n  setPlayerMode: PropTypes.func.isRequired,\n};\n\nexport default ChoosePlayers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport SelectGameMode from '../SelectGameMode';\nimport Practice from '../GameScreens/SinglePlayer/Practice';\nimport ChoosePlayers from '../ChoosePlayers';\n\nconst Screens = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: Practice,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: () => 'SURVIVAL Content',\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: () =>\n        'TIME_ATTACK Content',\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: () => 'LOCAL Content',\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: () => 'REMOTE Content',\n    },\n  },\n};\n\nconst ScreenContent = (props) => {\n  const { screen, mode, players } = props.screen.state;\n\n  if (screen === screenStates.screen.DEFAULT)\n    return <ChoosePlayers setPlayerMode={props.screen.handlers.setPlayerMode} />;\n  if (mode === screenStates.mode.DEFAULT) return <SelectGameMode screen={props.screen} />;\n\n  const Content = Screens[screen]?.[players]?.[mode] || Null;\n\n  return <Content />;\n};\n\nScreenContent.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenContent;\n","import { useReducer, useMemo, useCallback } from 'react';\n\nimport {\n  initialScreenState,\n  screenStates,\n  screenTypes,\n  screenStatesArrays,\n} from '../lib/screenConstants';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case screenTypes.SET_GAME_MODE:\n      return { ...state, mode: action.value };\n    case screenTypes.SET_PLAYER_MODE:\n      return { ...state, screen: screenStates.screen.PLAY, players: action.value };\n    case screenTypes.RESET:\n      return initialScreenState;\n    case screenTypes.REVERSE: {\n      const newState = { ...state };\n      if (state.mode) {\n        newState.mode = screenStates.mode.DEFAULT;\n      } else if (state.screen !== screenStates.screen.DEFAULT) {\n        newState.screen = screenStates.screen.DEFAULT;\n        newState.players = screenStates.players.DEFAULT;\n      } else return state;\n\n      return newState;\n    }\n    default:\n      throw new Error(`Invalid action: ${action.type}`);\n  }\n};\n\nexport const useScreenController = () => {\n  const [screenState, dispatch] = useReducer(reducer, initialScreenState);\n\n  const setScreen = useCallback((screen) => {\n    if (!screenStatesArrays.screen.includes(screen)) {\n      throw new Error(`Unknown screen: ${screen}`);\n    }\n\n    dispatch({ type: screenTypes.SET_SCREEN, value: screen });\n  }, []);\n\n  const setGameMode = useCallback((gameMode) => {\n    if (\n      ![\n        ...screenStatesArrays.mode[screenStates.players.SINGLE_PLAYER],\n        ...screenStatesArrays.mode[screenStates.players.MULTIPLAYER],\n      ].includes(gameMode)\n    ) {\n      throw new Error(`Unknown gameMode: ${gameMode}`);\n    }\n\n    dispatch({ type: screenTypes.SET_GAME_MODE, value: gameMode });\n  }, []);\n\n  const setPlayerMode = useCallback((playerMode) => {\n    if (!screenStatesArrays.players.includes(playerMode)) {\n      throw new Error(`Unknown playerMode: ${playerMode}`);\n    }\n\n    dispatch({ type: screenTypes.SET_PLAYER_MODE, value: playerMode });\n  }, []);\n\n  const resetState = useCallback(() => {\n    dispatch({ type: screenTypes.RESET });\n  }, []);\n\n  const reverseState = useCallback(() => {\n    dispatch({ type: screenTypes.REVERSE });\n  }, []);\n\n  const handlers = useMemo(\n    () => ({\n      setScreen,\n      resetState,\n      setGameMode,\n      reverseState,\n      setPlayerMode,\n    }),\n    [setScreen, resetState, setGameMode, reverseState, setPlayerMode],\n  );\n\n  return [screenState, handlers];\n};\n","import { useRef, useState, useEffect, useCallback } from 'react';\n\nimport { useWebcam } from '../context/webcam';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BodyPixWorker from 'workerize-loader!../worker/bodyPix';\n\nconst bodyPixWorker = BodyPixWorker();\n\nexport const useBodyPixController = () => {\n  const webcam = useWebcam();\n\n  const loadRef = useRef();\n  const preloadRef = useRef();\n  const [netReady, setNetReady] = useState(false);\n  const [netPreloaded, setNetPreloaded] = useState(false);\n\n  // load the model on the first mount\n  useEffect(() => {\n    if (!loadRef.current && webcam.ready) {\n      loadRef.current = true;\n      bodyPixWorker\n        .load()\n        .then(() => {\n          console.log('BodyPix loaded');\n          setNetReady(true);\n        })\n        .catch(console.error);\n    }\n  }, [webcam]);\n\n  // TODO: Make it possible to tweak bodyPix settings\n  const predict = useCallback(async () => {\n    if (!netReady) {\n      throw new Error('Please wait for the model to load before calling \"predict\"');\n    }\n\n    const segmentation = await bodyPixWorker.predict(webcam.getVideoAsImageData());\n\n    // console.log({segmentation});\n\n    return segmentation;\n  }, [netReady, webcam]);\n\n  // pre load the model by running a first prediction\n  useEffect(() => {\n    if (netReady && !preloadRef.current && !netPreloaded) {\n      preloadRef.current = true;\n      predict().then(() => {\n        setNetPreloaded(true);\n      });\n    }\n  }, [predict, netReady, netPreloaded]);\n\n  // don't return the prediction fn until the model has processed the first frame\n  return netPreloaded ? predict : null;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useBodyPixController } from '../hooks/bodyPixController';\n\nexport const bodyPixContext = createContext();\n\nexport const useBodyPix = () => {\n  const state = useContext(bodyPixContext);\n\n  // specifically check for undefined, not just truthy\n  // bc bodyPixController returns null before it is ready\n  if (state === undefined) {\n    throw new Error('useBodyPix must be used within a BodyPixProvider');\n  }\n\n  return state;\n};\n\nconst BodyPixProvider = ({ children }) => {\n  const context = useBodyPixController();\n\n  return <bodyPixContext.Provider value={context}>{children}</bodyPixContext.Provider>;\n};\n\nexport default BodyPixProvider;\n","import { useRef, useState, useCallback, useMemo } from 'react';\n\nimport { useLoopTime } from './loopTime';\nimport { useLapTimer } from './lapTimer';\nimport { useWebcam } from '../context/webcam';\nimport { useBodyPix } from '../context/bodyPix';\n\nexport const useLoop = () => {\n  const webcam = useWebcam();\n  const predict = useBodyPix();\n\n  const loopTime = useLoopTime();\n  const lapTimer = useLapTimer();\n\n  const loopingRef = useRef();\n  const handleLoopRef = useRef();\n  const [looping, setLooping] = useState(false);\n\n  // set the flags to start the loop\n  const setStartLoop = useCallback(() => {\n    // we clear the lapTimer here as opposed to after \"stopping\" the loop to avoid async errors\n    lapTimer.clear();\n    loopTime.reset();\n    loopingRef.current = true;\n    setLooping(true);\n  }, [loopTime, lapTimer]);\n\n  // clear loop flags to trigger end of loop\n  // not synchronous, loop will terminate on next pass\n  const setStopLoop = useCallback(() => {\n    loopingRef.current = false;\n    setLooping(false);\n  }, []);\n\n  // fn passed to requestAnimationFrame\n  // keeps time and runs handleLoop fn passed to start\n  const loop = useCallback(\n    async (timestamp) => {\n      const time = loopTime.update(timestamp);\n      const cleanup = await handleLoopRef.current({\n        time,\n        webcam,\n        predict,\n        useTimer: lapTimer.useTimer,\n        stop: setStopLoop,\n      });\n\n      lapTimer.handleLap({\n        time,\n        webcam,\n        predict,\n        stop: setStopLoop,\n      });\n\n      if (loopingRef.current) {\n        requestAnimationFrame(loop);\n      } else {\n        setStopLoop();\n        handleLoopRef.current = null;\n        webcam.clearCanvas();\n        if (cleanup) cleanup();\n      }\n    },\n    [webcam, predict, lapTimer, loopTime, setStopLoop],\n  );\n\n  const start = useCallback(\n    async (handleLoop) => {\n      if (loopingRef.current) {\n        throw new Error('The loop is already running');\n      } else if (!predict) {\n        throw new Error('Please wait for BodyPix to load...');\n      } else if (!handleLoop) {\n        throw new Error('A loop handler is required when calling loop.start');\n      }\n\n      handleLoopRef.current = handleLoop;\n      setStartLoop();\n\n      return requestAnimationFrame(loop);\n    },\n    [loop, predict, setStartLoop],\n  );\n\n  const controller = useMemo(\n    () => ({\n      start,\n      looping,\n      stop: setStopLoop,\n      ready: predict && webcam.ready,\n    }),\n    [start, predict, looping, setStopLoop, webcam.ready],\n  );\n\n  return controller;\n};\n","import { useCallback, useRef, useMemo } from 'react';\n\nexport const useLoopTime = () => {\n  const lastTimeRef = useRef();\n  const startTimeRef = useRef();\n  const totalFramesRef = useRef();\n  const fpsSumRef = useRef();\n  const lapTime = useRef();\n\n  const reset = useCallback((timestamp = 0) => {\n    startTimeRef.current = timestamp;\n    lastTimeRef.current = timestamp;\n    fpsSumRef.current = 0;\n    totalFramesRef.current = 0;\n    lapTime.current = 0;\n  }, []);\n\n  const resetLapTime = useCallback(() => {\n    lapTime.current = 0;\n  }, []);\n\n  const update = useCallback(\n    (timestamp) => {\n      let first = false;\n      if (!startTimeRef.current) {\n        first = true;\n        reset(timestamp);\n      }\n\n      const deltaTime = timestamp - lastTimeRef.current;\n      lapTime.current += deltaTime;\n\n      let fps = 0;\n      let avgFps = 0;\n\n      // start calculating after the first loop to avoid dividing by 0\n      if (totalFramesRef.current++) {\n        fps = 1000 / deltaTime;\n        avgFps = fpsSumRef.current / totalFramesRef.current;\n        fpsSumRef.current += fps;\n      }\n\n      const elapsed = timestamp - startTimeRef.current;\n      lastTimeRef.current = timestamp;\n\n      return {\n        first,\n        timestamp,\n        fps,\n        avgFps,\n        elapsed,\n        frames: totalFramesRef.current,\n        lapTime: lapTime.current,\n        resetLapTime,\n      };\n    },\n    [reset, resetLapTime],\n  );\n\n  const controller = useMemo(() => ({ update, reset }), [update, reset]);\n\n  return controller;\n};\n","import { useCallback, useRef, useMemo } from 'react';\nimport { useAudio } from '../context/audio';\n\nexport const useLapTimer = () => {\n  const lapTimer = useRef();\n  const {\n    handlers: { speech },\n  } = useAudio();\n\n  const useTimer = useCallback(\n    ({\n      onBeforeStartLap,\n      onLap,\n      onEnd,\n      maxLaps,\n      lapDuration = 3000,\n      postLapDelay = 1000,\n      printSeconds = true,\n      announceSeconds = true,\n    } = {}) => {\n      if (onLap && !lapTimer.current) {\n        lapTimer.current = {\n          onBeforeStartLap,\n          onBeforeComplete: false,\n          onBeforeStarted: false,\n          onLap,\n          onEnd,\n          maxLaps,\n          numLaps: 0,\n          lapDuration,\n          postLapDelay,\n          printSeconds,\n          announceSeconds,\n        };\n      }\n    },\n    [],\n  );\n\n  const handleLap = useCallback(\n    async ({ time, webcam, predict, stop }) => {\n      // handleLoop called useTimer\n      if (lapTimer.current) {\n        // if they've provided an initialization function,\n        // run it and don't start the first lap until it resolves\n        if (lapTimer.current.onBeforeStartLap && !lapTimer.current.onBeforeComplete) {\n          if (lapTimer.current.onBeforeStarted) return;\n          else {\n            lapTimer.current.onBeforeStarted = true;\n\n            await lapTimer.current.onBeforeStartLap({ time, webcam, predict, stop });\n            lapTimer.current.onBeforeComplete = true;\n            time.resetLapTime();\n            return;\n          }\n        }\n\n        if (lapTimer.current.maxLaps && lapTimer.current.numLaps === lapTimer.current.maxLaps) {\n          if (lapTimer.current.onEnd) {\n            await lapTimer.current.onEnd({ time, webcam, predict, stop });\n          }\n\n          lapTimer.current = null;\n          return stop();\n        }\n\n        const secondsPassed = Math.floor(time.lapTime / 1000);\n\n        // we get a single instance of -1 so set min to 0\n        const countdown = Math.max(lapTimer.current.lapDuration / 1000 - secondsPassed, 0);\n\n        // display the integer seconds remaining in the lap in the top left corner of the canvas\n        if (lapTimer.current.printSeconds) {\n          const { ctx } = webcam;\n          ctx.font = '40px Arial';\n          ctx.fillStyle = 'white';\n          ctx.clearRect(0, 0, 50, 50);\n\n          if (countdown) {\n            // don't print if 0\n            ctx.fillText(countdown, 10, 40);\n          }\n        }\n\n        // announce the current countdown time (if not announced yet and requested)\n        if (\n          countdown &&\n          lapTimer.current.announceSeconds &&\n          lapTimer.current.lastSpeech !== countdown\n        ) {\n          lapTimer.current.lastSpeech = countdown;\n          speech.say(`${countdown}`);\n        }\n\n        // Once we've reached the end of the lap\n        // fire the provided onLap handler and set handlerCalled so we don't call it again until next lap\n        if (time.lapTime >= lapTimer.current.lapDuration && !lapTimer.current.handlerCalled) {\n          lapTimer.current.numLaps++;\n          lapTimer.current.handlerCalled = true;\n          lapTimer.current.handlerResolved = false;\n          await lapTimer.current.onLap({\n            time,\n            webcam,\n            predict,\n            stop,\n            lapNum: lapTimer.current.numLaps,\n          });\n          lapTimer.current.handlerResolved = true;\n        } else if (\n          time.lapTime >= lapTimer.current.lapDuration + lapTimer.current.postLapDelay &&\n          lapTimer.current.handlerResolved\n        ) {\n          // we've already called the lap handler\n          // and the handler has resolved\n          // and delayed an additional amount of time\n          // so we reset the lapTime and mark the handler as ready to be called again\n          time.resetLapTime();\n          lapTimer.current.handlerCalled = false;\n          lapTimer.current.handlerResolved = false;\n        }\n      }\n    },\n    [speech],\n  );\n\n  const clear = useCallback(() => {\n    lapTimer.current = null;\n  }, []);\n\n  return useMemo(\n    () => ({\n      clear,\n      useTimer,\n      handleLap,\n    }),\n    [clear, useTimer, handleLap],\n  );\n};\n","import { useMemo, useState } from 'react';\n\nimport { useScreenController } from './screenController';\nimport { useEffect } from 'react';\nimport { screenStates } from '../lib/screenConstants';\nimport { useLoop } from './loop';\n\nexport const useGameController = () => {\n  const loop = useLoop();\n  const [mode, setMode] = useState(null);\n  const [screenState, screenHandlers] = useScreenController();\n\n  useEffect(() => {\n    if (\n      (screenState.screen === screenStates.screen.DEFAULT ||\n        screenState.mode === screenStates.mode.DEFAULT) &&\n      mode\n    ) {\n      setMode(null);\n    }\n  }, [screenState, mode]);\n\n  const gameController = useMemo(\n    () => ({\n      screen: {\n        state: screenState,\n        handlers: screenHandlers,\n      },\n      mode,\n      loop,\n      setMode,\n    }),\n    [screenState, screenHandlers, mode, loop],\n  );\n\n  return gameController;\n};\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { memo, createContext, useContext } from 'react';\n\nimport Webcam from './Webcam';\nimport GlobalHeader from './GlobalHeader';\nimport ScreenHeader from './GameScreens/ScreenHeader';\nimport ScreenFooter from './GameScreens/ScreenFooter';\nimport ScreenContent from './GameScreens/ScreenContent';\n\nimport { useGameController } from '../hooks/game';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst gameContext = createContext();\n\nexport const useGame = () => {\n  const state = useContext(gameContext);\n\n  if (!state) {\n    throw new Error('useGame must be called from inside the <Game> component.');\n  }\n\n  return state;\n};\n\nconst Game = ({ webcam }) => {\n  const classes = useStyles();\n\n  const game = useGameController();\n\n  return (\n    <gameContext.Provider value={game}>\n      <GlobalHeader\n        mode={game.screen.state.mode}\n        screen={game.screen.state.screen}\n        goHome={game.screen.handlers.resetState}\n        goBack={game.screen.handlers.reverseState}\n      />\n      <div className={classes.header}>\n        <ScreenHeader screenState={game.screen.state} />\n      </div>\n      <Webcam overlay={!game.screen.state.mode}>\n        <ScreenContent screen={game.screen} />\n      </Webcam>\n      <ScreenFooter screen={game.screen} />\n    </gameContext.Provider>\n  );\n};\n\nGame.propTypes = {\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default memo(Game);\n","import React from 'react';\n\nconst NoWebcam = () => (\n  <div>Sorry, but this game requires a webcam. Please plug in a webcam and refresh the page.</div>\n);\n\nexport default NoWebcam;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useRef, useEffect, memo } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\n\nimport Game from '../Game';\nimport NoWebcam from './NoWebcam';\nimport { maxWidth } from '../../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: `0 auto ${theme.spacing(2)}px`,\n  },\n}));\n\nconst Main = (props) => {\n  const webcam = useWebcam();\n  const { currentDeviceId, hasVideo, cameras, autoStartDeviceId } = webcam;\n\n  const startedRef = useRef();\n\n  useEffect(() => {\n    if (\n      hasVideo &&\n      cameras.length &&\n      (currentDeviceId || autoStartDeviceId) &&\n      !startedRef.current\n    ) {\n      startedRef.current = true;\n\n      webcam.start().catch(console.error);\n    }\n  }, [hasVideo, cameras, currentDeviceId, autoStartDeviceId]); // eslint-disable-line\n\n  const classes = useStyles();\n\n  // console.log(\n  //   !hasVideo\n  //     ? 'no webcam'\n  //     : !cameras.length || currentDeviceId === undefined\n  //     ? 'webcams is loading'\n  //     : !currentDeviceId\n  //     ? 'no webcam chosen'\n  //     : 'rendering game',\n  // );\n\n  return (\n    <main className={classes.root}>{!hasVideo ? <NoWebcam /> : <Game webcam={webcam} />}</main>\n  );\n};\n\nMain.propTypes = {\n  cvReady: PropTypes.bool.isRequired,\n};\n\nexport default memo(Main);\n","import Particles from 'particlesjs';\nimport { hot } from 'react-hot-loader';\nimport { CssBaseline } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/deepPurple';\n\nimport Main from '../components/Main';\nimport WebcamProvider from '../context/webcam';\nimport BodyPixProvider from '../context/bodyPix';\nimport AudioProvider from '../context/audio';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary,\n  },\n});\n\nfunction App() {\n  const [cvReady, setCvReady] = useState(false);\n  const particlesRef = useRef();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (window.cvReady) {\n        setCvReady(true);\n        clearInterval(interval);\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!particlesRef.current) {\n      particlesRef.current = true;\n      Particles.init({\n        selector: '.background',\n      });\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <WebcamProvider>\n        <BodyPixProvider>\n          <AudioProvider>\n            <>\n              <CssBaseline />\n              <Main cvReady={cvReady} />\n            </>\n          </AudioProvider>\n        </BodyPixProvider>\n      </WebcamProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default process.env.NODE_ENV === 'production' ? App : hot(module)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './reset.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}